openapi: 3.0.1
info:
  title: Nutanix Virtual Machine Management APIs
  description: Manage the life-cycle of virtual machines hosted on Nutanix
  version: "4.0"
  x-logo:
    altText: Vmm Logo
    url: https://developers.nutanix.com/api/v1/namespaces/vmm/images/vmm-logo-img.svg
  x-repo-name: vmm
servers:
- url: "https://{pc-ip}:9440/api"
security:
- basicAuthScheme: []
- apiKeyAuthScheme: []
tags:
- name: Templates
  description: |
    It enables the creation and management of templates from AHV virtual machines, as well as the deployment of VMs from these templates across multiple clusters. These templates include versioned configurations and disks, which can be replicated to other clusters when necessary.
- name: Images
  description: |
    It enables the creation of images (from URLs, objects or existing VM disks) and the management of them, which can be used to create VM disks for virtual machines. Additionally, it allows the downloading of existing images.
  x-displayName: Images
- name: ImagePlacementPolicies
  description: |
    It enables the creation and management of placement policies for image entities. Additionally, it allows the suspension and resumption of these policies. These policies ensure that images are placed on the targeted PEs according to the specified policies.
  x-displayName: Image Placement Policies
- name: ImageRateLimitPolicies
  description: |
    It enables the creation and management of the rate limit policies for image entities. Additionally, it allows viewing the effective rate limit policy on all PEs. These policies ensure that bandwidth on the targeted PEs is used according to the policy when creating an image or while copying it from one PE to another.
  x-displayName: Image Rate Limit Policies
- name: Vm
  description: |
    A virtual machine (VM) is a digital environment that operates as a virtual compute resource on a physical server. It uses software to run and deploy applications instead of a physical computer system. One server or host can have many VMs or guests running at the same time. The APIs under VM are used for creating and managing virtual machines on AHV.
  x-displayName: VMs
- name: EsxiVm
  description: |
    The ESXi VM APIs are used to manage virtual machines on ESXi.
  x-displayName: ESXi VMs
- name: Stats
  description: |
    The APIs provide functionality to fetch statistics for AHV Virtual machines. Users can utilize the list/get VM stats APIs to retrieve comprehensive statistics, including specific metrics for disks and NICs attached to the VMs. The APIs support querying data within a specified time range by allowing users to specify start and end times. In addition, users can specify the sample interval, apply filters, and perform various aggregations such as AVG, SUM, COUNT, MIN, and MAX on the retrieved data.
  x-displayName: Stats
- name: EsxiStats
  description: |
    The APIs provide functionality to fetch statistics for ESXi Virtual machines. Users can utilize the list/get VM stats APIs to retrieve comprehensive statistics, including specific metrics for disks and NICs attached to the VMs. The APIs support querying data within a specified time range by allowing users to specify start and end times. In addition, users can specify the sample interval, apply filters, and perform various aggregations such as AVG, SUM, COUNT, MIN, and MAX on the retrieved data.
  x-displayName: ESXi Stats
- name: VmAntiAffinityPolicies
  description: |
    The VM-VM anti-affinity policy is used to specify anti-affinity between the AHV virtual machines. The VM-VM anti-affinity policy keeps the specified virtual machines apart in such a way that when a problem occurs with one host, you should not lose both the virtual machines. The VM-VM anti-affinity policy APIs are used to manage these policies.
  x-displayName: VM-VM Anti-Affinity Policies
- name: VmHostAffinityPolicies
  description: APIs for managing VM-Host Affinity Policies.
  x-displayName: VM-Host Affinity Policies
paths:
  /vmm/v4.0/esxi/stats/vms:
    get:
      tags:
      - EsxiStats
      summary: List VM stats for all VMs
      description: "List VM stats for all VMs.  Users can fetch the stats by specifying\
        \ the following params in the request query: 1) '$select': comma-separated\
        \ attributes with the prefix 'stats/', e.g. 'stats/controllerNumIo,stats/hypervisorNumIo'.\
        \ 2) '$startTime': the start time for which stats should be reported, e.g.\
        \ '2023-01-01T12:00:00.000-08:00'; 3) '$endTime': the end time for which stats\
        \ should be reported; 4) '$samplingInterval': the sampling interval in seconds\
        \ at which statistical data should be collected; 5) '$statType': the down-sampling\
        \ operator to use while performing down-sampling on stats data; 6) '$orderby';\
        \ 7) '$page'; 8) '$limit'; and 9) '$filter': the OData filter to use, e.g.\
        \ 'stats/hypervisorCpuUsagePpm gt 100000 and stats/guestMemoryUsagePpm lt\
        \ 2000000.'"
      operationId: listVmStats
      parameters:
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 41
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - stats/checkScore
          - stats/cluster
          - stats/controllerAvgIoLatencyMicros
          - stats/controllerAvgReadIoLatencyMicros
          - stats/controllerAvgReadIoSizeKb
          - stats/controllerAvgWriteIoLatencyMicros
          - stats/controllerAvgWriteIoSizeKb
          - stats/controllerIoBandwidthKbps
          - stats/controllerNumIo
          - stats/controllerNumIops
          - stats/controllerNumRandomIo
          - stats/controllerNumReadIo
          - stats/controllerNumReadIops
          - stats/controllerNumSeqIo
          - stats/controllerNumWriteIo
          - stats/controllerNumWriteIops
          - stats/controllerRandomIoPpm
          - stats/controllerReadIoBandwidthKbps
          - stats/controllerReadIoPpm
          - stats/controllerSeqIoPpm
          - stats/controllerStorageTierSsdUsageBytes
          - stats/controllerTimespanMicros
          - stats/controllerTotalIoSizeKb
          - stats/controllerTotalIoTimeMicros
          - stats/controllerTotalReadIoSizeKb
          - stats/controllerTotalReadIoTimeMicros
          - stats/controllerTotalTransformedUsageBytes
          - stats/controllerUserBytes
          - stats/controllerWriteIoBandwidthKbps
          - stats/controllerWriteIoPpm
          - stats/hypervisorAvgIoLatencyMicros
          - stats/hypervisorCpuReadyTimePpm
          - stats/hypervisorCpuUsagePpm
          - stats/hypervisorIoBandwidthKbps
          - stats/hypervisorMemoryUsagePpm
          - stats/hypervisorNumIo
          - stats/hypervisorNumIops
          - stats/hypervisorNumReadIo
          - stats/hypervisorNumReadIops
          - stats/hypervisorNumReceivedBytes
          - stats/hypervisorNumTransmittedBytes
          - stats/hypervisorNumWriteIo
          - stats/hypervisorNumWriteIops
          - stats/hypervisorReadIoBandwidthKbps
          - stats/hypervisorSwapInRateKbps
          - stats/hypervisorSwapOutRateKbps
          - stats/hypervisorTimespanMicros
          - stats/hypervisorTotalIoSizeKb
          - stats/hypervisorTotalIoTimeMicros
          - stats/hypervisorTotalReadIoSizeKb
          - stats/hypervisorType
          - stats/hypervisorWriteIoBandwidthKbps
          - stats/memoryUsagePpm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - stats/checkScore
          - stats/controllerAvgIoLatencyMicros
          - stats/controllerAvgReadIoLatencyMicros
          - stats/controllerAvgReadIoSizeKb
          - stats/controllerAvgWriteIoLatencyMicros
          - stats/controllerAvgWriteIoSizeKb
          - stats/controllerIoBandwidthKbps
          - stats/controllerNumIo
          - stats/controllerNumIops
          - stats/controllerNumRandomIo
          - stats/controllerNumReadIo
          - stats/controllerNumReadIops
          - stats/controllerNumSeqIo
          - stats/controllerNumWriteIo
          - stats/controllerNumWriteIops
          - stats/controllerRandomIoPpm
          - stats/controllerReadIoBandwidthKbps
          - stats/controllerReadIoPpm
          - stats/controllerSeqIoPpm
          - stats/controllerStorageTierSsdUsageBytes
          - stats/controllerTimespanMicros
          - stats/controllerTotalIoSizeKb
          - stats/controllerTotalIoTimeMicros
          - stats/controllerTotalReadIoSizeKb
          - stats/controllerTotalReadIoTimeMicros
          - stats/controllerTotalTransformedUsageBytes
          - stats/controllerUserBytes
          - stats/controllerWriteIoBandwidthKbps
          - stats/controllerWriteIoPpm
          - stats/hypervisorAvgIoLatencyMicros
          - stats/hypervisorCpuReadyTimePpm
          - stats/hypervisorCpuUsagePpm
          - stats/hypervisorIoBandwidthKbps
          - stats/hypervisorMemoryUsagePpm
          - stats/hypervisorNumIo
          - stats/hypervisorNumIops
          - stats/hypervisorNumReadIo
          - stats/hypervisorNumReadIops
          - stats/hypervisorNumReceivedBytes
          - stats/hypervisorNumTransmittedBytes
          - stats/hypervisorNumWriteIo
          - stats/hypervisorNumWriteIops
          - stats/hypervisorReadIoBandwidthKbps
          - stats/hypervisorSwapInRateKbps
          - stats/hypervisorSwapOutRateKbps
          - stats/hypervisorTimespanMicros
          - stats/hypervisorTotalIoSizeKb
          - stats/hypervisorTotalIoTimeMicros
          - stats/hypervisorTotalReadIoSizeKb
          - stats/hypervisorWriteIoBandwidthKbps
          - stats/memoryUsagePpm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of VM stats for all VMs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmStats'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine Stats
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 2
        timeUnit: seconds
      - type: XLarge
        count: 2
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiStatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.stats.ListVmStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiStatsApi esxiStatsApi = new EsxiStatsApi(apiClient);\n\n      \
          \  // Datetime needs to be in RFC3339 format\n        OffsetDateTime startTime\
          \ = OffsetDateTime.now();\n        // Datetime needs to be in RFC3339 format\n\
          \        OffsetDateTime endTime = OffsetDateTime.now();\n        \n    \
          \    int samplingInterval = 1;\n        \n        Object statType = SOME_RAW_DATA;\n\
          \        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVmStatsApiResponse listVmStatsApiResponse\
          \ = esxiStatsApi.listVmStats(startTime, endTime, samplingInterval, statType,\
          \ page, limit, null, null, null);\n            System.out.println(listVmStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, EsxiStatsApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let esxiStatsApi = new EsxiStatsApi(apiClientInstance);

          function sample() {

              //Datetime needs to be in RFC3339 format
              let $startTime = "2021-01-01T00:00:00-08:00";
              //Datetime needs to be in RFC3339 format
              let $endTime = "2021-01-01T00:00:00-08:00";

              // Construct Optional Parameters
              var opts = {};
              opts["$samplingInterval"] = 1;
              opts["$statType"] = SOME_RAW_DATA;
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              esxiStatsApi.listVmStats($startTime, $endTime, opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_stats_api\
          \ = ntnx_vmm_py_client.EsxiStatsApi(api_client=client)\n    # Datetime needs\
          \ to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n  \
          \  # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = esxi_stats_api.list_vm_stats(_startTime=start_time, _endTime=end_time,\
          \ _samplingInterval=sampling_interval, _statType=stat_type, _page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiStatsApiInstance\
          \ *api.EsxiStatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiStatsApiInstance = api.NewEsxiStatsApi(ApiClientInstance)\n\n \
          \   // Datetime needs to be in RFC3339 format\n    startTime_ := time.Now()\n\
          \    // Datetime needs to be in RFC3339 format\n    endTime_ := time.Now()\n\
          \    \n    samplingInterval_ := 1\n    \n    statType_ := SOME_RAW_DATA\n\
          \    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error :=\
          \ EsxiStatsApiInstance.ListVmStats(&startTime_, &endTime_, &samplingInterval_,\
          \ &statType_, &page_, &limit_, nil, nil, nil)\n    if error != nil {\n \
          \       fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().([]import1.VmStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms?$startTime=2021-01-01T00:00:00-08:00&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$page=0&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms?$startTime=2021-01-01T00:00:00-08:00&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$page=0&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/esxi/stats/vms/{extId}:
    get:
      tags:
      - EsxiStats
      summary: Get VM stats for a given VM
      description: "Get VM stats for a given VM. Users can fetch the stats by specifying\
        \ the following params in the request query: 1) '$select': comma-separated\
        \ attributes with the prefix 'stats/', e.g. 'stats/checkScore'. 2) '$startTime':\
        \ the start time for which stats should be reported, e.g. '2023-01-01T12:00:00.000-08:00';\
        \ 3) '$endTime': the end time for which stats should be reported; 4) '$samplingInterval':\
        \ the sampling interval in seconds at which statistical data should be collected;\
        \ 5) '$statType': the down-sampling operator to use while performing down-sampling\
        \ on stats data"
      operationId: getVmStatsById
      parameters:
      - name: extId
        in: path
        description: Retrieve statistics for the VM with the specified external ID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ce54c2ce-eb1d-4647-9f9b-42b3bc8127db
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 85
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the requested stats for the VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine Stats
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 4
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiStatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.stats.GetVmStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiStatsApi esxiStatsApi = new EsxiStatsApi(apiClient);\n\n      \
          \  \n        String extId = \"c340da3b-2EEa-C893-923F-0FDACCcfD6Ae\";\n\
          \        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            GetVmStatsApiResponse getVmStatsApiResponse\
          \ = esxiStatsApi.getVmStatsById(extId, startTime, endTime, samplingInterval,\
          \ statType, null);\n            System.out.println(getVmStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiStatsApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiStatsApi = new EsxiStatsApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"9aF05Eff-e7eE-f7E0-74c7-0a0Aa7c1d0eB\";\n\
          \    //Datetime needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    esxiStatsApi.getVmStatsById(extId,\
          \ $startTime, $endTime, opts).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_stats_api\
          \ = ntnx_vmm_py_client.EsxiStatsApi(api_client=client)\n    \n    ext_id\
          \ = \"aEBa6965-DAE5-fF3e-BD7D-3cB1CcCACE68\"\n    # Datetime needs to be\
          \ in RFC3339 format\n    start_time = datetime.datetime.Now()\n    # Datetime\
          \ needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = esxi_stats_api.get_vm_stats_by_id(extId=ext_id,\
          \ _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiStatsApiInstance\
          \ *api.EsxiStatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiStatsApiInstance = api.NewEsxiStatsApi(ApiClientInstance)\n\n \
          \   \n    extId := \"1cE4B3ff-8DeC-cFac-fdab-F3dC1E3BDE74\"\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ EsxiStatsApiInstance.GetVmStatsById(&extId, &startTime_, &endTime_, &samplingInterval_,\
          \ &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VmStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms/9FaB3f05-dab2-B0F6-abE7-3c5EE70E6eA2?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms/AbCCaAb6-dEaf-A631-aBe9-ef0C2Dc4BEdE?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/esxi/stats/vms/{vmExtId}/nics/{extId}:
    get:
      tags:
      - EsxiStats
      summary: Get the stats for the specified VM NIC
      description: "Fetches the stats for the specified VM NIC. Users can fetch the\
        \ stats by specifying the following params in the request query: 1) '$select':\
        \ comma-separated attributes with the prefix 'stats/', e.g. 'stats/checkScore'.\
        \ 2) '$startTime': the start time for which stats should be reported, e.g.\
        \ '2023-01-01T12:00:00.000-08:00'; 3) '$endTime': the end time for which stats\
        \ should be reported; 4) '$samplingInterval': the sampling interval in seconds\
        \ at which statistical data should be collected; 5) '$statType': the down-sampling\
        \ operator to use while performing down-sampling on stats data"
      operationId: getNicStatsById
      parameters:
      - name: vmExtId
        in: path
        description: This field specifies the VM external ID when retrieving the stats
          for a given VM NIC.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 870a78bd-11b9-4cac-9584-e71ef30ff398
      - name: extId
        in: path
        description: This field specifies the external ID of the VM NIC when retrieving
          stats for a given VM NIC.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 02752996-ce34-48d2-bec3-fabe65e91c13
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 71
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
          - vmExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the requested stats for the VM NIC.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmNicStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine NIC Stats
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 4
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiStatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.stats.GetNicStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiStatsApi esxiStatsApi = new EsxiStatsApi(apiClient);\n\n      \
          \  \n        String vmExtId = \"53eaBbA4-C2eA-C04D-Bcfe-D7f344Cda43d\";\n\
          \        \n        String extId = \"6144DFc5-9CB1-c1FF-1f6f-2Edb0dEfec00\"\
          ;\n        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            GetNicStatsApiResponse\
          \ getNicStatsApiResponse = esxiStatsApi.getNicStatsById(vmExtId, extId,\
          \ startTime, endTime, samplingInterval, statType, null);\n            System.out.println(getNicStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiStatsApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiStatsApi = new EsxiStatsApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let vmExtId = \"824bD48E-78ae-FAED-6fe4-Ed92Dc6D948A\"\
          ;\n    \n    let extId = \"0cbccCF4-aE7F-6eE6-2eDB-bADab5163E8A\";\n   \
          \ //Datetime needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    esxiStatsApi.getNicStatsById(vmExtId,\
          \ extId, $startTime, $endTime, opts).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_stats_api\
          \ = ntnx_vmm_py_client.EsxiStatsApi(api_client=client)\n    \n    vm_ext_id\
          \ = \"5aa0edBB-75cf-aAda-b8db-C4BcAa4a8F2D\"\n    \n    ext_id = \"Ed4fBc67-6EC9-F7b8-1cCa-caEbc1F5afcF\"\
          \n    # Datetime needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = esxi_stats_api.get_nic_stats_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiStatsApiInstance\
          \ *api.EsxiStatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiStatsApiInstance = api.NewEsxiStatsApi(ApiClientInstance)\n\n \
          \   \n    vmExtId := \"eAFa6d2A-DFd2-9aAb-BAc7-5F5ddDd0ACc9\"\n    \n  \
          \  extId := \"5FBcB981-fafB-fAef-Dc0a-B07d4C3C2EE6\"\n    // Datetime needs\
          \ to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ EsxiStatsApiInstance.GetNicStatsById(&vmExtId, &extId, &startTime_, &endTime_,\
          \ &samplingInterval_, &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VmNicStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms/b702ACb3-baB1-6DFA-AbFb-CAaA3c1fc5eb/nics/12Abce2f-fe63-E9C4-e3dC-afdBFDebb0aa?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms/c3BEdFCe-fB12-9a4b-6CF9-0BdDA2aA5CeE/nics/BBAc76ef-e5fe-2DbC-D8Bd-B8cFee8EFE5b?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/esxi/stats/vms/{vmExtId}/disks/{extId}:
    get:
      tags:
      - EsxiStats
      summary: Get the stats for the specified VM disk
      description: "Fetches the stats for the specified VM disk. Users can fetch the\
        \ stats by specifying the following params in the request query: 1) '$select':\
        \ comma-separated attributes with the prefix 'stats/', e.g. 'stats/checkScore'.\
        \ 2) '$startTime': the start time for which stats should be reported, e.g.\
        \ '2023-01-01T12:00:00.000-08:00'; 3) '$endTime': the end time for which stats\
        \ should be reported; 4) '$samplingInterval': the sampling interval in seconds\
        \ at which statistical data should be collected; 5) '$statType': the down-sampling\
        \ operator to use while performing down-sampling on stats data"
      operationId: getDiskStatsById
      parameters:
      - name: vmExtId
        in: path
        description: This field specifies the VM external ID when retrieving the stats
          for a given VM Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cc291767-b6b3-4cb4-8c71-33f55934ae4c
      - name: extId
        in: path
        description: This field specifies the VM external ID when retrieving the stats
          for a given VM Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 04fb3f68-3141-4d46-bbd5-4608dc2c4f53
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 83
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
          - vmExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the requested stats for the VM Disk.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmDiskStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine Disk Stats
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 4
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiStatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.stats.GetDiskStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiStatsApi esxiStatsApi = new EsxiStatsApi(apiClient);\n\n      \
          \  \n        String vmExtId = \"Ed18dFbb-eCAF-7dfe-BEfC-cDB8D24aAF55\";\n\
          \        \n        String extId = \"8c1fAB3d-dB20-47b3-7aab-69D8Bc9B2bfc\"\
          ;\n        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            GetDiskStatsApiResponse\
          \ getDiskStatsApiResponse = esxiStatsApi.getDiskStatsById(vmExtId, extId,\
          \ startTime, endTime, samplingInterval, statType, null);\n            System.out.println(getDiskStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiStatsApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiStatsApi = new EsxiStatsApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let vmExtId = \"0Dd6bdfd-8AA7-a8Fe-DBDC-B2d7D8a5AC72\"\
          ;\n    \n    let extId = \"0eA4Ef0A-aec2-8aD6-Da5a-BF4a9C8AbaE1\";\n   \
          \ //Datetime needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    esxiStatsApi.getDiskStatsById(vmExtId,\
          \ extId, $startTime, $endTime, opts).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_stats_api\
          \ = ntnx_vmm_py_client.EsxiStatsApi(api_client=client)\n    \n    vm_ext_id\
          \ = \"A867dA01-2A1E-1bBE-Fb88-cA9b9eFC89Dd\"\n    \n    ext_id = \"bFdBEb4b-7c3A-8abC-E8e0-EbdADCBBef83\"\
          \n    # Datetime needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = esxi_stats_api.get_disk_stats_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiStatsApiInstance\
          \ *api.EsxiStatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiStatsApiInstance = api.NewEsxiStatsApi(ApiClientInstance)\n\n \
          \   \n    vmExtId := \"1c1Bcde9-CDA1-06Cb-eEef-c7aFDEeEf10c\"\n    \n  \
          \  extId := \"d1858cBB-6cD2-831a-2aB2-B22fDdFdDBd4\"\n    // Datetime needs\
          \ to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ EsxiStatsApiInstance.GetDiskStatsById(&vmExtId, &extId, &startTime_, &endTime_,\
          \ &samplingInterval_, &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VmDiskStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms/68e708ED-9F3e-6bC9-BeDa-75baADfCAAE5/disks/4eE1fe8a-5a1D-A5fe-0d9C-E3dBFA5a1a2A?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/stats/vms/BFa6eb7c-7af8-dAbb-Fdc4-07baF2BafDbF/disks/fc7cDEf3-c1B1-Aed0-d2eD-e7abD83A6CBE?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/associate-categories:
    post:
      tags:
      - EsxiVm
      summary: Associate categories to a VM
      description: Associate categories to a virtual machine.
      operationId: associateCategories
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of an instance of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 97df046f-f3e0-49cf-a86d-086f585a8081
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2e8c2be6-0d1e-424d-bad2-fac18c03b947
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.AssociateVmCategoriesParams'
        required: true
      responses:
        "202":
          description: The request to associate categories to a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/associate-categories\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/associate-categories\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/associate-categories\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Associate ESXi Virtual Machine Categories
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.AssociateVmCategoriesParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.AssociateCategoriesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        AssociateVmCategoriesParams\
          \ associateVmCategoriesParams = new AssociateVmCategoriesParams();\n\n \
          \       // AssociateVmCategoriesParams object initializations here...\n\
          \        associateVmCategoriesParams.setCategories(new ArrayList<>()); \
          \ // required field\n        \n        String extId = \"eCDAfaaA-2FB1-eB92-dbDf-b7CB40CEFcDC\"\
          ;\n\n        try {\n            AssociateCategoriesApiResponse associateCategoriesApiResponse\
          \ = esxiVmApi.associateCategories(extId, associateVmCategoriesParams);\n\
          \            System.out.println(associateCategoriesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, AssociateVmCategoriesParams } from\
          \ \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet esxiVmApi =\
          \ new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n    let associateVmCategoriesParams\
          \ = new AssociateVmCategoriesParams();\n\n    // AssociateVmCategoriesParams\
          \ object initializations here...\n    associateVmCategoriesParams.setCategories([]);\
          \  // required field\n\n    \n    let extId = \"BeBBB2E3-A9EC-8FBB-3db0-0F9819EC6b77\"\
          ;\n\n\n\n\n\n    esxiVmApi.associateCategories(extId, associateVmCategoriesParams).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    associateVmCategoriesParams\
          \ = ntnx_vmm_py_client.AssociateVmCategoriesParams()\n\n    # AssociateVmCategoriesParams\
          \ object initializations here...\n    associateVmCategoriesParams.categories\
          \ = []  # required field\n    \n    ext_id = \"AAfcc89F-fdB8-ce80-6851-3AEdEC2FCbd9\"\
          \n\n\n    try:\n        api_response = esxi_vm_api.associate_categories(extId=ext_id,\
          \ body=associateVmCategoriesParams)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    associateVmCategoriesParams\
          \ := import1.NewAssociateVmCategoriesParams()\n\n    // AssociateVmCategoriesParams\
          \ object initializations here...\n\n    \n    extId := \"3f9ECcFa-cb3c-fc8C-BbCB-fcAeE01aB8d9\"\
          \n\n\n    response, error := EsxiVmApiInstance.AssociateCategories(&extId,\
          \ associateVmCategoriesParams)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/FE7fd8df-EEc3-3C84-8B7E-EBeFf6bFCCFC/$actions/associate-categories" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":[{"extId":"string","$objectType":"vmm.v4.esxi.config.CategoryReference"}],"$objectType":"vmm.v4.esxi.config.AssociateVmCategoriesParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":[{"extId":"string","$objectType":"vmm.v4.esxi.config.CategoryReference"}],"$objectType":"vmm.v4.esxi.config.AssociateVmCategoriesParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/D135AfaB-bca1-EcBd-fEAF-23cAdac1bEBb/$actions/associate-categories"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/disassociate-categories:
    post:
      tags:
      - EsxiVm
      summary: Disassociate categories from a VM
      description: Disassociate categories from a virtual machine.
      operationId: disassociateCategories
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of an instance of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 17f89fe7-7919-4604-a6bf-e19ba294beab
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d19db9c5-c41b-495a-aba9-45a70ea36f8d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.DisassociateVmCategoriesParams'
        required: true
      responses:
        "202":
          description: The request to disassociate categories from a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/disassociate-categories\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/disassociate-categories\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/disassociate-categories\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Disassociate ESXi Virtual Machine Categories
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.DisassociateVmCategoriesParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.DisassociateCategoriesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        DisassociateVmCategoriesParams\
          \ disassociateVmCategoriesParams = new DisassociateVmCategoriesParams();\n\
          \n        // DisassociateVmCategoriesParams object initializations here...\n\
          \        disassociateVmCategoriesParams.setCategories(new ArrayList<>());\
          \  // required field\n        \n        String extId = \"Bd4AfFCB-36Fc-bEbb-B919-eBD7bDBf9EDD\"\
          ;\n\n        try {\n            DisassociateCategoriesApiResponse disassociateCategoriesApiResponse\
          \ = esxiVmApi.disassociateCategories(extId, disassociateVmCategoriesParams);\n\
          \            System.out.println(disassociateCategoriesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, DisassociateVmCategoriesParams }\
          \ from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet esxiVmApi =\
          \ new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n    let disassociateVmCategoriesParams\
          \ = new DisassociateVmCategoriesParams();\n\n    // DisassociateVmCategoriesParams\
          \ object initializations here...\n    disassociateVmCategoriesParams.setCategories([]);\
          \  // required field\n\n    \n    let extId = \"Fca03aFe-429F-bCdD-def9-dde01b6fFCc2\"\
          ;\n\n\n\n\n\n    esxiVmApi.disassociateCategories(extId, disassociateVmCategoriesParams).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    disassociateVmCategoriesParams\
          \ = ntnx_vmm_py_client.DisassociateVmCategoriesParams()\n\n    # DisassociateVmCategoriesParams\
          \ object initializations here...\n    disassociateVmCategoriesParams.categories\
          \ = []  # required field\n    \n    ext_id = \"ACDa84eE-B60A-F302-EfB3-DAebADAcE319\"\
          \n\n\n    try:\n        api_response = esxi_vm_api.disassociate_categories(extId=ext_id,\
          \ body=disassociateVmCategoriesParams)\n        print(api_response)\n  \
          \  except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    disassociateVmCategoriesParams\
          \ := import1.NewDisassociateVmCategoriesParams()\n\n    // DisassociateVmCategoriesParams\
          \ object initializations here...\n\n    \n    extId := \"DcAdCEee-c2f6-0Ba3-Cf90-55eAA10cf7cC\"\
          \n\n\n    response, error := EsxiVmApiInstance.DisassociateCategories(&extId,\
          \ disassociateVmCategoriesParams)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/DdAbc1EC-FEFa-1AE9-F2B7-BCB76ecd2e6b/$actions/disassociate-categories" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":[{"extId":"string","$objectType":"vmm.v4.esxi.config.CategoryReference"}],"$objectType":"vmm.v4.esxi.config.DisassociateVmCategoriesParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":[{"extId":"string","$objectType":"vmm.v4.esxi.config.CategoryReference"}],"$objectType":"vmm.v4.esxi.config.DisassociateVmCategoriesParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/A7Fbc3Ba-b4F0-Fbb0-874f-ABfDefCa7b2D/$actions/disassociate-categories"
  /vmm/v4.0/esxi/config/vms/{extId}:
    get:
      tags:
      - EsxiVm
      summary: Get VM configuration details
      description: Retrieves configuration details for a virtual machine.
      operationId: getVmById
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of an instance of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: deb89d7a-a89a-4e20-8841-322142303e8f
      responses:
        "200":
          description: Returns the configuration details for a virtual machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.esxi.config.Vm'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 6
        timeUnit: seconds
      - type: Small
        count: 12
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.GetVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"F5Dc6443-faAC-D2Fc-C8F7-6F26c76ad446\";\n\n       \
          \ try {\n            GetVmApiResponse getVmApiResponse = esxiVmApi.getVmById(extId);\n\
          \            System.out.println(getVmApiResponse.toString());\n\n      \
          \  } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"5bC8ACea-7d1A-d31A-5AC0-570bee7eBeCe\";\n\n\n\n\
          \n\n    esxiVmApi.getVmById(extId).then(({data, response}) => {\n      \
          \  console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"d0cffaB0-Ce6c-df0a-B24e-eDDA8d2dFcbB\"\n\n\n    try:\n        api_response\
          \ = esxi_vm_api.get_vm_by_id(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"8cFCaAbA-dde1-36aB-8Eda-4F2FfEbbc95D\"\n\n\n    response,\
          \ error := EsxiVmApiInstance.GetVmById(&extId)\n    if error != nil {\n\
          \        fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.Vm)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/eCBABfF8-D4AE-DA9B-a2Ce-BcC3fc991F4d" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/bbFd8BbD-BECb-6E1B-cDb9-fcE12Ecc6FCD"
  /vmm/v4.0/esxi/config/vms:
    get:
      tags:
      - EsxiVm
      summary: List VMs
      description: Lists the Virtual Machines defined on the system. List of Virtual
        Machines can be further filtered out using various filtering options.
      operationId: listVms
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - cluster/extId
          - guestOsName
          - host/extId
          - memorySizeBytes
          - name
          - numCoresPerSocket
          - numCpus
          - powerState
          - virtualHardwareVersion
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - guestOsName
          - memorySizeBytes
          - name
          - numCoresPerSocket
          - numCpus
          - virtualHardwareVersion
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - categories
          - cdRoms
          - cluster/extId
          - description
          - disks
          - extId
          - guestOsName
          - host/extId
          - links
          - memorySizeBytes
          - name
          - nics
          - numCoresPerSocket
          - numCpus
          - nutanixGuestTools/availableVersion
          - nutanixGuestTools/capabilities
          - nutanixGuestTools/guestOsVersion
          - nutanixGuestTools/isEnabled
          - nutanixGuestTools/isInstalled
          - nutanixGuestTools/isIsoInserted
          - nutanixGuestTools/isReachable
          - nutanixGuestTools/isVmMobilityDriversInstalled
          - nutanixGuestTools/isVssSnapshotCapable
          - nutanixGuestTools/version
          - ownershipInfo/owner
          - powerState
          - tenantId
          - virtualHardwareVersion
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of virtual machines.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.esxi.config.Vm'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/esxi/config/vms
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/esxi/config/vms
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/esxi/config/vms
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.ListVmsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   int page = 0;\n        \n        int limit = 50;\n\n        try {\n\
          \            ListVmsApiResponse listVmsApiResponse = esxiVmApi.listVms(page,\
          \ limit, null, null, null);\n            System.out.println(listVmsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, EsxiVmApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let esxiVmApi = new EsxiVmApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              esxiVmApi.listVms(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    page = 0\n\
          \    \n    limit = 50\n\n\n    try:\n        api_response = esxi_vm_api.list_vms(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := EsxiVmApiInstance.ListVms(&page_,\
          \ &limit_, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Vm)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/revert:
    post:
      tags:
      - EsxiVm
      summary: Revert the ESXi VM.
      description: "Revert VM identified by {extId}. This does an in-place VM restore\
        \ from a specified VM Recovery Point."
      operationId: revertVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7c9a90f9-5903-44be-bd10-1b431102e05c
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 54725724-25a8-4c6f-b0fc-fa2e725a8704
      requestBody:
        description: Input for the VM revert operation. Specify the VM Recovery Point
          ID to which the VM would be reverted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.RevertParams'
        required: true
      responses:
        "202":
          description: Task Id to monitor the progress of VM revert operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/revert\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/revert\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/revert\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Revert ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Disaster Recovery Admin
      x-rate-limit:
      - type: xsmall
        count: 30
        timeUnit: seconds
      - type: Small
        count: 40
        timeUnit: seconds
      - type: Large
        count: 60
        timeUnit: seconds
      - type: XLarge
        count: 80
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.RevertParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.RevertVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        RevertParams\
          \ revertParams = new RevertParams();\n\n        // RevertParams object initializations\
          \ here...\n        revertParams.setVmRecoveryPointExtId(\"cFDFfea6-7EaA-fABA-F1fe-FD28e91eACd5\"\
          );  // required field\n        \n        String extId = \"D6FDEC5d-7eBa-eee5-3bFb-BCb04D5230ab\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            RevertVmApiResponse revertVmApiResponse\
          \ = esxiVmApi.revertVm(extId, revertParams, opts);\n            System.out.println(revertVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, RevertParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \    let revertParams = new RevertParams();\n\n    // RevertParams object\
          \ initializations here...\n    revertParams.setVmRecoveryPointExtId(\"215F10f1-3BBF-EbdE-FA3B-a945Ed3acDF0\"\
          );  // required field\n\n    \n    let extId = \"fadD8bF6-bfF2-fDd6-30E3-EaF73e11AAEa\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.revertVm(extId, revertParams, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    revertParams =\
          \ ntnx_vmm_py_client.RevertParams()\n\n    # RevertParams object initializations\
          \ here...\n    revertParams.vm_recovery_point_ext_id = \"28caaA4E-Dffe-AcCe-F512-ffD5DDa246B4\"\
          \  # required field\n    \n    ext_id = \"93D33A0c-deE5-cBc7-16ff-E3CB8cebfCa2\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = esxi_vm_api.revert_vm(extId=ext_id,\
          \ body=revertParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    revertParams\
          \ := import1.NewRevertParams()\n\n    // RevertParams object initializations\
          \ here...\n\n    \n    extId := \"A5C0a1Fb-0aDB-bfd3-d4fa-db1FdfCbE4Aa\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := EsxiVmApiInstance.RevertVm(&extId, revertParams,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/54dF7CFC-06bc-BbCE-eEBb-0f47fc9FC1BA/$actions/revert" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"vmRecoveryPointExtId":"string","$objectType":"vmm.v4.esxi.config.RevertParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"vmRecoveryPointExtId":"string","$objectType":"vmm.v4.esxi.config.RevertParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/e40F3D51-Ffff-2aAc-a8ef-EEBBEf6bBCee/$actions/revert"
  /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools:
    get:
      tags:
      - EsxiVm
      summary: Get VM NGT configuration
      description: Retrieves the Nutanix Guest Tools configuration for a virtual machine.
      operationId: getNutanixGuestToolsById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 447089f9-28fc-46ab-b5ac-01072e7949ab
      responses:
        "200":
          description: Returns the Nutanix Guest Tools configuration for a virtual
            machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestTools'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View ESXi Virtual Machine NGT
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 6
        timeUnit: seconds
      - type: Small
        count: 12
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.GetNutanixGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"09BbabC3-D5b7-Fbfb-ef0e-3943fB9ee14D\";\n\n       \
          \ try {\n            GetNutanixGuestToolsApiResponse getNutanixGuestToolsApiResponse\
          \ = esxiVmApi.getNutanixGuestToolsById(extId);\n            System.out.println(getNutanixGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"ce3fE0CC-e4cA-aafd-F9Da-BAD71fEc84B9\";\n\n\n\n\
          \n\n    esxiVmApi.getNutanixGuestToolsById(extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"A9D67741-110b-7Bdc-CC1b-70fDF19B2dcf\"\n\n\n    try:\n        api_response\
          \ = esxi_vm_api.get_nutanix_guest_tools_by_id(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"cfBBa7BE-D6b7-eEeB-eef2-A807c221CC4B\"\n\n\n    response,\
          \ error := EsxiVmApiInstance.GetNutanixGuestToolsById(&extId)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.NutanixGuestTools)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/Cd83CEEa-A448-D20f-b8Dd-20bb5dFFB1e6/nutanix-guest-tools" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/88bDa67B-2ffF-fbA3-917c-Ff9D57a95A1e/nutanix-guest-tools"
    put:
      tags:
      - EsxiVm
      summary: Update NGT configuration for a VM
      description: Updates the Nutanix Guest Tools configuration for a virtual machine.
      operationId: updateNutanixGuestToolsById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 999ea3e3-cd5c-4446-ba61-4c6d464ed702
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 38e6bf37-e946-4f24-a430-9a3a9cb89fb5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestTools'
        required: true
      responses:
        "202":
          description: The request to update NGT configuration for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update ESXi Virtual Machine NGT
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.NutanixGuestTools;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.UpdateNutanixGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        NutanixGuestTools\
          \ nutanixGuestTools = NutanixGuestTools.UNKNOWN;\n\n        // NutanixGuestTools\
          \ object initializations here...\n        \n        String extId = \"F3edbEDB-1bBc-d2ec-Ffba-aC2ebe08dFFC\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UpdateNutanixGuestToolsApiResponse\
          \ updateNutanixGuestToolsApiResponse = esxiVmApi.updateNutanixGuestToolsById(extId,\
          \ nutanixGuestTools, opts);\n            System.out.println(updateNutanixGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, NutanixGuestTools } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \    let nutanixGuestTools = NutanixGuestTools.UNKNOWN;\n\n    // NutanixGuestTools\
          \ object initializations here...\n\n    \n    let extId = \"2bF0f5Da-7ec3-Fea4-1e9a-ad7DB29ebcbF\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.updateNutanixGuestToolsById(extId, nutanixGuestTools,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    nutanixGuestTools\
          \ = ntnx_vmm_py_client.NutanixGuestTools._UNKNOWN\n\n    # NutanixGuestTools\
          \ object initializations here...\n    \n    ext_id = \"1da8a591-92Ad-D1B1-2B23-CD0fCec5c6e9\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = esxi_vm_api.update_nutanix_guest_tools_by_id(extId=ext_id,\
          \ body=nutanixGuestTools, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    nutanixGuestTools\
          \ := import1.NewNutanixGuestTools()\n\n    // NutanixGuestTools object initializations\
          \ here...\n\n    \n    extId := \"cFecBEcA-FabD-8d24-1f0b-BBCecEfe0FCF\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := EsxiVmApiInstance.UpdateNutanixGuestToolsById(&extId,\
          \ nutanixGuestTools, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/AEFAF0E4-9A1e-CaC2-8f3c-d6eEb7F5cd3e/nutanix-guest-tools" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.esxi.config.NutanixGuestTools"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.esxi.config.NutanixGuestTools"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/eDDfDAcb-d14D-7b2C-aDbC-b4e6f3e8d54B/nutanix-guest-tools"
  /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/install:
    post:
      tags:
      - EsxiVm
      summary: Install NGT in a VM
      description: Installs Nutanix Guest Tools in a Virtual Machine by using the
        provided credentials.
      operationId: installNutanixGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f8d8611a-14b3-49f7-9f83-d19cd8d1aac3
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 8072abe2-0382-4c54-9dda-8c45f741203b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestToolsInstallConfig'
        required: true
      responses:
        "202":
          description: The request to install NGT VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/install\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/install\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/install\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Install ESXi Virtual Machine NGT
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.NutanixCredential;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.NutanixGuestToolsInstallConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.InstallNutanixGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        NutanixGuestToolsInstallConfig\
          \ nutanixGuestToolsInstallConfig = new NutanixGuestToolsInstallConfig();\n\
          \n        // NutanixGuestToolsInstallConfig object initializations here...\n\
          \        nutanixGuestToolsInstallConfig.setCredential(new NutanixCredential());\
          \  // required field\n        \n        String extId = \"FbcCf3Fd-dBdf-5aAb-FAaD-d4CdfcEcDfeD\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            InstallNutanixGuestToolsApiResponse\
          \ installNutanixGuestToolsApiResponse = esxiVmApi.installNutanixGuestTools(extId,\
          \ nutanixGuestToolsInstallConfig, opts);\n            System.out.println(installNutanixGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, NutanixCredential, NutanixGuestToolsInstallConfig\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \    let nutanixGuestToolsInstallConfig = new NutanixGuestToolsInstallConfig();\n\
          \n    // NutanixGuestToolsInstallConfig object initializations here...\n\
          \    nutanixGuestToolsInstallConfig.setCredential(new NutanixCredential());\
          \  // required field\n\n    \n    let extId = \"EbBEfBf6-C664-7BeA-13c6-1faA55410A6C\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.installNutanixGuestTools(extId, nutanixGuestToolsInstallConfig,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    nutanixGuestToolsInstallConfig\
          \ = ntnx_vmm_py_client.NutanixGuestToolsInstallConfig()\n\n    # NutanixGuestToolsInstallConfig\
          \ object initializations here...\n    nutanixGuestToolsInstallConfig.credential\
          \ = ntnx_vmm_py_client.NutanixCredential()  # required field\n    \n   \
          \ ext_id = \"7D2D1d78-a4e7-3DFA-bBEB-D2CCcd34573E\"\n\n    \"\"\"\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.install_nutanix_guest_tools(extId=ext_id,\
          \ body=nutanixGuestToolsInstallConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    nutanixGuestToolsInstallConfig\
          \ := import1.NewNutanixGuestToolsInstallConfig()\n\n    // NutanixGuestToolsInstallConfig\
          \ object initializations here...\n\n    \n    extId := \"dDeF369b-aaed-7DA6-2Ffc-fDbA0ebAB347\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := EsxiVmApiInstance.InstallNutanixGuestTools(&extId,\
          \ nutanixGuestToolsInstallConfig, args)\n    if error != nil {\n       \
          \ fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/37FFF44d-fa60-0eDe-F0a4-0752FefdFBbD/nutanix-guest-tools/$actions/install" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"capabilities":["$UNKNOWN"],"credential":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.esxi.config.NutanixCredential"},"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.esxi.config.NutanixRebootPreferenceSchedule"},"$objectType":"vmm.v4.esxi.config.NutanixRebootPreference"},"$objectType":"vmm.v4.esxi.config.NutanixGuestToolsInstallConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"capabilities":["$UNKNOWN"],"credential":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.esxi.config.NutanixCredential"},"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.esxi.config.NutanixRebootPreferenceSchedule"},"$objectType":"vmm.v4.esxi.config.NutanixRebootPreference"},"$objectType":"vmm.v4.esxi.config.NutanixGuestToolsInstallConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/7EefB4c0-3ee8-A3ee-d26D-4FC7D23c16f5/nutanix-guest-tools/$actions/install"
  /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/upgrade:
    post:
      tags:
      - EsxiVm
      summary: Upgrade NGT inside a VM
      description: Trigger an in-guest upgrade of Nutanix Guest Tools.
      operationId: upgradeNutanixGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 39a67998-a8b6-4ed7-a3b1-a58acd95ed2d
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 237e077d-cd61-42cc-a026-ea6e2b2ad988
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestToolsUpgradeConfig'
        required: true
      responses:
        "202":
          description: The request to upgrade NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/upgrade\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/upgrade\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/upgrade\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Upgrade ESXi Virtual Machine NGT
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.NutanixGuestToolsUpgradeConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.UpgradeNutanixGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        NutanixGuestToolsUpgradeConfig\
          \ nutanixGuestToolsUpgradeConfig = new NutanixGuestToolsUpgradeConfig();\n\
          \n        // NutanixGuestToolsUpgradeConfig object initializations here...\n\
          \        \n        String extId = \"43dd158D-d3eA-a16D-F778-Dc4Ecb3F3c1d\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UpgradeNutanixGuestToolsApiResponse\
          \ upgradeNutanixGuestToolsApiResponse = esxiVmApi.upgradeNutanixGuestTools(extId,\
          \ nutanixGuestToolsUpgradeConfig, opts);\n            System.out.println(upgradeNutanixGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, NutanixGuestToolsUpgradeConfig }\
          \ from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet esxiVmApi =\
          \ new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n    let nutanixGuestToolsUpgradeConfig\
          \ = new NutanixGuestToolsUpgradeConfig();\n\n    // NutanixGuestToolsUpgradeConfig\
          \ object initializations here...\n\n    \n    let extId = \"FbAa0C39-1b6e-6AaF-fD00-C59AA5e24Dca\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.upgradeNutanixGuestTools(extId, nutanixGuestToolsUpgradeConfig,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    nutanixGuestToolsUpgradeConfig\
          \ = ntnx_vmm_py_client.NutanixGuestToolsUpgradeConfig()\n\n    # NutanixGuestToolsUpgradeConfig\
          \ object initializations here...\n    \n    ext_id = \"0FEfFBb7-D4E2-cEFf-B7ac-7678a8BbCEa3\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = esxi_vm_api.upgrade_nutanix_guest_tools(extId=ext_id,\
          \ body=nutanixGuestToolsUpgradeConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    nutanixGuestToolsUpgradeConfig\
          \ := import1.NewNutanixGuestToolsUpgradeConfig()\n\n    // NutanixGuestToolsUpgradeConfig\
          \ object initializations here...\n\n    \n    extId := \"1bfa366f-8c5c-319A-3D05-7Ae88D818aa4\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := EsxiVmApiInstance.UpgradeNutanixGuestTools(&extId,\
          \ nutanixGuestToolsUpgradeConfig, args)\n    if error != nil {\n       \
          \ fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/AcBFfEAe-6bDe-b1F2-ECE0-DEfa5faCC27E/nutanix-guest-tools/$actions/upgrade" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.esxi.config.NutanixRebootPreferenceSchedule"},"$objectType":"vmm.v4.esxi.config.NutanixRebootPreference"},"$objectType":"vmm.v4.esxi.config.NutanixGuestToolsUpgradeConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.esxi.config.NutanixRebootPreferenceSchedule"},"$objectType":"vmm.v4.esxi.config.NutanixRebootPreference"},"$objectType":"vmm.v4.esxi.config.NutanixGuestToolsUpgradeConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/C1FcC5FA-eaBb-9602-B6Ca-Ca89C64db6Bc/nutanix-guest-tools/$actions/upgrade"
  /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/insert-iso:
    post:
      tags:
      - EsxiVm
      summary: Insert NGT ISO into an available CD-ROM for a VM
      description: Inserts the Nutanix Guest Tools installation and configuration
        ISO into a virtual machine.
      operationId: insertNutanixGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c0eaf36c-78d3-47fb-8e7b-af04da80a6b3
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4401d317-6f0a-4ff7-8638-e4e05e328701
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestToolsInsertConfig'
        required: true
      responses:
        "202":
          description: The request to insert NGT ISO for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/insert-iso\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/insert-iso\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/insert-iso\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Insert ESXi Virtual Machine NGT ISO
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.NutanixGuestToolsInsertConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.InsertNutanixGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        NutanixGuestToolsInsertConfig\
          \ nutanixGuestToolsInsertConfig = new NutanixGuestToolsInsertConfig();\n\
          \n        // NutanixGuestToolsInsertConfig object initializations here...\n\
          \        \n        String extId = \"dcFDDef8-B9Fe-0EcC-d5Bd-61bF6eBBA193\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            InsertNutanixGuestToolsApiResponse\
          \ insertNutanixGuestToolsApiResponse = esxiVmApi.insertNutanixGuestTools(extId,\
          \ nutanixGuestToolsInsertConfig, opts);\n            System.out.println(insertNutanixGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, NutanixGuestToolsInsertConfig }\
          \ from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet esxiVmApi =\
          \ new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n    let nutanixGuestToolsInsertConfig\
          \ = new NutanixGuestToolsInsertConfig();\n\n    // NutanixGuestToolsInsertConfig\
          \ object initializations here...\n\n    \n    let extId = \"30Ad9E4F-eE0f-75B5-0EEA-BF6B660e2FbE\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.insertNutanixGuestTools(extId, nutanixGuestToolsInsertConfig,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    nutanixGuestToolsInsertConfig\
          \ = ntnx_vmm_py_client.NutanixGuestToolsInsertConfig()\n\n    # NutanixGuestToolsInsertConfig\
          \ object initializations here...\n    \n    ext_id = \"0f7aDbAF-5Ead-3ccB-2ae2-b7BADC208Bcc\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = esxi_vm_api.insert_nutanix_guest_tools(extId=ext_id,\
          \ body=nutanixGuestToolsInsertConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    nutanixGuestToolsInsertConfig\
          \ := import1.NewNutanixGuestToolsInsertConfig()\n\n    // NutanixGuestToolsInsertConfig\
          \ object initializations here...\n\n    \n    extId := \"47D3aBb5-fb94-d6CA-Ea7D-ddacf6EAFcF6\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := EsxiVmApiInstance.InsertNutanixGuestTools(&extId,\
          \ nutanixGuestToolsInsertConfig, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/ffCf7fD7-B1E0-C442-F3AB-1cCBe6c79eAc/nutanix-guest-tools/$actions/insert-iso" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"capabilities":["$UNKNOWN"],"$objectType":"vmm.v4.esxi.config.NutanixGuestToolsInsertConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"capabilities":["$UNKNOWN"],"$objectType":"vmm.v4.esxi.config.NutanixGuestToolsInsertConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/EA2Fbced-2Cb0-aee3-B9C1-fcb3d505ADAD/nutanix-guest-tools/$actions/insert-iso"
  /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/uninstall:
    post:
      tags:
      - EsxiVm
      summary: Uninstall NGT from a VM
      description: Trigger an in-guest uninstallation of Nutanix Guest Tools.
      operationId: uninstallNutanixGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c98752ff-3d6c-4ccf-909c-5bab766e2d6c
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c8ed4182-553f-4f60-a2fc-c6b096678d39
      responses:
        "202":
          description: The request to uninstall NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/uninstall\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/uninstall\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/uninstall\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Uninstall ESXi Virtual Machine NGT
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.UninstallNutanixGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"abf4A0cE-52ae-bbCC-69B4-1F5Be0C6d994\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UninstallNutanixGuestToolsApiResponse\
          \ uninstallNutanixGuestToolsApiResponse = esxiVmApi.uninstallNutanixGuestTools(extId,\
          \ opts);\n            System.out.println(uninstallNutanixGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"ec0c7073-DCAb-CdDE-cDfA-b38FEf7fC6cB\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.uninstallNutanixGuestTools(extId, {\"If-Match\" :\
          \ etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"bf5CFE1F-53d2-ebE7-ABCf-DA3Dc2daF7AC\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.uninstall_nutanix_guest_tools(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"d65fE9FF-BB9e-8705-Ab4E-9c0dd79d27cF\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.UninstallNutanixGuestTools(&extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/AdD0C05b-29A8-Db4b-Ba75-afa70bBEDc85/nutanix-guest-tools/$actions/uninstall" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/BFEdab62-EBd6-cadd-6eCc-beD7B4eEEbDC/nutanix-guest-tools/$actions/uninstall"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/assign-owner:
    post:
      tags:
      - EsxiVm
      summary: Assign owner of a VM
      description: Assign the owner of a virtual machine.
      operationId: assignVmOwner
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of an instance of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 70009863-0ccd-4e0e-a000-5e03b36511c7
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 32f6fac8-6b07-4110-a94c-732bbb5f8992
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.OwnershipInfo'
        required: true
      responses:
        "202":
          description: The request to assign an owner of a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/assign-owner\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/assign-owner\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/assign-owner\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Assign ESXi Virtual Machine Owner
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.OwnerReference;\n\
          import com.nutanix.dp1.vmm.vmm.v4.esxi.config.OwnershipInfo;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.AssignVmOwnerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        OwnershipInfo\
          \ ownershipInfo = new OwnershipInfo();\n\n        // OwnershipInfo object\
          \ initializations here...\n        ownershipInfo.setOwner(new OwnerReference());\
          \  // required field\n        \n        String extId = \"6fEe5Ea4-4685-a9af-Aaff-b9daBc4DE14c\"\
          ;\n\n        try {\n            AssignVmOwnerApiResponse assignVmOwnerApiResponse\
          \ = esxiVmApi.assignVmOwner(extId, ownershipInfo);\n            System.out.println(assignVmOwnerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi, OwnerReference, OwnershipInfo }\
          \ from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet esxiVmApi =\
          \ new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n    let ownershipInfo\
          \ = new OwnershipInfo();\n\n    // OwnershipInfo object initializations\
          \ here...\n    ownershipInfo.setOwner(new OwnerReference());  // required\
          \ field\n\n    \n    let extId = \"ed5ba2BF-1cdF-2Fa2-D054-BA2EceBcCDAa\"\
          ;\n\n\n\n\n\n    esxiVmApi.assignVmOwner(extId, ownershipInfo).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    ownershipInfo =\
          \ ntnx_vmm_py_client.OwnershipInfo()\n\n    # OwnershipInfo object initializations\
          \ here...\n    ownershipInfo.owner = ntnx_vmm_py_client.OwnerReference()\
          \  # required field\n    \n    ext_id = \"EFaE89e9-aBbb-82d4-A8A6-705dCbd53FD2\"\
          \n\n\n    try:\n        api_response = esxi_vm_api.assign_vm_owner(extId=ext_id,\
          \ body=ownershipInfo)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/esxi/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    ownershipInfo\
          \ := import1.NewOwnershipInfo()\n\n    // OwnershipInfo object initializations\
          \ here...\n\n    \n    extId := \"3A8c1f1A-dab3-B5Aa-acCd-64fcC576cDf8\"\
          \n\n\n    response, error := EsxiVmApiInstance.AssignVmOwner(&extId, ownershipInfo)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/FC9Eecc2-9eEb-CF7D-b4Bf-DC92ddcf1e6D/$actions/assign-owner" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"owner":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.esxi.config.OwnerReference"},"$objectType":"vmm.v4.esxi.config.OwnershipInfo"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"owner":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.esxi.config.OwnerReference"},"$objectType":"vmm.v4.esxi.config.OwnershipInfo"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/FC661aaD-efb5-8c1D-Cf12-fEcE5373A9Bf/$actions/assign-owner"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-on:
    post:
      tags:
      - EsxiVm
      summary: Power on or resume a VM
      description: Powers a Virtual Machine on or resumes it from the suspended state.
      operationId: powerOnVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a1a427f8-c1b7-4c6f-9b92-e2ffa12f83b6
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f45f2b1d-3e19-4e8a-adb4-492117f9582c
      responses:
        "202":
          description: The request to power on/resume a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-on\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-on\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-on\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Power On ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.PowerOnVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"B6848ce4-CEEc-fcFD-f036-c88e2FFeBbcd\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            PowerOnVmApiResponse powerOnVmApiResponse\
          \ = esxiVmApi.powerOnVm(extId, opts);\n            System.out.println(powerOnVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"A10d9CE9-CCdD-B801-eAf0-eCE8CDffe1C2\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.powerOnVm(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"8D586fFb-eba7-ebD4-0eD6-E0a5Ca6De3e3\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.power_on_vm(extId=ext_id, if_match=etag_value)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"2Ce3ffef-EA24-2b4f-3aBe-0f8EAccF38D0\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.PowerOnVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/E0C3e7B8-0Bac-F36B-Dbae-BaA1Db93A89b/$actions/power-on" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/9C5df126-bFdf-E3E4-Ab32-FDBA3EF59Bcf/$actions/power-on"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-off:
    post:
      tags:
      - EsxiVm
      summary: Force power off a VM
      description: "Forceably shuts down a virtual machine which is equivalent to\
        \ removing the power cable. Note: The forced shutdown may result in data loss\
        \ if any operations are in progress during the shutdown."
      operationId: powerOffVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: efe6e8c2-17c8-41da-ab72-1bfc0dfb440c
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4e411ea6-7a6b-4c5a-93cd-f42d7b2ae457
      responses:
        "202":
          description: The request to shut down a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-off\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-off\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-off\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Power Off ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.PowerOffVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"19EbebbD-DE9e-7749-CDAB-dabdD15f97aF\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            PowerOffVmApiResponse powerOffVmApiResponse\
          \ = esxiVmApi.powerOffVm(extId, opts);\n            System.out.println(powerOffVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"af4EEbd0-3FEA-EfDC-bEfB-3b8CFc6Bba8c\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.powerOffVm(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"3ddde2e3-1EBe-Eaf0-1b65-e6CEfB7fD5aD\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.power_off_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"Dd38D6F5-B80F-EAF8-c1F4-FcFBa4addd8B\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.PowerOffVm(&extId, args)\n    if\
          \ error != nil {\n        fmt.Println(error)\n        return\n    }\n  \
          \  data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/Cc72E5ED-3f30-0E86-aeAF-F077ee3DCeCE/$actions/power-off" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/4DC4f7eD-Ac28-46ed-771e-dFbccC9fdEb9/$actions/power-off"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/reset:
    post:
      tags:
      - EsxiVm
      summary: Reset an ESXi VM by sequentially powering it off and on
      description: Sequentially performs the power off and power on operations; any
        operation between these actions will fail.
      operationId: resetVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 9af3307a-458b-4dda-9f95-d7d10cae1a8f
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 9a13effe-bde3-4531-8691-0e7bf06d69b3
      responses:
        "202":
          description: The request to reset an ESXi VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/reset\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/reset\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/reset\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Reset ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.ResetVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"cE7DA7Fc-ee5f-D435-EAb6-6Dfc2cAccf6f\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ResetVmApiResponse resetVmApiResponse\
          \ = esxiVmApi.resetVm(extId, opts);\n            System.out.println(resetVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"EBec59Ad-76f4-4F4A-De2b-55DfECCDa9AC\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.resetVm(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"A0bAFfcb-cEbB-5e1a-F322-B17AC64cABbb\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.reset_vm(extId=ext_id, if_match=etag_value)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"e03F3d9F-Fb2D-ffaA-DEbc-df5cddcA6eb4\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.ResetVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/4d13D36B-2D80-5CD8-75b7-6F6dB9f97cF1/$actions/reset" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/AEA2bcc8-d1f3-F52f-ceED-dd47B1F07FdC/$actions/reset"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/suspend:
    post:
      tags:
      - EsxiVm
      summary: Pause/Suspend virtual machine execution
      description: Pause/Suspend execution in an ESXi virtual machine.
      operationId: suspendVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ddb45cad-faef-4280-9ff9-53896cd7e39f
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 68b3504d-89ec-4926-a88c-d6b80de75e01
      responses:
        "202":
          description: The request to pause an execution in VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/suspend\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/suspend\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/suspend\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Suspend ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.SuspendVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"dDA29Dc4-be6d-C9EB-c2b2-484eaAcbEaed\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            SuspendVmApiResponse suspendVmApiResponse\
          \ = esxiVmApi.suspendVm(extId, opts);\n            System.out.println(suspendVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"1b4a0d0d-9aEc-eAdE-AfE5-Fe0E93cB4bEe\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.suspendVm(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"5F3B2fee-Db40-aef2-326c-5ADA0dD4b1aD\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.suspend_vm(extId=ext_id, if_match=etag_value)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"fA57bC0d-Be90-e8A6-e51B-4dbCa88DeBcF\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.SuspendVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/EDf2EBBF-4fC8-30fC-D799-7ecdEaadfCAB/$actions/suspend" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/a9a7dcd7-2f3D-3B7A-E0C5-beffDCAfCaAB/$actions/suspend"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-shutdown:
    post:
      tags:
      - EsxiVm
      summary: Shut down services on ESXi guest OS
      description: Issues a command to the ESXi guest OS to perform a clean shut down
        of services running on it. This operation requires ESXi tools to be installed.
      operationId: shutdownGuestVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4b7db3d9-6124-45f2-b177-1883d2d86aed
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2ffa0d7d-360c-4bc2-8431-82ebb0e31886
      responses:
        "202":
          description: The request to shut down services on ESXi guest OS is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Guest Shutdown ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.ShutdownVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"911B6dDc-AD02-5fFB-9c23-bF6c0A936478\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ShutdownVmApiResponse shutdownVmApiResponse\
          \ = esxiVmApi.shutdownGuestVm(extId, opts);\n            System.out.println(shutdownVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"458d07b1-9a9a-c6d0-bacB-ddAdBAaaA7FE\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.shutdownGuestVm(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"13EA5E6a-fcaD-5A8F-9Ef0-90cdf9A3B3ad\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.shutdown_guest_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"BA63Faa1-d5De-c5D9-cB38-cEFB5BcEFb40\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.ShutdownGuestVm(&extId, args)\n \
          \   if error != nil {\n        fmt.Println(error)\n        return\n    }\n\
          \    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/2F949c61-fa1d-Dfd4-CAEb-bA04CEC8EaCE/$actions/guest-shutdown" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/EbD3cf2d-9fdD-Bbec-CF64-Ef26C72Cc2fC/$actions/guest-shutdown"
  /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-reboot:
    post:
      tags:
      - EsxiVm
      summary: Issue an ESXi guest OS reboot command
      description: Issues a command to reboot ESXi guest OS. This operation requires
        ESXi tools installed.
      operationId: rebootGuestVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: be820d44-6b61-4c9f-8427-e915a90e429f
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 448958b6-117e-486c-b853-c5011ecc47d9
      responses:
        "202":
          description: The request to reboot ESXi guest OS is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Guest Reboot ESXi Virtual Machine
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.EsxiVmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.esxi.config.RebootGuestOSApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    EsxiVmApi esxiVmApi = new EsxiVmApi(apiClient);\n\n        \n     \
          \   String extId = \"2faBcb7F-f4A3-ABFD-BedC-bDdAdfDcfcaA\";\n\n       \
          \ /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            RebootGuestOSApiResponse\
          \ rebootGuestOSApiResponse = esxiVmApi.rebootGuestVm(extId, opts);\n   \
          \         System.out.println(rebootGuestOSApiResponse.toString());\n\n \
          \       } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, EsxiVmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let esxiVmApi = new EsxiVmApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"da943b6C-FDaf-302b-7aAe-5e92dbDEae29\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    esxiVmApi.rebootGuestVm(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    esxi_vm_api\
          \ = ntnx_vmm_py_client.EsxiVmApi(api_client=client)\n    \n    ext_id =\
          \ \"2DD3DbBa-85B4-0f9D-42ca-029Cc7CDc8Bd\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = esxi_vm_api.reboot_guest_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    EsxiVmApiInstance\
          \ *api.EsxiVmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    EsxiVmApiInstance = api.NewEsxiVmApi(ApiClientInstance)\n\n    \n \
          \   extId := \"8aD7b3C4-babA-Baa2-a3f2-DFeEe1f97b4B\"\n\n    /*\n    Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := EsxiVmApiInstance.RebootGuestVm(&extId, args)\n   \
          \ if error != nil {\n        fmt.Println(error)\n        return\n    }\n\
          \    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/EC03a2AC-e89D-Bf8E-DFC1-A721EEEE6f62/$actions/guest-reboot" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/esxi/config/vms/9fDE9d8A-DBBf-fbDB-9c59-9C1A9CDa1ddE/$actions/guest-reboot"
  /vmm/v4.0/images/config/placement-policies:
    get:
      tags:
      - ImagePlacementPolicies
      summary: List image placement policies
      description: |
        Lists image placement policies created in Prism Central, along with details such as name, description, and so on.
        This API supports operations such as filtering, sorting, selection, and pagination.
      operationId: listPlacementPolicies
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - description
          - enforcementState
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - description
          - enforcementState
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - createTime
          - description
          - enforcementState
          - extId
          - lastUpdateTime
          - links
          - name
          - ownerExtId
          - placementType
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of image placement policies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementPolicy'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.ListPlacementPoliciesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListPlacementPoliciesApiResponse listPlacementPoliciesApiResponse\
          \ = imagePlacementPoliciesApi.listPlacementPolicies(page, limit, null, null,\
          \ null);\n            System.out.println(listPlacementPoliciesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ImagePlacementPoliciesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              imagePlacementPoliciesApi.listPlacementPolicies(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_placement_policies_api\
          \ = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)\n  \
          \  \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = image_placement_policies_api.list_placement_policies(_page=page, _limit=limit)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagePlacementPoliciesApiInstance\
          \ *api.ImagePlacementPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := ImagePlacementPoliciesApiInstance.ListPlacementPolicies(&page_, &limit_,\
          \ nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().([]import1.PlacementPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - ImagePlacementPolicies
      summary: Create an image placement policy
      description: |
        Creates an image placement policy using the provided request body.
        The name, placement type, cluster entity filter and image entity filter are mandatory fields for creating an image placement policy.
      operationId: createPlacementPolicy
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d34d6289-bdde-4ac3-af60-b229c3e14d78
      requestBody:
        description: Request to create an image placement policy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementPolicy'
        required: true
      responses:
        "202":
          description: The request to create the image placement policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.Filter;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.PlacementType;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.PlacementPolicy;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.CreatePlacementPolicyApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);

                  PlacementPolicy placementPolicy = new PlacementPolicy();

                  // PlacementPolicy object initializations here...
                  placementPolicy.setClusterEntityFilter(new Filter());  // required field
                  placementPolicy.setImageEntityFilter(new Filter());  // required field
                  placementPolicy.setName("Linux images placement policy");  // required field
                  placementPolicy.setPlacementType(PlacementType.UNKNOWN);  // required field

                  try {
                      CreatePlacementPolicyApiResponse createPlacementPolicyApiResponse = imagePlacementPoliciesApi.createPlacementPolicy(placementPolicy);
                      System.out.println(createPlacementPolicyApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, ImagePlacementPoliciesApi, Filter, PlacementType, PlacementPolicy } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);

          function sample() {
              let placementPolicy = new PlacementPolicy();

              // PlacementPolicy object initializations here...
              placementPolicy.setClusterEntityFilter(new Filter());  // required field
              placementPolicy.setImageEntityFilter(new Filter());  // required field
              placementPolicy.setName("Linux images placement policy");  // required field
              placementPolicy.setPlacementType(PlacementType.UNKNOWN);  // required field






              imagePlacementPoliciesApi.createPlacementPolicy(placementPolicy).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              image_placement_policies_api = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)
              placementPolicy = ntnx_vmm_py_client.PlacementPolicy()

              # PlacementPolicy object initializations here...
              placementPolicy.cluster_entity_filter = ntnx_vmm_py_client.Filter()  # required field
              placementPolicy.image_entity_filter = ntnx_vmm_py_client.Filter()  # required field
              placementPolicy.name = "Linux images placement policy"  # required field
              placementPolicy.placement_type = ntnx_vmm_py_client.PlacementType._UNKNOWN  # required field


              try:
                  api_response = image_placement_policies_api.create_placement_policy(body=placementPolicy)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              ImagePlacementPoliciesApiInstance *api.ImagePlacementPoliciesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)

              placementPolicy := import1.NewPlacementPolicy()

              // PlacementPolicy object initializations here...



              response, error := ImagePlacementPoliciesApiInstance.CreatePlacementPolicy(placementPolicy)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Linuximagesplacementpolicy","description":"Distributelinuximagestodatacenters","placementType":"$UNKNOWN","imageEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"enforcementState":"$UNKNOWN","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","$objectType":"vmm.v4.images.config.PlacementPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Linuximagesplacementpolicy","description":"Distributelinuximagestodatacenters","placementType":"$UNKNOWN","imageEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"enforcementState":"$UNKNOWN","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","$objectType":"vmm.v4.images.config.PlacementPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies"
  /vmm/v4.0/images/config/placement-policies/{extId}:
    get:
      tags:
      - ImagePlacementPolicies
      summary: Get an image placement policy
      description: Retrieves the image placement policy details for the provided external
        identifier.
      operationId: getPlacementPolicyById
      parameters:
      - name: extId
        in: path
        description: The external identifier of image placement policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cf96e27a-4e52-4cec-b563-d0b25413cc4a
      responses:
        "200":
          description: Returns the requested image placement policy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementPolicy'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.GetPlacementPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"e04CCA07-B52D-b2CE-faA6-FF72BFB4fceE\"\
          ;\n\n        try {\n            GetPlacementPolicyApiResponse getPlacementPolicyApiResponse\
          \ = imagePlacementPoliciesApi.getPlacementPolicyById(extId);\n         \
          \   System.out.println(getPlacementPolicyApiResponse.toString());\n\n  \
          \      } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagePlacementPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"BAECD46E-c0f4-Cf9E-3FCc-5EFabE6DeDc5\"\
          ;\n\n\n\n\n\n    imagePlacementPoliciesApi.getPlacementPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_placement_policies_api\
          \ = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"9ED1ebAf-FCd6-30D1-Baad-BaeabDAb8d88\"\n\n\n    try:\n\
          \        api_response = image_placement_policies_api.get_placement_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagePlacementPoliciesApiInstance\
          \ *api.ImagePlacementPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"3AFC3EDE-De6B-c168-Da0c-c343bf3fA2FE\"\n\n\n    response,\
          \ error := ImagePlacementPoliciesApiInstance.GetPlacementPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.PlacementPolicy)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/cDea2BCd-00eF-a3dB-b7f2-a4D1BEC9D24A" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/bfADEFbd-7a0F-8Fc8-EabC-f3afDcA3c3c7"
    put:
      tags:
      - ImagePlacementPolicies
      summary: Update an image placement policy
      description: |
        Updates the image placement policy using the provided request body with the given external identifier.
        It is always recommended to perform a GET operation on a resource before performing a PUT operation to ensure the correct ETag is used.
      operationId: updatePlacementPolicyById
      parameters:
      - name: extId
        in: path
        description: The external identifier of image placement policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 33f91e1b-8201-4f1a-b54b-e2bd27a1ed6e
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: e4b21d43-3859-4b41-851b-a3a83a7bb408
      requestBody:
        description: Updated image placement policy request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementPolicy'
        required: true
      responses:
        "202":
          description: The request to update the image placement policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.Filter;\nimport com.nutanix.dp1.vmm.vmm.v4.images.config.PlacementType;\n\
          import com.nutanix.dp1.vmm.vmm.v4.images.config.PlacementPolicy;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.GetPlacementPolicyApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.images.config.UpdatePlacementPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);\n\
          \n        PlacementPolicy placementPolicy = new PlacementPolicy();\n\n \
          \       // PlacementPolicy object initializations here...\n        placementPolicy.setClusterEntityFilter(new\
          \ Filter());  // required field\n        placementPolicy.setImageEntityFilter(new\
          \ Filter());  // required field\n        placementPolicy.setName(\"Linux\
          \ images placement policy\");  // required field\n        placementPolicy.setPlacementType(PlacementType.UNKNOWN);\
          \  // required field\n        \n        String extId = \"FAFacd9e-4b6b-6deE-EdF8-DAeBDa525Aea\"\
          ;\n\n        // perform GET call\n        GetPlacementPolicyApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = imagePlacementPoliciesApi.getPlacementPolicyById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdatePlacementPolicyApiResponse updatePlacementPolicyApiResponse\
          \ = imagePlacementPoliciesApi.updatePlacementPolicyById(extId, placementPolicy,\
          \ opts);\n            System.out.println(updatePlacementPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagePlacementPoliciesApi, Filter, PlacementType,\
          \ PlacementPolicy, GetPlacementPolicyApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n    let placementPolicy = new PlacementPolicy();\n\
          \n    // PlacementPolicy object initializations here...\n    placementPolicy.setClusterEntityFilter(new\
          \ Filter());  // required field\n    placementPolicy.setImageEntityFilter(new\
          \ Filter());  // required field\n    placementPolicy.setName(\"Linux images\
          \ placement policy\");  // required field\n    placementPolicy.setPlacementType(PlacementType.UNKNOWN);\
          \  // required field\n\n    \n    let extId = \"AaBA0dff-df8b-6c8a-b795-dAf5E5cDE212\"\
          ;\n\n\n    // Perform Get call\n    imagePlacementPoliciesApi.getPlacementPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        imagePlacementPoliciesApi.updatePlacementPolicyById(extId,\
          \ placementPolicy, {\"If-Match\" : etagValue}).then(({data, response}) =>\
          \ {\n            console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_placement_policies_api\
          \ = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)\n  \
          \  placementPolicy = ntnx_vmm_py_client.PlacementPolicy()\n\n    # PlacementPolicy\
          \ object initializations here...\n    placementPolicy.cluster_entity_filter\
          \ = ntnx_vmm_py_client.Filter()  # required field\n    placementPolicy.image_entity_filter\
          \ = ntnx_vmm_py_client.Filter()  # required field\n    placementPolicy.name\
          \ = \"Linux images placement policy\"  # required field\n    placementPolicy.placement_type\
          \ = ntnx_vmm_py_client.PlacementType._UNKNOWN  # required field\n    \n\
          \    ext_id = \"cBfD5bFf-2640-4Fc8-8d0b-9550FEFe4e1a\"\n\n    try:\n   \
          \     api_response = image_placement_policies_api.get_placement_policy_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = image_placement_policies_api.update_placement_policy_by_id(extId=ext_id,\
          \ body=placementPolicy, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagePlacementPoliciesApiInstance\
          \ *api.ImagePlacementPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)\n\
          \n    placementPolicy := import1.NewPlacementPolicy()\n\n    // PlacementPolicy\
          \ object initializations here...\n\n    \n    extId := \"bFce7ff6-DCef-aB2f-bAB8-F81AED1Ea1ea\"\
          \n\n    getResponse, err := ImagePlacementPoliciesApiInstance.GetPlacementPolicyById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ImagePlacementPoliciesApiInstance.UpdatePlacementPolicyById(&extId,\
          \ placementPolicy, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/d7197b58-F7bE-8Fe2-DC4f-ebebE67FA06f" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Linuximagesplacementpolicy","description":"Distributelinuximagestodatacenters","placementType":"$UNKNOWN","imageEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"enforcementState":"$UNKNOWN","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","$objectType":"vmm.v4.images.config.PlacementPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Linuximagesplacementpolicy","description":"Distributelinuximagestodatacenters","placementType":"$UNKNOWN","imageEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"enforcementState":"$UNKNOWN","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","$objectType":"vmm.v4.images.config.PlacementPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/8dAbcCc9-dFAe-DE3D-B5AC-A1DABEA2bF4E"
    delete:
      tags:
      - ImagePlacementPolicies
      summary: Delete an image placement policy
      description: Deletes the image placement policy with the given external identifier.
      operationId: deletePlacementPolicyById
      parameters:
      - name: extId
        in: path
        description: The external identifier of image placement policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e45d9d68-a8cd-492d-8451-9e07ee382b77
      responses:
        "202":
          description: The request to delete the image placement policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.DeletePlacementPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"f0Ff1ef5-EdFD-bAd6-FdFb-1bC4DCA7BDcd\"\
          ;\n\n        try {\n            DeletePlacementPolicyApiResponse deletePlacementPolicyApiResponse\
          \ = imagePlacementPoliciesApi.deletePlacementPolicyById(extId);\n      \
          \      System.out.println(deletePlacementPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagePlacementPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"E3fE8ff4-a7dB-facb-a182-BfBCDcbBbc6C\"\
          ;\n\n\n\n\n\n    imagePlacementPoliciesApi.deletePlacementPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_placement_policies_api\
          \ = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"1Cacb5af-E1FE-db8d-1De7-BeFEc0C4dbbE\"\n\n\n    try:\n\
          \        api_response = image_placement_policies_api.delete_placement_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagePlacementPoliciesApiInstance\
          \ *api.ImagePlacementPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"8ecb575E-AF28-c39f-A35b-13bBcf34fd39\"\n\n\n    response,\
          \ error := ImagePlacementPoliciesApiInstance.DeletePlacementPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/b4bE4E1b-6edE-3a03-ed3e-4B874A2B0AE4" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/AdEAd963-c6c9-c3FB-a6FF-d0AD6B9B8dCB"
  /vmm/v4.0/images/config/placement-policies/{extId}/$actions/suspend:
    post:
      tags:
      - ImagePlacementPolicies
      summary: Suspend an image placement policy
      description: |
        Suspends an active image placement policy.
        An active image placement policy is considered for enforcement.
      operationId: suspendPlacementPolicy
      parameters:
      - name: extId
        in: path
        description: The external identifier of image placement policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b5b30b2e-13bb-4147-aa39-a96e2e38683a
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c79bc6ce-67ad-4ddd-8860-59fc30cecb79
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.images.config.SuspendPlacementPolicyConfig'
        required: true
      responses:
        "202":
          description: The request to suspend an image placement policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/suspend\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/suspend\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/suspend\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Suspend Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.SuspendPlacementPolicyConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.images.config.SuspendPlacementPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);\n\
          \n        SuspendPlacementPolicyConfig suspendPlacementPolicyConfig = new\
          \ SuspendPlacementPolicyConfig();\n\n        // SuspendPlacementPolicyConfig\
          \ object initializations here...\n        \n        String extId = \"eCAfb4Aa-7D47-AA1d-FdC7-00ccbadAC27B\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            SuspendPlacementPolicyApiResponse\
          \ suspendPlacementPolicyApiResponse = imagePlacementPoliciesApi.suspendPlacementPolicy(extId,\
          \ suspendPlacementPolicyConfig, opts);\n            System.out.println(suspendPlacementPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagePlacementPoliciesApi, SuspendPlacementPolicyConfig\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n    let suspendPlacementPolicyConfig = new SuspendPlacementPolicyConfig();\n\
          \n    // SuspendPlacementPolicyConfig object initializations here...\n\n\
          \    \n    let extId = \"C7cA71aB-6Cde-8c1D-5EaD-f3d3D969DF6c\";\n\n\n \
          \   /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    imagePlacementPoliciesApi.suspendPlacementPolicy(extId, suspendPlacementPolicyConfig,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_placement_policies_api\
          \ = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)\n  \
          \  suspendPlacementPolicyConfig = ntnx_vmm_py_client.SuspendPlacementPolicyConfig()\n\
          \n    # SuspendPlacementPolicyConfig object initializations here...\n  \
          \  \n    ext_id = \"60badEBb-ACb3-d7bD-F674-Bdcb00e75C8C\"\n\n    \"\"\"\
          \n    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = image_placement_policies_api.suspend_placement_policy(extId=ext_id,\
          \ body=suspendPlacementPolicyConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagePlacementPoliciesApiInstance\
          \ *api.ImagePlacementPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)\n\
          \n    suspendPlacementPolicyConfig := import1.NewSuspendPlacementPolicyConfig()\n\
          \n    // SuspendPlacementPolicyConfig object initializations here...\n\n\
          \    \n    extId := \"482fbC2F-d13E-80cD-f676-25fCAeadC6eD\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := ImagePlacementPoliciesApiInstance.SuspendPlacementPolicy(&extId,\
          \ suspendPlacementPolicyConfig, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/5Bcf5dB5-AB8D-bf6d-9A5B-5Fda4bb44AAd/$actions/suspend" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"shouldCancelRunningTasks":false,"$objectType":"vmm.v4.images.config.SuspendPlacementPolicyConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"shouldCancelRunningTasks":false,"$objectType":"vmm.v4.images.config.SuspendPlacementPolicyConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/E2fb5AFC-Fccd-b2ae-2d5E-e80FF85dBfEf/$actions/suspend"
  /vmm/v4.0/images/config/placement-policies/{extId}/$actions/resume:
    post:
      tags:
      - ImagePlacementPolicies
      summary: Resume an image placement policy
      description: |
        Resumes a suspended image placement policy.
        A suspended image placement policy is one that is not being considered for enforcement.
      operationId: resumePlacementPolicy
      parameters:
      - name: extId
        in: path
        description: The external identifier of image placement policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 84c6f335-95f1-4caf-b896-3ec1293869ba
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 3cbd48b1-db0b-4d22-b464-da3dd04ef257
      responses:
        "202":
          description: The request to resume a suspended image placement policy is
            accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/resume\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/resume\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/resume\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Resume Image Placement Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagePlacementPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.ResumePlacementPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagePlacementPoliciesApi imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"f836eAD8-AAA3-830F-6abd-8D27Dd8afbF1\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ResumePlacementPolicyApiResponse\
          \ resumePlacementPolicyApiResponse = imagePlacementPoliciesApi.resumePlacementPolicy(extId,\
          \ opts);\n            System.out.println(resumePlacementPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagePlacementPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagePlacementPoliciesApi = new ImagePlacementPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"F2aafBAc-cfEC-D07B-D18A-1f9E0eD62E88\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    imagePlacementPoliciesApi.resumePlacementPolicy(extId, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_placement_policies_api\
          \ = ntnx_vmm_py_client.ImagePlacementPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"BEaEa08D-ecEa-3fed-7cFc-Db8eC8aA282b\"\n\n    \"\"\"\
          \n    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = image_placement_policies_api.resume_placement_policy(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagePlacementPoliciesApiInstance\
          \ *api.ImagePlacementPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImagePlacementPoliciesApiInstance = api.NewImagePlacementPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"bb8cA450-8aF8-bDdD-ccFa-9c3CAEfbaD0F\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := ImagePlacementPoliciesApiInstance.ResumePlacementPolicy(&extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/BfdbDeFb-53c4-1beF-DBdA-bFA0ecaF70cC/$actions/resume" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/placement-policies/1f043cD0-8dbb-bD5E-5a1D-CDeffee86362/$actions/resume"
  /vmm/v4.0/images/config/rate-limit-policies:
    get:
      tags:
      - ImageRateLimitPolicies
      summary: List image rate limit policies
      description: |
        Lists image rate limit policies created on Prism Central along with other details such as, name, description and so on.
        This API supports operations such as filtering, sorting, selection, and pagination.
      operationId: listRateLimitPolicies
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - description
          - name
          - rateLimitKbps
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - description
          - lastUpdateTime
          - name
          - rateLimitKbps
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - createTime
          - description
          - extId
          - lastUpdateTime
          - links
          - name
          - ownerExtId
          - rateLimitKbps
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of image rate limit policies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.images.config.RateLimitPolicy'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Image BW Throttling Policy
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImageRateLimitPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.ListRateLimitPoliciesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImageRateLimitPoliciesApi imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListRateLimitPoliciesApiResponse listRateLimitPoliciesApiResponse\
          \ = imageRateLimitPoliciesApi.listRateLimitPolicies(page, limit, null, null,\
          \ null);\n            System.out.println(listRateLimitPoliciesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ImageRateLimitPoliciesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              imageRateLimitPoliciesApi.listRateLimitPolicies(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_rate_limit_policies_api\
          \ = ntnx_vmm_py_client.ImageRateLimitPoliciesApi(api_client=client)\n  \
          \  \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = image_rate_limit_policies_api.list_rate_limit_policies(_page=page, _limit=limit)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImageRateLimitPoliciesApiInstance\
          \ *api.ImageRateLimitPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImageRateLimitPoliciesApiInstance = api.NewImageRateLimitPoliciesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := ImageRateLimitPoliciesApiInstance.ListRateLimitPolicies(&page_, &limit_,\
          \ nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().([]import1.RateLimitPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - ImageRateLimitPolicies
      summary: Create an image rate limit policy
      description: |
        Creates an image rate limit policy using the provided request body.
        The name, rate limit Kbps and cluster entity filter are mandatory fields for creating an image rate limit.
      operationId: createRateLimitPolicy
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 11a00569-1642-4ba1-a743-620404d1c7f8
      requestBody:
        description: Request to create an image rate limit policy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.images.config.RateLimitPolicy'
        required: true
      responses:
        "202":
          description: The request to create an image rate limit policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Image BW Throttling Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.ImageRateLimitPoliciesApi;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.Filter;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.RateLimitPolicy;
          import com.nutanix.dp1.vmm.vmm.v4.images.config.CreateRateLimitPolicyApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  ImageRateLimitPoliciesApi imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClient);

                  RateLimitPolicy rateLimitPolicy = new RateLimitPolicy();

                  // RateLimitPolicy object initializations here...
                  rateLimitPolicy.setClusterEntityFilter(new Filter());  // required field
                  rateLimitPolicy.setName("Data center rate limit policy");  // required field
                  rateLimitPolicy.setRateLimitKbps(1);  // required field

                  try {
                      CreateRateLimitPolicyApiResponse createRateLimitPolicyApiResponse = imageRateLimitPoliciesApi.createRateLimitPolicy(rateLimitPolicy);
                      System.out.println(createRateLimitPolicyApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, ImageRateLimitPoliciesApi, Filter, RateLimitPolicy } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClientInstance);

          function sample() {
              let rateLimitPolicy = new RateLimitPolicy();

              // RateLimitPolicy object initializations here...
              rateLimitPolicy.setClusterEntityFilter(new Filter());  // required field
              rateLimitPolicy.setName("Data center rate limit policy");  // required field
              rateLimitPolicy.setRateLimitKbps(1);  // required field






              imageRateLimitPoliciesApi.createRateLimitPolicy(rateLimitPolicy).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              image_rate_limit_policies_api = ntnx_vmm_py_client.ImageRateLimitPoliciesApi(api_client=client)
              rateLimitPolicy = ntnx_vmm_py_client.RateLimitPolicy()

              # RateLimitPolicy object initializations here...
              rateLimitPolicy.cluster_entity_filter = ntnx_vmm_py_client.Filter()  # required field
              rateLimitPolicy.name = "Data center rate limit policy"  # required field
              rateLimitPolicy.rate_limit_kbps = 1  # required field


              try:
                  api_response = image_rate_limit_policies_api.create_rate_limit_policy(body=rateLimitPolicy)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              ImageRateLimitPoliciesApiInstance *api.ImageRateLimitPoliciesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              ImageRateLimitPoliciesApiInstance = api.NewImageRateLimitPoliciesApi(ApiClientInstance)

              rateLimitPolicy := import1.NewRateLimitPolicy()

              // RateLimitPolicy object initializations here...



              response, error := ImageRateLimitPoliciesApiInstance.CreateRateLimitPolicy(rateLimitPolicy)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Datacenterratelimitpolicy","description":"Bandwidththrottlingforimageoperations","rateLimitKbps":0,"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","matchingClusterExtIds":["string"],"$objectType":"vmm.v4.images.config.RateLimitPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Datacenterratelimitpolicy","description":"Bandwidththrottlingforimageoperations","rateLimitKbps":0,"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","matchingClusterExtIds":["string"],"$objectType":"vmm.v4.images.config.RateLimitPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies"
  /vmm/v4.0/images/config/rate-limit-policies/{extId}:
    get:
      tags:
      - ImageRateLimitPolicies
      summary: Get an image rate limit policy
      description: Retrieves an image rate limit policy details for the provided external
        identifier.
      operationId: getRateLimitPolicyById
      parameters:
      - name: extId
        in: path
        description: The external identifier of image rate limit policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 48405f1f-12a0-44a3-9dad-587cde72696c
      responses:
        "200":
          description: Returns the requested image rate limit policy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.images.config.RateLimitPolicy'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Image BW Throttling Policy
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImageRateLimitPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.GetRateLimitPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImageRateLimitPoliciesApi imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"dF4cBDF6-F589-aB0D-8F62-fB8cbb2aC037\"\
          ;\n\n        try {\n            GetRateLimitPolicyApiResponse getRateLimitPolicyApiResponse\
          \ = imageRateLimitPoliciesApi.getRateLimitPolicyById(extId);\n         \
          \   System.out.println(getRateLimitPolicyApiResponse.toString());\n\n  \
          \      } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImageRateLimitPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"Bcd0a2D3-AFA4-bDcc-3ded-bBe2CDf90dCa\"\
          ;\n\n\n\n\n\n    imageRateLimitPoliciesApi.getRateLimitPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_rate_limit_policies_api\
          \ = ntnx_vmm_py_client.ImageRateLimitPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"9d7F3Fb2-F4d3-2efA-b60F-64CEDDcD0cc8\"\n\n\n    try:\n\
          \        api_response = image_rate_limit_policies_api.get_rate_limit_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImageRateLimitPoliciesApiInstance\
          \ *api.ImageRateLimitPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImageRateLimitPoliciesApiInstance = api.NewImageRateLimitPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"8b6E0CAa-f494-ead5-bEBC-BEFdEe468d87\"\n\n\n    response,\
          \ error := ImageRateLimitPoliciesApiInstance.GetRateLimitPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.RateLimitPolicy)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies/BceCADb4-Da0B-1274-bEAd-E5CEaAe91841" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies/90aDE8a6-9Aef-92Bf-3e30-DFDeB5eBccbF"
    put:
      tags:
      - ImageRateLimitPolicies
      summary: Update the image rate limit policy
      description: |
        Updates the image rate limit policy using the provided request body with the given external identifier.
        It is always recommended to perform a GET operation on a resource before performing a PUT operation to ensure the correct ETag is used.
      operationId: updateRateLimitPolicyById
      parameters:
      - name: extId
        in: path
        description: The external identifier of image rate limit policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c089a7a7-6812-47b7-af93-c0b9732c4b40
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c7a514ef-5ba6-4324-a5ae-33f9b2dabf9c
      requestBody:
        description: Updated image rate limit policy request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.images.config.RateLimitPolicy'
        required: true
      responses:
        "202":
          description: The request to update the image rate limit policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Image BW Throttling Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImageRateLimitPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.Filter;\nimport com.nutanix.dp1.vmm.vmm.v4.images.config.RateLimitPolicy;\n\
          import com.nutanix.dp1.vmm.vmm.v4.images.config.GetRateLimitPolicyApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.images.config.UpdateRateLimitPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImageRateLimitPoliciesApi imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClient);\n\
          \n        RateLimitPolicy rateLimitPolicy = new RateLimitPolicy();\n\n \
          \       // RateLimitPolicy object initializations here...\n        rateLimitPolicy.setClusterEntityFilter(new\
          \ Filter());  // required field\n        rateLimitPolicy.setName(\"Data\
          \ center rate limit policy\");  // required field\n        rateLimitPolicy.setRateLimitKbps(1);\
          \  // required field\n        \n        String extId = \"CB15fEBd-a99F-b83a-AdDd-d2de0DF1aBad\"\
          ;\n\n        // perform GET call\n        GetRateLimitPolicyApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = imageRateLimitPoliciesApi.getRateLimitPolicyById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateRateLimitPolicyApiResponse updateRateLimitPolicyApiResponse\
          \ = imageRateLimitPoliciesApi.updateRateLimitPolicyById(extId, rateLimitPolicy,\
          \ opts);\n            System.out.println(updateRateLimitPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImageRateLimitPoliciesApi, Filter, RateLimitPolicy,\
          \ GetRateLimitPolicyApiResponse } from \"@nutanix-api/vmm-js-client\";\n\
          \n// Configure the client\nlet apiClientInstance = new ApiClient();\n//\
          \ IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n    let rateLimitPolicy = new RateLimitPolicy();\n\
          \n    // RateLimitPolicy object initializations here...\n    rateLimitPolicy.setClusterEntityFilter(new\
          \ Filter());  // required field\n    rateLimitPolicy.setName(\"Data center\
          \ rate limit policy\");  // required field\n    rateLimitPolicy.setRateLimitKbps(1);\
          \  // required field\n\n    \n    let extId = \"BE3B7a84-dFA5-7BB6-6D05-bA5D71ADcAA7\"\
          ;\n\n\n    // Perform Get call\n    imageRateLimitPoliciesApi.getRateLimitPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        imageRateLimitPoliciesApi.updateRateLimitPolicyById(extId,\
          \ rateLimitPolicy, {\"If-Match\" : etagValue}).then(({data, response}) =>\
          \ {\n            console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_rate_limit_policies_api\
          \ = ntnx_vmm_py_client.ImageRateLimitPoliciesApi(api_client=client)\n  \
          \  rateLimitPolicy = ntnx_vmm_py_client.RateLimitPolicy()\n\n    # RateLimitPolicy\
          \ object initializations here...\n    rateLimitPolicy.cluster_entity_filter\
          \ = ntnx_vmm_py_client.Filter()  # required field\n    rateLimitPolicy.name\
          \ = \"Data center rate limit policy\"  # required field\n    rateLimitPolicy.rate_limit_kbps\
          \ = 1  # required field\n    \n    ext_id = \"CFE0c4e5-dCE1-eCa8-27da-b8C6CaBcd3aF\"\
          \n\n    try:\n        api_response = image_rate_limit_policies_api.get_rate_limit_policy_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = image_rate_limit_policies_api.update_rate_limit_policy_by_id(extId=ext_id,\
          \ body=rateLimitPolicy, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImageRateLimitPoliciesApiInstance\
          \ *api.ImageRateLimitPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImageRateLimitPoliciesApiInstance = api.NewImageRateLimitPoliciesApi(ApiClientInstance)\n\
          \n    rateLimitPolicy := import1.NewRateLimitPolicy()\n\n    // RateLimitPolicy\
          \ object initializations here...\n\n    \n    extId := \"2FaE0DeC-4eCf-0a4b-4A67-65daD2fAA5cB\"\
          \n\n    getResponse, err := ImageRateLimitPoliciesApiInstance.GetRateLimitPolicyById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ImageRateLimitPoliciesApiInstance.UpdateRateLimitPolicyById(&extId,\
          \ rateLimitPolicy, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies/A937DCDF-DacD-fCC5-dAc0-3adf521cC31e" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Datacenterratelimitpolicy","description":"Bandwidththrottlingforimageoperations","rateLimitKbps":0,"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","matchingClusterExtIds":["string"],"$objectType":"vmm.v4.images.config.RateLimitPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"Datacenterratelimitpolicy","description":"Bandwidththrottlingforimageoperations","rateLimitKbps":0,"clusterEntityFilter":{"type":"$UNKNOWN","categoryExtIds":["string"],"$objectType":"vmm.v4.images.config.Filter"},"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","matchingClusterExtIds":["string"],"$objectType":"vmm.v4.images.config.RateLimitPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies/D0b8fD4F-a6B5-c17A-e5b2-a74Fe4bBc8BD"
    delete:
      tags:
      - ImageRateLimitPolicies
      summary: Delete an image rate limit policy
      description: Deletes the image rate limit policy with the given external identifier.
      operationId: deleteRateLimitPolicyById
      parameters:
      - name: extId
        in: path
        description: The external identifier of image rate limit policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 8f783c01-f716-461e-af14-693b9f580626
      responses:
        "202":
          description: The request to delete image rate limit policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Image BW Throttling Policy
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImageRateLimitPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.DeleteRateLimitPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImageRateLimitPoliciesApi imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"fEa7b220-Ad5C-2de1-Ecc7-a22abecBaD8F\"\
          ;\n\n        try {\n            DeleteRateLimitPolicyApiResponse deleteRateLimitPolicyApiResponse\
          \ = imageRateLimitPoliciesApi.deleteRateLimitPolicyById(extId);\n      \
          \      System.out.println(deleteRateLimitPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImageRateLimitPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"A9dA0e31-Ae27-fC1A-cd6a-dd48F7A5F6CF\"\
          ;\n\n\n\n\n\n    imageRateLimitPoliciesApi.deleteRateLimitPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_rate_limit_policies_api\
          \ = ntnx_vmm_py_client.ImageRateLimitPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"7DaDf10B-8cAd-fF08-13EA-2BcD3acA34bc\"\n\n\n    try:\n\
          \        api_response = image_rate_limit_policies_api.delete_rate_limit_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImageRateLimitPoliciesApiInstance\
          \ *api.ImageRateLimitPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImageRateLimitPoliciesApiInstance = api.NewImageRateLimitPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"6DC3B06F-aebF-eef5-EaC4-c4a983dFe4c5\"\n\n\n    response,\
          \ error := ImageRateLimitPoliciesApiInstance.DeleteRateLimitPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies/2fCCbBEF-cB2A-eBF9-b90F-96bCc4eFbeC3" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/rate-limit-policies/eC8CaBfA-adfB-dcAC-9Fab-50AdfA38adEb"
  /vmm/v4.0/images/config/effective-rate-limit-policies:
    get:
      tags:
      - ImageRateLimitPolicies
      summary: Resolve the effective rate limit for Prism Elements
      description: |
        The effective rate limit for the Prism Elements.
        If no rate limit applies to a particular cluster, no entry is returned for that cluster.
        The API supports operations such as filtering, sorting, selection, and pagination.
      operationId: listEffectiveRateLimitPolicies
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - clusterExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterExtId
          - links
          - rateLimitExtId
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the effective rate limit for Prism Elements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.images.config.EffectiveRateLimitPolicy'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/effective-rate-limit-policies
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/effective-rate-limit-policies
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/images/config/effective-rate-limit-policies
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Effective Image BW Throttling Policy
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 15
        timeUnit: seconds
      - type: Small
        count: 15
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImageRateLimitPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.images.config.ListEffectiveRateLimitPoliciesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImageRateLimitPoliciesApi imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListEffectiveRateLimitPoliciesApiResponse listEffectiveRateLimitPoliciesApiResponse\
          \ = imageRateLimitPoliciesApi.listEffectiveRateLimitPolicies(page, limit,\
          \ null, null, null);\n            System.out.println(listEffectiveRateLimitPoliciesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ImageRateLimitPoliciesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imageRateLimitPoliciesApi = new ImageRateLimitPoliciesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              imageRateLimitPoliciesApi.listEffectiveRateLimitPolicies(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    image_rate_limit_policies_api\
          \ = ntnx_vmm_py_client.ImageRateLimitPoliciesApi(api_client=client)\n  \
          \  \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = image_rate_limit_policies_api.list_effective_rate_limit_policies(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/images/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImageRateLimitPoliciesApiInstance\
          \ *api.ImageRateLimitPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    ImageRateLimitPoliciesApiInstance = api.NewImageRateLimitPoliciesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := ImageRateLimitPoliciesApiInstance.ListEffectiveRateLimitPolicies(&page_,\
          \ &limit_, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.EffectiveRateLimitPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/images/config/effective-rate-limit-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/images/config/effective-rate-limit-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /vmm/v4.0/content/images:
    get:
      tags:
      - Images
      summary: List images
      description: |
        Lists images owned by Prism Central, along with image details such as name, description, type, and so on.
        This API supports operation such as filtering, sorting, selection, and pagination.
      operationId: listImages
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - description
          - name
          - sizeBytes
          - type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - description
          - lastUpdateTime
          - name
          - sizeBytes
          - type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - categoryExtIds
          - clusterLocationExtIds
          - createTime
          - description
          - extId
          - lastUpdateTime
          - links
          - name
          - ownerExtId
          - sizeBytes
          - tenantId
          - type
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of images.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.content.Image'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Image
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 15
        timeUnit: seconds
      - type: Small
        count: 15
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.ListImagesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagesApi imagesApi = new ImagesApi(apiClient);\n\n        \n     \
          \   int page = 0;\n        \n        int limit = 50;\n\n        try {\n\
          \            ListImagesApiResponse listImagesApiResponse = imagesApi.listImages(page,\
          \ limit, null, null, null);\n            System.out.println(listImagesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ImagesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imagesApi = new ImagesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              imagesApi.listImages(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    images_api\
          \ = ntnx_vmm_py_client.ImagesApi(api_client=client)\n    \n    page = 0\n\
          \    \n    limit = 50\n\n\n    try:\n        api_response = images_api.list_images(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagesApiInstance\
          \ *api.ImagesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ImagesApiInstance = api.NewImagesApi(ApiClientInstance)\n\n    \n \
          \   page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := ImagesApiInstance.ListImages(&page_,\
          \ &limit_, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Image)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/images?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/images?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - Images
      summary: Create an image
      description: |
        Creates an image using the provided request body.
        The name, type and source are mandatory fields to create an image.
      operationId: createImage
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: bde07838-c6f9-43cf-92dc-563215f5fd14
      requestBody:
        description: Request to create an image.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.Image'
        required: true
      responses:
        "202":
          description: The request to create an image is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Image
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.ImagesApi;
          import com.nutanix.dp1.vmm.vmm.v4.content.ImageType;
          import com.nutanix.dp1.vmm.vmm.v4.content.Image;
          import com.nutanix.dp1.vmm.vmm.v4.content.CreateImageApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  ImagesApi imagesApi = new ImagesApi(apiClient);

                  Image image = new Image();

                  // Image object initializations here...
                  image.setName("LinuxInstaller.iso");  // required field
                  image.setType(ImageType.UNKNOWN);  // required field

                  try {
                      CreateImageApiResponse createImageApiResponse = imagesApi.createImage(image);
                      System.out.println(createImageApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, ImagesApi, ImageType, Image } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imagesApi = new ImagesApi(apiClientInstance);

          function sample() {
              let image = new Image();

              // Image object initializations here...
              image.setName("LinuxInstaller.iso");  // required field
              image.setType(ImageType.UNKNOWN);  // required field






              imagesApi.createImage(image).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              images_api = ntnx_vmm_py_client.ImagesApi(api_client=client)
              image = ntnx_vmm_py_client.Image()

              # Image object initializations here...
              image.name = "LinuxInstaller.iso"  # required field
              image.type = ntnx_vmm_py_client.ImageType._UNKNOWN  # required field


              try:
                  api_response = images_api.create_image(body=image)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              ImagesApiInstance *api.ImagesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              ImagesApiInstance = api.NewImagesApi(ApiClientInstance)

              image := import1.NewImage()

              // Image object initializations here...



              response, error := ImagesApiInstance.CreateImage(image)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/images" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"LinuxInstaller.iso","description":"Installerwithupdatedkernel","type":"$UNKNOWN","checksum":{"hexDigest":"string","$objectType":"vmm.v4.content.ImageSha1Checksum"},"sizeBytes":0,"source":{"url":"https://example.com/images/linux_installer.iso","shouldAllowInsecureUrl":false,"basicAuth":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.content.UrlBasicAuth"},"$objectType":"vmm.v4.content.UrlSource"},"categoryExtIds":["string"],"clusterLocationExtIds":["string"],"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","placementPolicyStatus":[{"placementPolicyExtId":"string","complianceStatus":"$UNKNOWN","enforcementMode":"$UNKNOWN","policyClusterExtIds":["string"],"enforcedClusterExtIds":["string"],"conflictingPolicyExtIds":["string"],"$objectType":"vmm.v4.content.ImagePlacementStatus"}],"$objectType":"vmm.v4.content.Image"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"LinuxInstaller.iso","description":"Installerwithupdatedkernel","type":"$UNKNOWN","checksum":{"hexDigest":"string","$objectType":"vmm.v4.content.ImageSha1Checksum"},"sizeBytes":0,"source":{"url":"https://example.com/images/linux_installer.iso","shouldAllowInsecureUrl":false,"basicAuth":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.content.UrlBasicAuth"},"$objectType":"vmm.v4.content.UrlSource"},"categoryExtIds":["string"],"clusterLocationExtIds":["string"],"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","placementPolicyStatus":[{"placementPolicyExtId":"string","complianceStatus":"$UNKNOWN","enforcementMode":"$UNKNOWN","policyClusterExtIds":["string"],"enforcedClusterExtIds":["string"],"conflictingPolicyExtIds":["string"],"$objectType":"vmm.v4.content.ImagePlacementStatus"}],"$objectType":"vmm.v4.content.Image"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/images"
  /vmm/v4.0/content/images/{extId}:
    get:
      tags:
      - Images
      summary: Get an image
      description: Retrieves the image details for the provided external identifier.
      operationId: getImageById
      parameters:
      - name: extId
        in: path
        description: The external identifier of an image.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4c9b519e-423d-4856-b257-fdf10a14b78b
      responses:
        "200":
          description: Returns the requested image.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.content.Image'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Image
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.GetImageApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagesApi imagesApi = new ImagesApi(apiClient);\n\n        \n     \
          \   String extId = \"1C8530f4-86A6-aE5e-AE6d-Fc2f46E773Ef\";\n\n       \
          \ try {\n            GetImageApiResponse getImageApiResponse = imagesApi.getImageById(extId);\n\
          \            System.out.println(getImageApiResponse.toString());\n\n   \
          \     } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagesApi = new ImagesApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"bBB5869e-F4F6-Bd0C-eEC6-Ae05CC88ea48\";\n\n\n\n\
          \n\n    imagesApi.getImageById(extId).then(({data, response}) => {\n   \
          \     console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    images_api\
          \ = ntnx_vmm_py_client.ImagesApi(api_client=client)\n    \n    ext_id =\
          \ \"CA04e7De-Be2f-cCDb-CbE7-F80Ae2FEFcb4\"\n\n\n    try:\n        api_response\
          \ = images_api.get_image_by_id(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagesApiInstance\
          \ *api.ImagesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ImagesApiInstance = api.NewImagesApi(ApiClientInstance)\n\n    \n \
          \   extId := \"baAAAa5b-cA2C-6aD1-7bCa-1a36Eb8764eE\"\n\n\n    response,\
          \ error := ImagesApiInstance.GetImageById(&extId)\n    if error != nil {\n\
          \        fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.Image)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/images/Ee9EBcCa-Bc01-dD09-d24D-A6eCDfecE6fb" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/images/7EDceDBf-9BB5-64eC-9f5e-87e7723Be9cE"
    put:
      tags:
      - Images
      summary: Update an image
      description: |
        Updates the image with the given external identifier.
        It is always recommended to perform a GET operation on a resource before performing a PUT operation to ensure that the correct ETag is used.
      operationId: updateImageById
      parameters:
      - name: extId
        in: path
        description: The external identifier of an image.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1a1e4e3e-2823-47fe-9599-a622491b7576
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 94b7a2dd-59de-464e-be8b-5e32be4fcd47
      requestBody:
        description: Updated image request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.Image'
        required: true
      responses:
        "202":
          description: The request to update an image is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Image
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.ImageType;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.Image;\nimport com.nutanix.dp1.vmm.vmm.v4.content.GetImageApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.UpdateImageApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagesApi imagesApi = new ImagesApi(apiClient);\n\n        Image image\
          \ = new Image();\n\n        // Image object initializations here...\n  \
          \      image.setName(\"LinuxInstaller.iso\");  // required field\n     \
          \   image.setType(ImageType.UNKNOWN);  // required field\n        \n   \
          \     String extId = \"f70e3Cdd-23b2-341d-F178-eCaAFcb2a9Eb\";\n\n     \
          \   // perform GET call\n        GetImageApiResponse getResponse = null;\n\
          \        try {\n            getResponse = imagesApi.getImageById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateImageApiResponse updateImageApiResponse\
          \ = imagesApi.updateImageById(extId, image, opts);\n            System.out.println(updateImageApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagesApi, ImageType, Image, GetImageApiResponse\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagesApi = new ImagesApi(apiClientInstance);\n\nfunction sample() {\n\
          \    let image = new Image();\n\n    // Image object initializations here...\n\
          \    image.setName(\"LinuxInstaller.iso\");  // required field\n    image.setType(ImageType.UNKNOWN);\
          \  // required field\n\n    \n    let extId = \"4fADaefe-5BDa-Edef-A23D-cea7CdB6BbbA\"\
          ;\n\n\n    // Perform Get call\n    imagesApi.getImageById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        imagesApi.updateImageById(extId,\
          \ image, {\"If-Match\" : etagValue}).then(({data, response}) => {\n    \
          \        console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    images_api\
          \ = ntnx_vmm_py_client.ImagesApi(api_client=client)\n    image = ntnx_vmm_py_client.Image()\n\
          \n    # Image object initializations here...\n    image.name = \"LinuxInstaller.iso\"\
          \  # required field\n    image.type = ntnx_vmm_py_client.ImageType._UNKNOWN\
          \  # required field\n    \n    ext_id = \"F6FFFBC6-Ee04-A97d-bCb2-7BcEb72bB2Df\"\
          \n\n    try:\n        api_response = images_api.get_image_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = images_api.update_image_by_id(extId=ext_id,\
          \ body=image, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagesApiInstance\
          \ *api.ImagesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ImagesApiInstance = api.NewImagesApi(ApiClientInstance)\n\n    image\
          \ := import1.NewImage()\n\n    // Image object initializations here...\n\
          \n    \n    extId := \"Cfd0AbaB-8620-Bc9a-d0Cd-CC4984EFEeC9\"\n\n    getResponse,\
          \ err := ImagesApiInstance.GetImageById(&extId)\n    if err != nil {\n \
          \       fmt.Println(err)\n        return\n    }\n\n    // Extract E-Tag\
          \ Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\n  \
          \  args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ImagesApiInstance.UpdateImageById(&extId, image,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/images/EEb1bbcD-7eBC-CdEf-aDfb-dFaCaa2ec1Fb" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"LinuxInstaller.iso","description":"Installerwithupdatedkernel","type":"$UNKNOWN","checksum":{"hexDigest":"string","$objectType":"vmm.v4.content.ImageSha1Checksum"},"sizeBytes":0,"source":{"url":"https://example.com/images/linux_installer.iso","shouldAllowInsecureUrl":false,"basicAuth":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.content.UrlBasicAuth"},"$objectType":"vmm.v4.content.UrlSource"},"categoryExtIds":["string"],"clusterLocationExtIds":["string"],"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","placementPolicyStatus":[{"placementPolicyExtId":"string","complianceStatus":"$UNKNOWN","enforcementMode":"$UNKNOWN","policyClusterExtIds":["string"],"enforcedClusterExtIds":["string"],"conflictingPolicyExtIds":["string"],"$objectType":"vmm.v4.content.ImagePlacementStatus"}],"$objectType":"vmm.v4.content.Image"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"LinuxInstaller.iso","description":"Installerwithupdatedkernel","type":"$UNKNOWN","checksum":{"hexDigest":"string","$objectType":"vmm.v4.content.ImageSha1Checksum"},"sizeBytes":0,"source":{"url":"https://example.com/images/linux_installer.iso","shouldAllowInsecureUrl":false,"basicAuth":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.content.UrlBasicAuth"},"$objectType":"vmm.v4.content.UrlSource"},"categoryExtIds":["string"],"clusterLocationExtIds":["string"],"createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","ownerExtId":"string","placementPolicyStatus":[{"placementPolicyExtId":"string","complianceStatus":"$UNKNOWN","enforcementMode":"$UNKNOWN","policyClusterExtIds":["string"],"enforcedClusterExtIds":["string"],"conflictingPolicyExtIds":["string"],"$objectType":"vmm.v4.content.ImagePlacementStatus"}],"$objectType":"vmm.v4.content.Image"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/images/81A5BFBe-22b1-a914-26C9-e512A6CDab3d"
    delete:
      tags:
      - Images
      summary: Delete an image
      description: Deletes the image with the given external identifier.
      operationId: deleteImageById
      parameters:
      - name: extId
        in: path
        description: The external identifier of an image.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e8b031e4-7112-4754-ade0-c0f33017b178
      responses:
        "202":
          description: The request to delete an image is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Image
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.ImagesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.DeleteImageApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ImagesApi imagesApi = new ImagesApi(apiClient);\n\n        \n     \
          \   String extId = \"7EFbC3E1-0ecD-Db6F-827E-fd52CaeBa1fb\";\n\n       \
          \ try {\n            DeleteImageApiResponse deleteImageApiResponse = imagesApi.deleteImageById(extId);\n\
          \            System.out.println(deleteImageApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ImagesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let imagesApi = new ImagesApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"Bb1b3e36-CeF7-f9dd-8cD6-b5fFADCFD7Dd\";\n\n\n\n\
          \n\n    imagesApi.deleteImageById(extId).then(({data, response}) => {\n\
          \        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    images_api\
          \ = ntnx_vmm_py_client.ImagesApi(api_client=client)\n    \n    ext_id =\
          \ \"EBcFeE6A-1FF2-7edF-CaBF-Ea2F4CBe63D1\"\n\n\n    try:\n        api_response\
          \ = images_api.delete_image_by_id(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ImagesApiInstance\
          \ *api.ImagesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ImagesApiInstance = api.NewImagesApi(ApiClientInstance)\n\n    \n \
          \   extId := \"5BecDf4e-9fDb-ca4E-4Ace-Cd1dADCdCEf1\"\n\n\n    response,\
          \ error := ImagesApiInstance.DeleteImageById(&extId)\n    if error != nil\
          \ {\n        fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/images/DbaaCfdF-9efC-eD5a-d4Ad-5AbFc3EC096c" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/images/EdE01CAa-4BD5-bA3A-BBae-fB2800AeeEEe"
  /vmm/v4.0/content/images/$actions/import:
    post:
      tags:
      - Images
      summary: Import images from Prism Element
      description: Imports images owned by a registered Prism Element cluster into
        the current Prism Central.
      operationId: importImage
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 94c7504f-d1ad-4afe-8182-be4ef7a8f2ee
      requestBody:
        description: Reference to the Prism Element cluster and its images to be imported.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.ImageImportConfig'
        required: true
      responses:
        "202":
          description: The request to import image is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images/$actions/import
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images/$actions/import
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/images/$actions/import
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Migrate Image
        roleList:
        - Super Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.ImagesApi;
          import com.nutanix.dp1.vmm.vmm.v4.content.ImageImportConfig;
          import com.nutanix.dp1.vmm.vmm.v4.content.ImportImageApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  ImagesApi imagesApi = new ImagesApi(apiClient);

                  ImageImportConfig imageImportConfig = new ImageImportConfig();

                  // ImageImportConfig object initializations here...
                  imageImportConfig.setClusterExtId("DBf888FA-0aC3-21ca-1F89-fcafC08b8BaF");  // required field
                  imageImportConfig.setImagesExtIds(new ArrayList<>());  // required field

                  try {
                      ImportImageApiResponse importImageApiResponse = imagesApi.importImage(imageImportConfig);
                      System.out.println(importImageApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, ImagesApi, ImageImportConfig } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let imagesApi = new ImagesApi(apiClientInstance);

          function sample() {
              let imageImportConfig = new ImageImportConfig();

              // ImageImportConfig object initializations here...
              imageImportConfig.setClusterExtId("bd16AAc8-Cdd6-eF3a-C0Dc-FCa7EFEc93b7");  // required field
              imageImportConfig.setImagesExtIds([]);  // required field






              imagesApi.importImage(imageImportConfig).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              images_api = ntnx_vmm_py_client.ImagesApi(api_client=client)
              imageImportConfig = ntnx_vmm_py_client.ImageImportConfig()

              # ImageImportConfig object initializations here...
              imageImportConfig.cluster_ext_id = "fa82EAAE-aA6E-F47D-aFFd-ABccdf3ee448"  # required field
              imageImportConfig.images_ext_ids = []  # required field


              try:
                  api_response = images_api.import_image(body=imageImportConfig)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              ImagesApiInstance *api.ImagesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              ImagesApiInstance = api.NewImagesApi(ApiClientInstance)

              imageImportConfig := import1.NewImageImportConfig()

              // ImageImportConfig object initializations here...



              response, error := ImagesApiInstance.ImportImage(imageImportConfig)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/images/$actions/import" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"clusterExtId":"string","imagesExtIds":["string"],"$objectType":"vmm.v4.content.ImageImportConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"clusterExtId":"string","imagesExtIds":["string"],"$objectType":"vmm.v4.content.ImageImportConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/images/$actions/import"
  /vmm/v4.0/content/images/{imageExtId}/file:
    get:
      tags:
      - Images
      summary: Download an image
      description: Downloads the image with the given external identifier.
      operationId: getFileByImageId
      parameters:
      - name: imageExtId
        in: path
        description: The external identifier of an image.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c8ce8c92-fe88-401f-a6ae-fa25e106b11e
      responses:
        "302":
          description: Returns the requested image file.
          headers:
            Location:
              description: The redirect download URL for the image.
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?|nfs):\\/)?\\/?([^:\\/\\s]*)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
            X-Redirect-Token:
              description: The cookie to be used along with the redirect download
                URL for downloading the image.
              style: simple
              explode: false
              schema:
                type: string
              example: NTNX_IGW_SESSION=eyJmb28iOiJiYXIifQ
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{imageExtId}/file\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/images/{imageExtId}/file\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Download Image
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 3
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
  /vmm/v4.0/ahv/stats/vms:
    get:
      tags:
      - Stats
      summary: List VM stats for all VMs
      description: "List VM stats for all VMs.  Users can fetch the stats by specifying\
        \ the following params in the request query: 1) '$select': comma-separated\
        \ attributes with the prefix 'stats/', e.g. 'stats/controllerNumIo,stats/hypervisorNumIo'.\
        \ 2) '$startTime': the start time for which stats should be reported, e.g.\
        \ '2023-01-01T12:00:00.000-08:00'; 3) '$endTime': the end time for which stats\
        \ should be reported; 4) '$samplingInterval': the sampling interval in seconds\
        \ at which statistical data should be collected; 5) '$statType': the down-sampling\
        \ operator to use while performing down-sampling on stats data; 6) '$orderby';\
        \ 7) '$page'; 8) '$limit'; and 9) '$filter': the OData filter to use, e.g.\
        \ 'stats/hypervisorCpuUsagePpm gt 100000 and stats/guestMemoryUsagePpm lt\
        \ 2000000.'"
      operationId: listVmStats
      parameters:
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 34
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - stats/checkScore
          - stats/cluster
          - stats/controllerAvgIoLatencyMicros
          - stats/controllerAvgReadIoLatencyMicros
          - stats/controllerAvgReadIoSizeKb
          - stats/controllerAvgWriteIoLatencyMicros
          - stats/controllerAvgWriteIoSizeKb
          - stats/controllerIoBandwidthKbps
          - stats/controllerNumIo
          - stats/controllerNumIops
          - stats/controllerNumRandomIo
          - stats/controllerNumReadIo
          - stats/controllerNumReadIops
          - stats/controllerNumSeqIo
          - stats/controllerNumWriteIo
          - stats/controllerNumWriteIops
          - stats/controllerOplogDrainDestHddBytes
          - stats/controllerOplogDrainDestSsdBytes
          - stats/controllerRandomIoPpm
          - stats/controllerReadIoBandwidthKbps
          - stats/controllerReadIoPpm
          - stats/controllerReadSourceEstoreHddLocalBytes
          - stats/controllerReadSourceEstoreHddRemoteBytes
          - stats/controllerReadSourceEstoreSsdLocalBytes
          - stats/controllerReadSourceEstoreSsdRemoteBytes
          - stats/controllerReadSourceOplogBytes
          - stats/controllerSeqIoPpm
          - stats/controllerSharedUsageBytes
          - stats/controllerSnapshotUsageBytes
          - stats/controllerStorageTierSsdUsageBytes
          - stats/controllerTimespanMicros
          - stats/controllerTotalIoSizeKb
          - stats/controllerTotalIoTimeMicros
          - stats/controllerTotalReadIoSizeKb
          - stats/controllerTotalReadIoTimeMicros
          - stats/controllerTotalTransformedUsageBytes
          - stats/controllerUserBytes
          - stats/controllerWriteDestEstoreHddBytes
          - stats/controllerWriteDestEstoreSsdBytes
          - stats/controllerWriteIoBandwidthKbps
          - stats/controllerWriteIoPpm
          - stats/controllerWss120SecondReadMb
          - stats/controllerWss120SecondUnionMb
          - stats/controllerWss120SecondWriteMb
          - stats/controllerWss3600SecondReadMb
          - stats/controllerWss3600SecondUnionMb
          - stats/controllerWss3600SecondWriteMb
          - stats/diskCapacityBytes
          - stats/diskUsagePpm
          - stats/frameBufferUsagePpm
          - stats/gpuUsagePpm
          - stats/guestMemoryUsagePpm
          - stats/hypervisorAvgIoLatencyMicros
          - stats/hypervisorCpuReadyTimePpm
          - stats/hypervisorCpuUsagePpm
          - stats/hypervisorIoBandwidthKbps
          - stats/hypervisorMemoryBalloonReclaimTargetBytes
          - stats/hypervisorMemoryBalloonReclaimedBytes
          - stats/hypervisorMemoryUsagePpm
          - stats/hypervisorNumIo
          - stats/hypervisorNumIops
          - stats/hypervisorNumReadIo
          - stats/hypervisorNumReadIops
          - stats/hypervisorNumReceivePacketsDropped
          - stats/hypervisorNumReceivedBytes
          - stats/hypervisorNumTransmitPacketsDropped
          - stats/hypervisorNumTransmittedBytes
          - stats/hypervisorNumWriteIo
          - stats/hypervisorNumWriteIops
          - stats/hypervisorReadIoBandwidthKbps
          - stats/hypervisorSwapInRateKbps
          - stats/hypervisorSwapOutRateKbps
          - stats/hypervisorTimespanMicros
          - stats/hypervisorTotalIoSizeKb
          - stats/hypervisorTotalIoTimeMicros
          - stats/hypervisorTotalReadIoSizeKb
          - stats/hypervisorType
          - stats/hypervisorVmRunningTimeUsecs
          - stats/hypervisorWriteIoBandwidthKbps
          - stats/memoryReservedBytes
          - stats/memoryUsageBytes
          - stats/memoryUsagePpm
          - stats/numVcpusUsedPpm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - stats/checkScore
          - stats/controllerAvgIoLatencyMicros
          - stats/controllerAvgReadIoLatencyMicros
          - stats/controllerAvgReadIoSizeKb
          - stats/controllerAvgWriteIoLatencyMicros
          - stats/controllerAvgWriteIoSizeKb
          - stats/controllerIoBandwidthKbps
          - stats/controllerNumIo
          - stats/controllerNumIops
          - stats/controllerNumRandomIo
          - stats/controllerNumReadIo
          - stats/controllerNumReadIops
          - stats/controllerNumSeqIo
          - stats/controllerNumWriteIo
          - stats/controllerNumWriteIops
          - stats/controllerOplogDrainDestHddBytes
          - stats/controllerOplogDrainDestSsdBytes
          - stats/controllerRandomIoPpm
          - stats/controllerReadIoBandwidthKbps
          - stats/controllerReadIoPpm
          - stats/controllerReadSourceEstoreHddLocalBytes
          - stats/controllerReadSourceEstoreHddRemoteBytes
          - stats/controllerReadSourceEstoreSsdLocalBytes
          - stats/controllerReadSourceEstoreSsdRemoteBytes
          - stats/controllerReadSourceOplogBytes
          - stats/controllerSeqIoPpm
          - stats/controllerSharedUsageBytes
          - stats/controllerSnapshotUsageBytes
          - stats/controllerStorageTierSsdUsageBytes
          - stats/controllerTimespanMicros
          - stats/controllerTotalIoSizeKb
          - stats/controllerTotalIoTimeMicros
          - stats/controllerTotalReadIoSizeKb
          - stats/controllerTotalReadIoTimeMicros
          - stats/controllerTotalTransformedUsageBytes
          - stats/controllerUserBytes
          - stats/controllerWriteDestEstoreHddBytes
          - stats/controllerWriteDestEstoreSsdBytes
          - stats/controllerWriteIoBandwidthKbps
          - stats/controllerWriteIoPpm
          - stats/controllerWss120SecondReadMb
          - stats/controllerWss120SecondUnionMb
          - stats/controllerWss120SecondWriteMb
          - stats/controllerWss3600SecondReadMb
          - stats/controllerWss3600SecondUnionMb
          - stats/controllerWss3600SecondWriteMb
          - stats/diskCapacityBytes
          - stats/diskUsagePpm
          - stats/frameBufferUsagePpm
          - stats/gpuUsagePpm
          - stats/guestMemoryUsagePpm
          - stats/hypervisorAvgIoLatencyMicros
          - stats/hypervisorCpuReadyTimePpm
          - stats/hypervisorCpuUsagePpm
          - stats/hypervisorIoBandwidthKbps
          - stats/hypervisorMemoryBalloonReclaimTargetBytes
          - stats/hypervisorMemoryBalloonReclaimedBytes
          - stats/hypervisorMemoryUsagePpm
          - stats/hypervisorNumIo
          - stats/hypervisorNumIops
          - stats/hypervisorNumReadIo
          - stats/hypervisorNumReadIops
          - stats/hypervisorNumReceivePacketsDropped
          - stats/hypervisorNumReceivedBytes
          - stats/hypervisorNumTransmitPacketsDropped
          - stats/hypervisorNumTransmittedBytes
          - stats/hypervisorNumWriteIo
          - stats/hypervisorNumWriteIops
          - stats/hypervisorReadIoBandwidthKbps
          - stats/hypervisorSwapInRateKbps
          - stats/hypervisorSwapOutRateKbps
          - stats/hypervisorTimespanMicros
          - stats/hypervisorTotalIoSizeKb
          - stats/hypervisorTotalIoTimeMicros
          - stats/hypervisorTotalReadIoSizeKb
          - stats/hypervisorVmRunningTimeUsecs
          - stats/hypervisorWriteIoBandwidthKbps
          - stats/memoryReservedBytes
          - stats/memoryUsageBytes
          - stats/memoryUsagePpm
          - stats/numVcpusUsedPpm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of VM stats for all VMs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmStats'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Stats
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 2
        timeUnit: seconds
      - type: XLarge
        count: 2
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.StatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.stats.ListVmStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StatsApi statsApi = new StatsApi(apiClient);\n\n        // Datetime\
          \ needs to be in RFC3339 format\n        OffsetDateTime startTime = OffsetDateTime.now();\n\
          \        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ endTime = OffsetDateTime.now();\n        \n        int samplingInterval\
          \ = 1;\n        \n        Object statType = SOME_RAW_DATA;\n        \n \
          \       int page = 0;\n        \n        int limit = 50;\n\n        try\
          \ {\n            ListVmStatsApiResponse listVmStatsApiResponse = statsApi.listVmStats(startTime,\
          \ endTime, samplingInterval, statType, page, limit, null, null, null);\n\
          \            System.out.println(listVmStatsApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, StatsApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let statsApi = new StatsApi(apiClientInstance);

          function sample() {

              //Datetime needs to be in RFC3339 format
              let $startTime = "2021-01-01T00:00:00-08:00";
              //Datetime needs to be in RFC3339 format
              let $endTime = "2021-01-01T00:00:00-08:00";

              // Construct Optional Parameters
              var opts = {};
              opts["$samplingInterval"] = 1;
              opts["$statType"] = SOME_RAW_DATA;
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              statsApi.listVmStats($startTime, $endTime, opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    stats_api\
          \ = ntnx_vmm_py_client.StatsApi(api_client=client)\n    # Datetime needs\
          \ to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n  \
          \  # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = stats_api.list_vm_stats(_startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type, _page=page, _limit=limit)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StatsApiInstance\
          \ *api.StatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    StatsApiInstance = api.NewStatsApi(ApiClientInstance)\n\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n    \n    page_ := 0\n   \
          \ \n    limit_ := 50\n\n\n    response, error := StatsApiInstance.ListVmStats(&startTime_,\
          \ &endTime_, &samplingInterval_, &statType_, &page_, &limit_, nil, nil,\
          \ nil)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().([]import1.VmStats)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms?$startTime=2021-01-01T00:00:00-08:00&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$page=0&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms?$startTime=2021-01-01T00:00:00-08:00&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$page=0&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/ahv/stats/vms/{extId}:
    get:
      tags:
      - Stats
      summary: Get VM stats for a given VM
      description: "Get VM stats for a given VM. Users can fetch the stats by specifying\
        \ the following params in the request query: 1) '$select': comma-separated\
        \ attributes with the prefix 'stats/', e.g. 'stats/checkScore'. 2) '$startTime':\
        \ the start time for which stats should be reported, e.g. '2023-01-01T12:00:00.000-08:00';\
        \ 3) '$endTime': the end time for which stats should be reported; 4) '$samplingInterval':\
        \ the sampling interval in seconds at which statistical data should be collected;\
        \ 5) '$statType': the down-sampling operator to use while performing down-sampling\
        \ on stats data"
      operationId: getVmStatsById
      parameters:
      - name: extId
        in: path
        description: Retrieve statistics for the VM with the specified external ID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 767f7f46-44a4-43a5-ac66-2139809cc3da
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 36
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the stats for a requested VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Stats
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 4
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.StatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.stats.GetVmStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StatsApi statsApi = new StatsApi(apiClient);\n\n        \n        String\
          \ extId = \"bcAf10ED-8C2d-Db2B-3EF0-edcFCDfACC1d\";\n        // Datetime\
          \ needs to be in RFC3339 format\n        OffsetDateTime startTime = OffsetDateTime.now();\n\
          \        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ endTime = OffsetDateTime.now();\n        \n        int samplingInterval\
          \ = 1;\n        \n        Object statType = SOME_RAW_DATA;\n\n        try\
          \ {\n            GetVmStatsApiResponse getVmStatsApiResponse = statsApi.getVmStatsById(extId,\
          \ startTime, endTime, samplingInterval, statType, null);\n            System.out.println(getVmStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StatsApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let statsApi = new StatsApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"0bBb0A6a-ecFa-ADD5-c820-d2EEBF9aFdAa\";\n    //Datetime\
          \ needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    statsApi.getVmStatsById(extId,\
          \ $startTime, $endTime, opts).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    stats_api\
          \ = ntnx_vmm_py_client.StatsApi(api_client=client)\n    \n    ext_id = \"\
          DAC2FfA2-9AEE-4CCF-C266-9fBAFA33dddB\"\n    # Datetime needs to be in RFC3339\
          \ format\n    start_time = datetime.datetime.Now()\n    # Datetime needs\
          \ to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n    \n\
          \    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\n  \
          \  try:\n        api_response = stats_api.get_vm_stats_by_id(extId=ext_id,\
          \ _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StatsApiInstance\
          \ *api.StatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    StatsApiInstance = api.NewStatsApi(ApiClientInstance)\n\n    \n   \
          \ extId := \"Fbb4fECb-2DCB-A8Bf-85D3-2A58c070E4AC\"\n    // Datetime needs\
          \ to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ StatsApiInstance.GetVmStatsById(&extId, &startTime_, &endTime_, &samplingInterval_,\
          \ &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VmStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms/eBBeCE9B-Fc3e-FA64-BBAA-9C7dAd8cFF76?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms/4a2eaA30-A4Bf-4e19-F2DA-FF10E5f57011?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/ahv/stats/vms/{vmExtId}/disks/{extId}:
    get:
      tags:
      - Stats
      summary: Get the stats for the specified VM disk
      description: "Fetches the stats for the specified VM disk. Users can fetch the\
        \ stats by specifying the following params in the request query: 1) '$select':\
        \ comma-separated attributes with the prefix 'stats/', e.g. 'stats/checkScore'.\
        \ 2) '$startTime': the start time for which stats should be reported, e.g.\
        \ '2023-01-01T12:00:00.000-08:00'; 3) '$endTime': the end time for which stats\
        \ should be reported; 4) '$samplingInterval': the sampling interval in seconds\
        \ at which statistical data should be collected; 5) '$statType': the down-sampling\
        \ operator to use while performing down-sampling on stats data"
      operationId: getDiskStatsById
      parameters:
      - name: vmExtId
        in: path
        description: This field specifies the VM external ID when retrieving the stats
          for a given VM Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 558cd515-7057-451c-ad93-3eebf6ef5bcf
      - name: extId
        in: path
        description: This field specifies the VM external ID when retrieving the stats
          for a given VM Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 8300f529-f0a0-4680-8a30-27f91307787b
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 94
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
          - vmExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the requested stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmDiskStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Disk Stats
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 4
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.StatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.stats.GetDiskStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StatsApi statsApi = new StatsApi(apiClient);\n\n        \n        String\
          \ vmExtId = \"8DbbaFeD-BD13-DCDf-ADea-29dEd80cdbfE\";\n        \n      \
          \  String extId = \"b08809B8-CE4d-E8F8-5bAf-CaCa8CAf39DB\";\n        //\
          \ Datetime needs to be in RFC3339 format\n        OffsetDateTime startTime\
          \ = OffsetDateTime.now();\n        // Datetime needs to be in RFC3339 format\n\
          \        OffsetDateTime endTime = OffsetDateTime.now();\n        \n    \
          \    int samplingInterval = 1;\n        \n        Object statType = SOME_RAW_DATA;\n\
          \n        try {\n            GetDiskStatsApiResponse getDiskStatsApiResponse\
          \ = statsApi.getDiskStatsById(vmExtId, extId, startTime, endTime, samplingInterval,\
          \ statType, null);\n            System.out.println(getDiskStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StatsApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let statsApi = new StatsApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let vmExtId = \"51cCbB0d-DAA2-8a8E-13Eb-A14E2DBEBeC7\";\n  \
          \  \n    let extId = \"9fcb1244-CffE-49FB-75dC-2cb2d12dF43f\";\n    //Datetime\
          \ needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    statsApi.getDiskStatsById(vmExtId,\
          \ extId, $startTime, $endTime, opts).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    stats_api\
          \ = ntnx_vmm_py_client.StatsApi(api_client=client)\n    \n    vm_ext_id\
          \ = \"AA5d77Da-CbDC-cFe9-B882-22D55C96EBFC\"\n    \n    ext_id = \"1Fbfe796-C82f-eE15-B8eb-Bf5bD99C59b1\"\
          \n    # Datetime needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = stats_api.get_disk_stats_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StatsApiInstance\
          \ *api.StatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    StatsApiInstance = api.NewStatsApi(ApiClientInstance)\n\n    \n   \
          \ vmExtId := \"AB78EECC-D47F-32ba-FADe-Ef55dbd8B3BD\"\n    \n    extId :=\
          \ \"fa7D6dDB-feFf-cccF-68a1-Bfa7F76d48c1\"\n    // Datetime needs to be\
          \ in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime needs\
          \ to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ StatsApiInstance.GetDiskStatsById(&vmExtId, &extId, &startTime_, &endTime_,\
          \ &samplingInterval_, &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VmDiskStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms/2d2f4Cdb-F9cB-Ae3f-CA6B-bA333CfE3ECc/disks/CAFeeDdD-Ae00-bFCb-42F5-Db8aa8bd0CE2?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms/3b8Fef04-5bE7-dDe6-BEEc-6F7befF5aef8/disks/A164f6fc-C99C-564a-AAFB-2EE3eABF5DBB?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/ahv/stats/vms/{vmExtId}/nics/{extId}:
    get:
      tags:
      - Stats
      summary: Get the stats for the specified VM NIC
      description: "Fetches the stats for the specified VM NIC. Users can fetch the\
        \ stats by specifying the following params in the request query: 1) '$select':\
        \ comma-separated attributes with the prefix 'stats/', e.g. 'stats/checkScore'.\
        \ 2) '$startTime': the start time for which stats should be reported, e.g.\
        \ '2023-01-01T12:00:00.000-08:00'; 3) '$endTime': the end time for which stats\
        \ should be reported; 4) '$samplingInterval': the sampling interval in seconds\
        \ at which statistical data should be collected; 5) '$statType': the down-sampling\
        \ operator to use while performing down-sampling on stats data"
      operationId: getNicStatsById
      parameters:
      - name: vmExtId
        in: path
        description: This field specifies the VM external ID when retrieving the stats
          for a given VM NIC.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 9dd9e334-b929-42fb-9246-1d2967d32d24
      - name: extId
        in: path
        description: This field specifies the external ID of the VM NIC when retrieving
          stats for a given VM NIC.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 324f9b45-b6b2-4f32-b9b3-2a4efc54e589
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 42
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - extId
          - links
          - stats
          - tenantId
          - vmExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the requested stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmNicStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine NIC Stats
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 4
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.StatsApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.stats.GetNicStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StatsApi statsApi = new StatsApi(apiClient);\n\n        \n        String\
          \ vmExtId = \"dBe5ba9F-ffaa-BF6f-78BA-f6ecC0cF6aeB\";\n        \n      \
          \  String extId = \"20fcbE7E-2dEC-fEcf-556F-f2E68D7Aff4E\";\n        //\
          \ Datetime needs to be in RFC3339 format\n        OffsetDateTime startTime\
          \ = OffsetDateTime.now();\n        // Datetime needs to be in RFC3339 format\n\
          \        OffsetDateTime endTime = OffsetDateTime.now();\n        \n    \
          \    int samplingInterval = 1;\n        \n        Object statType = SOME_RAW_DATA;\n\
          \n        try {\n            GetNicStatsApiResponse getNicStatsApiResponse\
          \ = statsApi.getNicStatsById(vmExtId, extId, startTime, endTime, samplingInterval,\
          \ statType, null);\n            System.out.println(getNicStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StatsApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let statsApi = new StatsApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let vmExtId = \"a3f8eADc-bbdc-b4df-6314-BDFB1CECaf22\";\n  \
          \  \n    let extId = \"cacDc25a-DcD7-DCAf-BEf5-cEc2bd0DDdBB\";\n    //Datetime\
          \ needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    statsApi.getNicStatsById(vmExtId,\
          \ extId, $startTime, $endTime, opts).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\nimport datetime\n\nif __name__ == \"\
          __main__\":\n    # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    stats_api\
          \ = ntnx_vmm_py_client.StatsApi(api_client=client)\n    \n    vm_ext_id\
          \ = \"df6ecc2d-6DC2-bfab-bEEc-8757aDbC3abe\"\n    \n    ext_id = \"2DaaE8c8-c39e-EE13-AE9D-F2BdbB1c3B74\"\
          \n    # Datetime needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = stats_api.get_nic_stats_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StatsApiInstance\
          \ *api.StatsApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    StatsApiInstance = api.NewStatsApi(ApiClientInstance)\n\n    \n   \
          \ vmExtId := \"7c0cB6bc-efaC-cd75-BBeA-DF45cEBcf5eF\"\n    \n    extId :=\
          \ \"DDe69df7-cC8C-Ea2A-B74A-dfFE9fc3341D\"\n    // Datetime needs to be\
          \ in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime needs\
          \ to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ StatsApiInstance.GetNicStatsById(&vmExtId, &extId, &startTime_, &endTime_,\
          \ &samplingInterval_, &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.VmNicStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms/Dffa2FD7-F3e6-F1F6-FBed-d8EAEffDE4E7/nics/A3DBE371-BfDD-aB44-2B7C-64bF49BD5e3B?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/stats/vms/7EECcFEc-39A4-BECF-faD5-8Fe3aDA9Ddc6/nics/AB5fcCAd-d4a5-b0Ad-d9cf-EbE4f5bc0C02?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /vmm/v4.0/content/templates:
    get:
      tags:
      - Templates
      summary: List all templates
      description: |
        Lists templates with details such as name, description, VM configuration and so on.
        This operation supports filtering, sorting and pagination.
      operationId: listTemplates
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - templateName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - templateName
          - updateTime
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - createTime
          - createdBy
          - guestUpdateStatus
          - templateDescription
          - templateName
          - templateVersionSpec
          - updateTime
          - updatedBy
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of templates.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.content.Template'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/templates
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/templates
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/templates
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.ListTemplatesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        int page = 0;\n        \n        int limit = 50;\n\n      \
          \  try {\n            ListTemplatesApiResponse listTemplatesApiResponse\
          \ = templatesApi.listTemplates(page, limit, null, null, null);\n       \
          \     System.out.println(listTemplatesApiResponse.toString());\n\n     \
          \   } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, TemplatesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let templatesApi = new TemplatesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              templatesApi.listTemplates(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    page =\
          \ 0\n    \n    limit = 50\n\n\n    try:\n        api_response = templates_api.list_templates(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error :=\
          \ TemplatesApiInstance.ListTemplates(&page_, &limit_, nil, nil, nil)\n \
          \   if error != nil {\n        fmt.Println(error)\n        return\n    }\n\
          \    data, _ := response.GetData().([]import1.Template)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - Templates
      summary: Create template from a VM
      description: |
        Creates a template from the given VM identifier.
        A template stores the VM configuration and disks from the source VM.
      operationId: createTemplate
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 5e9c8e77-795f-4ca0-b022-27220c83c6c9
      requestBody:
        description: Request to create a template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.Template'
        required: true
      responses:
        "202":
          description: The request to create a template is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/templates
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/templates
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/content/templates
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.TemplatesApi;
          import com.nutanix.dp1.vmm.vmm.v4.content.Template;
          import com.nutanix.dp1.vmm.vmm.v4.content.CreateTemplateApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  TemplatesApi templatesApi = new TemplatesApi(apiClient);

                  Template template = new Template();

                  // Template object initializations here...

                  try {
                      CreateTemplateApiResponse createTemplateApiResponse = templatesApi.createTemplate(template);
                      System.out.println(createTemplateApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, TemplatesApi, Template } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let templatesApi = new TemplatesApi(apiClientInstance);

          function sample() {
              let template = new Template();

              // Template object initializations here...






              templatesApi.createTemplate(template).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              templates_api = ntnx_vmm_py_client.TemplatesApi(api_client=client)
              template = ntnx_vmm_py_client.Template()

              # Template object initializations here...


              try:
                  api_response = templates_api.create_template(body=template)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              TemplatesApiInstance *api.TemplatesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)

              template := import1.NewTemplate()

              // Template object initializations here...



              response, error := TemplatesApiInstance.CreateTemplate(template)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"templateName":"LinuxServer_VM_Template","templateDescription":"TemplatefordeployingLinuxServervirtualmachines.","templateVersionSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"versionName":"v2.1","versionDescription":"Updatedversionwith8GBmemory.","vmSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"},"createTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"versionSource":{"extId":"string","guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.TemplateVmReference"},"versionSourceDiscriminator":"vmm.v4.content.TemplateVersionReference","isActiveVersion":true,"isGcOverrideEnabled":true,"$objectType":"vmm.v4.content.TemplateVersionSpec"},"guestUpdateStatus":{"deployedVmReference":"string","$objectType":"vmm.v4.content.GuestUpdateStatus"},"createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"updatedBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"$objectType":"vmm.v4.content.Template"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"templateName":"LinuxServer_VM_Template","templateDescription":"TemplatefordeployingLinuxServervirtualmachines.","templateVersionSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"versionName":"v2.1","versionDescription":"Updatedversionwith8GBmemory.","vmSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"},"createTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"versionSource":{"extId":"string","guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.TemplateVmReference"},"versionSourceDiscriminator":"vmm.v4.content.TemplateVersionReference","isActiveVersion":true,"isGcOverrideEnabled":true,"$objectType":"vmm.v4.content.TemplateVersionSpec"},"guestUpdateStatus":{"deployedVmReference":"string","$objectType":"vmm.v4.content.GuestUpdateStatus"},"createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"updatedBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"$objectType":"vmm.v4.content.Template"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates"
  /vmm/v4.0/content/templates/{extId}:
    get:
      tags:
      - Templates
      summary: Get template details
      description: Retrieves the template details for a given template identifier.
      operationId: getTemplateById
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7ad31035-9e8b-4fb1-b8fd-fa39326887d8
      responses:
        "200":
          description: Returns the requested template.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.content.Template'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.GetTemplateApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        String extId = \"876Af2a3-8bbf-EEAe-Cbf2-EcaadD4aEBcE\";\n\n\
          \        try {\n            GetTemplateApiResponse getTemplateApiResponse\
          \ = templatesApi.getTemplateById(extId);\n            System.out.println(getTemplateApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"5229798e-c2dC-ad7a-4bEf-3EEfb73dBe4B\";\n\
          \n\n\n\n\n    templatesApi.getTemplateById(extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    ext_id\
          \ = \"3CFAeaEb-0DAC-ccCC-Ded7-1bEACBBCFBDA\"\n\n\n    try:\n        api_response\
          \ = templates_api.get_template_by_id(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    extId := \"2509debA-46CA-eDdE-FCBa-aA895eEDFBC2\"\n\n\n    response,\
          \ error := TemplatesApiInstance.GetTemplateById(&extId)\n    if error !=\
          \ nil {\n        fmt.Println(error)\n        return\n    }\n    data, _\
          \ := response.GetData().(import1.Template)\n    fmt.Println(data)\n\n}\n\
          \n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/beADC2c7-AdfB-Ac8B-56dc-2CB2fc5FdADb" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/1FA2c8de-c5ba-ebef-9b5B-aaAcEeB3cFfc"
    put:
      tags:
      - Templates
      summary: Update a template
      description: |
        Updates a template with the given template identifier.
        This operation updates the template configuration and/or adds a new version to the template.
        Unless otherwise specified, the newly created version is set as the active version.
      operationId: updateTemplateById
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 196d66c2-7634-4a80-a44e-6d83a0af222d
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f8703c8f-ea3f-4873-85af-bcb6725434ee
      requestBody:
        description: Request to update a template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.Template'
      responses:
        "202":
          description: The request to update a template is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.Template;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.GetTemplateApiResponse;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.content.UpdateTemplateApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  Template template = new Template();\n\n        // Template object initializations\
          \ here...\n        \n        String extId = \"bfCA8b36-6ABC-Fe5c-00AE-7AFDDA4CaaaB\"\
          ;\n\n        // perform GET call\n        GetTemplateApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = templatesApi.getTemplateById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateTemplateApiResponse updateTemplateApiResponse\
          \ = templatesApi.updateTemplateById(extId, template, opts);\n          \
          \  System.out.println(updateTemplateApiResponse.toString());\n\n       \
          \ } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi, Template, GetTemplateApiResponse\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let template = new Template();\n\n    // Template object initializations\
          \ here...\n\n    \n    let extId = \"edbBa9dc-9E97-aCC1-fBe5-B9eFEAf0cF36\"\
          ;\n\n\n    // Perform Get call\n    templatesApi.getTemplateById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        templatesApi.updateTemplateById(extId,\
          \ template, {\"If-Match\" : etagValue}).then(({data, response}) => {\n \
          \           console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    template = ntnx_vmm_py_client.Template()\n\
          \n    # Template object initializations here...\n    \n    ext_id = \"D4AadAFC-Aac2-EFef-9Fa1-4cCfb6AFC15b\"\
          \n\n    try:\n        api_response = templates_api.get_template_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = templates_api.update_template_by_id(extId=ext_id,\
          \ body=template, if_match=etag_value)\n        print(api_response)\n   \
          \ except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   template := import1.NewTemplate()\n\n    // Template object initializations\
          \ here...\n\n    \n    extId := \"F3b6cc2b-3ACd-BA9b-EEde-fCFD202A1BB0\"\
          \n\n    getResponse, err := TemplatesApiInstance.GetTemplateById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := TemplatesApiInstance.UpdateTemplateById(&extId,\
          \ template, args)\n    if error != nil {\n        fmt.Println(error)\n \
          \       return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/5c6b36dc-eE4f-DabE-E0DD-36Ab8c90Bd7e" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"templateName":"LinuxServer_VM_Template","templateDescription":"TemplatefordeployingLinuxServervirtualmachines.","templateVersionSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"versionName":"v2.1","versionDescription":"Updatedversionwith8GBmemory.","vmSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"},"createTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"versionSource":{"extId":"string","guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.TemplateVmReference"},"versionSourceDiscriminator":"vmm.v4.content.TemplateVersionReference","isActiveVersion":true,"isGcOverrideEnabled":true,"$objectType":"vmm.v4.content.TemplateVersionSpec"},"guestUpdateStatus":{"deployedVmReference":"string","$objectType":"vmm.v4.content.GuestUpdateStatus"},"createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"updatedBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"$objectType":"vmm.v4.content.Template"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"templateName":"LinuxServer_VM_Template","templateDescription":"TemplatefordeployingLinuxServervirtualmachines.","templateVersionSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"versionName":"v2.1","versionDescription":"Updatedversionwith8GBmemory.","vmSpec":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"},"createTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"versionSource":{"extId":"string","guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.TemplateVmReference"},"versionSourceDiscriminator":"vmm.v4.content.TemplateVersionReference","isActiveVersion":true,"isGcOverrideEnabled":true,"$objectType":"vmm.v4.content.TemplateVersionSpec"},"guestUpdateStatus":{"deployedVmReference":"string","$objectType":"vmm.v4.content.GuestUpdateStatus"},"createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"updatedBy":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"string","userType":"$UNKNOWN","idpId":"string","displayName":"string","firstName":"string","middleInitial":"string","lastName":"string","emailId":"string","locale":"string","region":"string","password":"string","isForceResetPasswordEnabled":true,"additionalAttributes":[{"name":"string","value":"string","$objectType":"common.v1.config.KVPair"}],"status":"$UNKNOWN","bucketsAccessKeys":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"accessKeyName":"string","secretAccessKey":"string","userId":"string","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedBy":"string","assignedTo":"string","creationType":"$UNKNOWN","expiryTime":"2015-07-20T15:49:04-07:00","status":"$UNKNOWN","createdBy":"string","lastUpdatedTime":"2015-07-20T15:49:04-07:00","$objectType":"iam.v4.authn.BucketsAccessKey"}],"lastLoginTime":"2015-07-20T15:49:04-07:00","createdTime":"2015-07-20T15:49:04-07:00","lastUpdatedTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","description":"string","creationType":"$UNKNOWN","$objectType":"vmm.v4.content.TemplateUser"},"$objectType":"vmm.v4.content.Template"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/c6aDECbD-5dD8-6BBA-5aF1-Fc6fdBAE94d6"
    delete:
      tags:
      - Templates
      summary: Delete a template and its associated versions
      description: Deletes the template and all of its versions for a given template
        identifier.
      operationId: deleteTemplateById
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: df8eacd0-f3c9-4b45-a53a-0d2b13158bf0
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c2009969-30d0-474b-b8f6-947b70d63c00
      responses:
        "202":
          description: The request to delete a template and its versions is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.DeleteTemplateApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        String extId = \"BFACfbA5-FCC7-C590-caC4-3bFF1Aa0e2D1\";\n\n\
          \        try {\n            DeleteTemplateApiResponse deleteTemplateApiResponse\
          \ = templatesApi.deleteTemplateById(extId);\n            System.out.println(deleteTemplateApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"eABA5c10-BC64-bfEd-5Da2-972Ff7BdeAC9\";\n\
          \n\n\n\n\n    templatesApi.deleteTemplateById(extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    ext_id\
          \ = \"bb93dF96-D63B-d4Ce-CffC-F8c5cdAE0B2a\"\n\n\n    try:\n        api_response\
          \ = templates_api.delete_template_by_id(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    extId := \"CF06a09e-b8a8-c527-A4d0-D7BDFA4ABdeF\"\n\n\n    response,\
          \ error := TemplatesApiInstance.DeleteTemplateById(&extId)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/E2cA9adF-51eC-3FDe-fC2C-F3CAe6Ec9BEc" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/E3cfbEFB-daE2-FF28-aD3E-F1cEcfFaf10d"
  /vmm/v4.0/content/templates/{extId}/$actions/deploy:
    post:
      tags:
      - Templates
      summary: Deploy VMs from a template
      description: |
        Deploys one or more VMs from a template.
        You can specify the number of VMs to deploy and their corresponding VM configuration overrides.
      operationId: deployTemplate
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f748d5c7-41f8-4663-8d8d-c35409c176ff
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4a4d32fd-8025-4ff0-a122-a032713ed0f8
      requestBody:
        description: Request to deploy VMs from a template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.TemplateDeployment'
        required: true
      responses:
        "202":
          description: The request to deploy a template is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/deploy\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/deploy\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/deploy\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Deploy VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.TemplateDeployment;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.DeployTemplateApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\n\npublic class JavaSdkSample\
          \ {\n    public static void main(String[] args) {\n        // Configure\
          \ the client\n        ApiClient apiClient = new ApiClient();\n        //\
          \ IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  TemplateDeployment templateDeployment = new TemplateDeployment();\n\n\
          \        // TemplateDeployment object initializations here...\n        templateDeployment.setClusterReference(\"\
          C7CeEaED-dabd-89EF-aFAD-ddffd2eeAe8E\");  // required field\n        templateDeployment.setNumberOfVms(1);\
          \  // required field\n        \n        String extId = \"2ACFAFfe-9bac-90Ed-aeb9-bc4f5FDFdB0A\"\
          ;\n\n        try {\n            DeployTemplateApiResponse deployTemplateApiResponse\
          \ = templatesApi.deployTemplate(extId, templateDeployment);\n          \
          \  System.out.println(deployTemplateApiResponse.toString());\n\n       \
          \ } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi, TemplateDeployment } from \"\
          @nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet templatesApi\
          \ = new TemplatesApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ templateDeployment = new TemplateDeployment();\n\n    // TemplateDeployment\
          \ object initializations here...\n    templateDeployment.setClusterReference(\"\
          C6dDf3c6-6Cb1-72E1-2B6D-DecfAc3b87C7\");  // required field\n    templateDeployment.setNumberOfVms(1);\
          \  // required field\n\n    \n    let extId = \"fdAeaFFb-c5Db-5Cd0-C2F4-20bfcF22eCED\"\
          ;\n\n\n\n\n\n    templatesApi.deployTemplate(extId, templateDeployment).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    templateDeployment\
          \ = ntnx_vmm_py_client.TemplateDeployment()\n\n    # TemplateDeployment\
          \ object initializations here...\n    templateDeployment.cluster_reference\
          \ = \"3c351f2d-6eFC-F0C8-c33f-dAEADe2BcfAE\"  # required field\n    templateDeployment.number_of_vms\
          \ = 1  # required field\n    \n    ext_id = \"FA3dD185-df0A-9ef3-6dCb-82c0FaaEAb1D\"\
          \n\n\n    try:\n        api_response = templates_api.deploy_template(extId=ext_id,\
          \ body=templateDeployment)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   templateDeployment := import1.NewTemplateDeployment()\n\n    // TemplateDeployment\
          \ object initializations here...\n\n    \n    extId := \"f75DfEb1-dEB0-FCB6-aBac-Df61ef62DCad\"\
          \n\n\n    response, error := TemplatesApiInstance.DeployTemplate(&extId,\
          \ templateDeployment)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/bfDc1fe7-35bd-eFAF-F0DB-5fecAEaf5Ee4/$actions/deploy" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"versionId":"string","numberOfVms":1,"overrideVmConfigMap":{"additionalProp1":{"name":"LinuxServer_VM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.VmConfigOverride"},"additionalProp2":{"name":"LinuxServer_VM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.VmConfigOverride"},"additionalProp3":{"name":"LinuxServer_VM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.VmConfigOverride"}},"clusterReference":"string","$objectType":"vmm.v4.content.TemplateDeployment"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"versionId":"string","numberOfVms":1,"overrideVmConfigMap":{"additionalProp1":{"name":"LinuxServer_VM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.VmConfigOverride"},"additionalProp2":{"name":"LinuxServer_VM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.VmConfigOverride"},"additionalProp3":{"name":"LinuxServer_VM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.content.VmConfigOverride"}},"clusterReference":"string","$objectType":"vmm.v4.content.TemplateDeployment"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/BdCAD168-dc2a-Fd39-5F5e-dacbDe1de5c0/$actions/deploy"
  /vmm/v4.0/content/templates/{templateExtId}/versions:
    get:
      tags:
      - Templates
      summary: List all versions in a template
      description: |
        Lists all the versions of a template with details such as name, description, VM configuration and so on.
        This operation supports filtering, sorting and pagination.
      operationId: listTemplateVersions
      parameters:
      - name: templateExtId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1578865a-a16d-46f0-912e-6e4945816981
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - versionName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - createTime
          - versionName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - createTime
          - createdBy
          - isActiveVersion
          - isGcOverrideEnabled
          - versionDescription
          - versionName
          - vmSpec
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of template versions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.content.TemplateVersionSpec'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Templates Versions
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.ListTemplateVersionsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        String templateExtId = \"bbb15Ec9-dDBc-6efB-1e88-4Fbc96b11AA9\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListTemplateVersionsApiResponse listTemplateVersionsApiResponse\
          \ = templatesApi.listTemplateVersions(templateExtId, page, limit, null,\
          \ null, null);\n            System.out.println(listTemplateVersionsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let templateExtId = \"B6Efa6ce-fDcD-9fa7-dd4d-bBadc9A9fF7A\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n    opts[\"$select\"\
          ] = \"string_sample_data\";\n\n\n\n\n    templatesApi.listTemplateVersions(templateExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    template_ext_id\
          \ = \"4DA9d38B-F80A-ebAF-e21b-bA31Ed00459c\"\n    \n    page = 0\n    \n\
          \    limit = 50\n\n\n    try:\n        api_response = templates_api.list_template_versions(templateExtId=template_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    templateExtId := \"dDCA26eD-CCDF-BB30-7Bcb-a8A1ddbbC70c\"\n  \
          \  \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error :=\
          \ TemplatesApiInstance.ListTemplateVersions(&templateExtId, &page_, &limit_,\
          \ nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().([]import1.TemplateVersionSpec)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/AfccAbef-Ecaf-efcB-29B7-ae4D9De1957B/versions?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/a6CDC4D1-31f9-422C-Fbf6-EA12fEDD760B/versions?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}:
    get:
      tags:
      - Templates
      summary: Get the template version detail
      description: Retrieves the template version details of the given template and
        version identifier.
      operationId: getTemplateVersionById
      parameters:
      - name: templateExtId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 974d0a46-fe58-4785-a493-bf4f58ecb11c
      - name: extId
        in: path
        description: The identifier of a version.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 454c49e5-aabf-45f1-a0b1-3cf46821571b
      responses:
        "200":
          description: Returns the requested template version details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.content.TemplateVersionSpec'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Templates Versions
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.GetTemplateVersionApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        String templateExtId = \"AA8afE6c-4BCb-106D-D1b9-976bc895A1AE\"\
          ;\n        \n        String extId = \"cAe8f4Fa-fd3d-Beab-D472-eC0E66D2EBDE\"\
          ;\n\n        try {\n            GetTemplateVersionApiResponse getTemplateVersionApiResponse\
          \ = templatesApi.getTemplateVersionById(templateExtId, extId);\n       \
          \     System.out.println(getTemplateVersionApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let templateExtId = \"7E03fAe9-7Eaa-Afe3-B5eA-3e503Daad06b\"\
          ;\n    \n    let extId = \"7Ed77Fc1-aAA2-bA65-fDcF-A643de4ddCD3\";\n\n\n\
          \n\n\n    templatesApi.getTemplateVersionById(templateExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    template_ext_id\
          \ = \"abd0aa1D-14dF-6Dcc-cA63-Cfa59bD72CdD\"\n    \n    ext_id = \"d10DF8dA-ED16-Fa4b-bB03-Ca9a8eEad3c8\"\
          \n\n\n    try:\n        api_response = templates_api.get_template_version_by_id(templateExtId=template_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    templateExtId := \"7bE654Db-Ee7f-151C-F520-7c8cf4eAe6A2\"\n  \
          \  \n    extId := \"1F9Cc76B-eAE1-Ba1B-0E8b-bE71eD3FEE80\"\n\n\n    response,\
          \ error := TemplatesApiInstance.GetTemplateVersionById(&templateExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TemplateVersionSpec)\n \
          \   fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/Ae9DfDf6-cBEf-cebb-dE22-1e0CcAd3F9bc/versions/B20D447D-1EeC-e6FF-b1e4-0cAAC9BBcdCD" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/fe6Bb8Ec-29Ca-702b-Bb6c-9fD5c9Fb5b25/versions/51B4f92B-bcaB-AA5a-Efff-c3CaD48fDeCf"
    delete:
      tags:
      - Templates
      summary: Delete a template version
      description: Deletes a version for the given template version identifier.
      operationId: deleteTemplateVersionById
      parameters:
      - name: templateExtId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 83c3f822-6fed-4d74-b776-f3483acb869b
      - name: extId
        in: path
        description: The identifier of a version.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 33ea64f0-827f-4303-878b-dd0fffd907af
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 1603dc48-7fb7-43d2-ae70-338bc52e223d
      responses:
        "202":
          description: The request to delete a template version is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete VM Templates Versions
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.DeleteTemplateVersionApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        String templateExtId = \"1Ff7afA3-AAAF-9FcE-8Aa4-0f4FBa49e92D\"\
          ;\n        \n        String extId = \"DFaDFD16-e7dd-FfbD-F7aa-fbAd5dbaaC61\"\
          ;\n\n        try {\n            DeleteTemplateVersionApiResponse deleteTemplateVersionApiResponse\
          \ = templatesApi.deleteTemplateVersionById(templateExtId, extId);\n    \
          \        System.out.println(deleteTemplateVersionApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let templateExtId = \"abE4fd6C-5b7e-2a6d-eE26-aebF3df9cFEF\"\
          ;\n    \n    let extId = \"a52Df3Da-ad0D-2bDa-dE9f-d18Af8e5a51b\";\n\n\n\
          \n\n\n    templatesApi.deleteTemplateVersionById(templateExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    template_ext_id\
          \ = \"65CfCbCb-1da5-0fBa-30c6-beECaFA7dD73\"\n    \n    ext_id = \"BDEAafEb-25bA-7AC0-d3A2-74dC7c3c0A7d\"\
          \n\n\n    try:\n        api_response = templates_api.delete_template_version_by_id(templateExtId=template_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    templateExtId := \"aAFdB1f0-B8d8-fc7E-9fC8-7EdD8DD1C739\"\n  \
          \  \n    extId := \"eAc90d3c-0DCE-B0e8-b2DC-BAb6F5A7FCE9\"\n\n\n    response,\
          \ error := TemplatesApiInstance.DeleteTemplateVersionById(&templateExtId,\
          \ &extId)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/EeB0b4dc-558D-DCEc-73ac-eeF287a68F6E/versions/fc9fefaF-e7Ef-6eae-0EfB-aaEBAcdFdA35" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/BdFbdEBD-cCc3-BC1e-bC0E-Cc02BC3fefc0/versions/DbFAdAA0-Df1D-efc5-DAac-dD083Cdabb3a"
  /vmm/v4.0/content/templates/{extId}/$actions/initiate-guest-update:
    post:
      tags:
      - Templates
      summary: Initiate guest OS updates
      description: |
        Initiates the process of updating the Guest OS from a given template version identifier.
        Only one guest OS update can be initiated for a template at a time.
        A temporary VM is created where the guest OS updates will be applied.
        The user must make the necessary modifications to this temporary VM.
        After completing the modifications, the user should issue the "Complete Guest OS Update" command to finalize the update.
        The "Cancel Guest OS Update" command can be issued at any time to abort an ongoing update.
      operationId: initiateGuestUpdate
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: eff1ac28-272f-4cbc-ae43-b8666b29ec07
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 3fca1a91-1deb-40d9-a656-d156319985be
      requestBody:
        description: Request to initiate guest update on a template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.InitiateGuestUpdateSpec'
      responses:
        "202":
          description: The request to initiate a guest OS update is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/initiate-guest-update\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/initiate-guest-update\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/initiate-guest-update\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Init Guest Update VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.InitiateGuestUpdateSpec;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.InitiateGuestUpdateApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  InitiateGuestUpdateSpec initiateGuestUpdateSpec = new InitiateGuestUpdateSpec();\n\
          \n        // InitiateGuestUpdateSpec object initializations here...\n  \
          \      \n        String extId = \"cCCD3E5E-a3F0-E1FB-BFC4-dBF88ffFCAeE\"\
          ;\n\n        try {\n            InitiateGuestUpdateApiResponse initiateGuestUpdateApiResponse\
          \ = templatesApi.initiateGuestUpdate(extId, initiateGuestUpdateSpec);\n\
          \            System.out.println(initiateGuestUpdateApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi, InitiateGuestUpdateSpec } from\
          \ \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet templatesApi\
          \ = new TemplatesApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ initiateGuestUpdateSpec = new InitiateGuestUpdateSpec();\n\n    // InitiateGuestUpdateSpec\
          \ object initializations here...\n\n    \n    let extId = \"872F4D49-a94D-491c-CE80-53AcF1F3C8b7\"\
          ;\n\n\n\n\n\n    templatesApi.initiateGuestUpdate(extId, initiateGuestUpdateSpec).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    initiateGuestUpdateSpec\
          \ = ntnx_vmm_py_client.InitiateGuestUpdateSpec()\n\n    # InitiateGuestUpdateSpec\
          \ object initializations here...\n    \n    ext_id = \"40b1efCb-AEC2-faeE-0Bc0-c689d9DFE12F\"\
          \n\n\n    try:\n        api_response = templates_api.initiate_guest_update(extId=ext_id,\
          \ body=initiateGuestUpdateSpec)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   initiateGuestUpdateSpec := import1.NewInitiateGuestUpdateSpec()\n\n\
          \    // InitiateGuestUpdateSpec object initializations here...\n\n    \n\
          \    extId := \"1bc1fce7-e9F4-0cDe-170F-8Ea8ABA5da3a\"\n\n\n    response,\
          \ error := TemplatesApiInstance.InitiateGuestUpdate(&extId, initiateGuestUpdateSpec)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/deb0a8ef-fbac-8edF-63A9-fC6CbBCed4EF/$actions/initiate-guest-update" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"versionId":"string","$objectType":"vmm.v4.content.InitiateGuestUpdateSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"versionId":"string","$objectType":"vmm.v4.content.InitiateGuestUpdateSpec"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/66a77c9F-3AF5-5A74-C38B-DBdFD98FCfdC/$actions/initiate-guest-update"
  /vmm/v4.0/content/templates/{extId}/$actions/complete-guest-update:
    post:
      tags:
      - Templates
      summary: Complete guest OS update
      description: |
        This operation finalizes the update initiated by the "Initiate guest OS update" API for the template.
        A new version is added to the template, the temporary VM created during the update process is deleted, and the pending update status is cleared.
      operationId: completeGuestUpdate
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 97bf1a74-7f56-4656-9a3b-832d1f895823
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: b37171ca-3827-4b10-ba65-6ce6ed8e4d6f
      requestBody:
        description: Request to complete the ongoing guest update on a template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.CompleteGuestUpdateSpec'
        required: true
      responses:
        "202":
          description: The request to complete the guest OS update is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/complete-guest-update\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/complete-guest-update\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/complete-guest-update\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Complete Guest Update VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.CompleteGuestUpdateSpec;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.CompleteGuestUpdateApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  CompleteGuestUpdateSpec completeGuestUpdateSpec = new CompleteGuestUpdateSpec();\n\
          \n        // CompleteGuestUpdateSpec object initializations here...\n  \
          \      completeGuestUpdateSpec.setVersionDescription(\"Updated version with\
          \ 8GB memory.\");  // required field\n        completeGuestUpdateSpec.setVersionName(\"\
          v2.1\");  // required field\n        \n        String extId = \"adCefdb2-EDcD-A74c-dc4e-eedbEE7BBB5E\"\
          ;\n\n        try {\n            CompleteGuestUpdateApiResponse completeGuestUpdateApiResponse\
          \ = templatesApi.completeGuestUpdate(extId, completeGuestUpdateSpec);\n\
          \            System.out.println(completeGuestUpdateApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi, CompleteGuestUpdateSpec } from\
          \ \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet templatesApi\
          \ = new TemplatesApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ completeGuestUpdateSpec = new CompleteGuestUpdateSpec();\n\n    // CompleteGuestUpdateSpec\
          \ object initializations here...\n    completeGuestUpdateSpec.setVersionDescription(\"\
          Updated version with 8GB memory.\");  // required field\n    completeGuestUpdateSpec.setVersionName(\"\
          v2.1\");  // required field\n\n    \n    let extId = \"CAFeEA91-8FBB-BFDD-94b5-FAf08F0EaD2A\"\
          ;\n\n\n\n\n\n    templatesApi.completeGuestUpdate(extId, completeGuestUpdateSpec).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    completeGuestUpdateSpec\
          \ = ntnx_vmm_py_client.CompleteGuestUpdateSpec()\n\n    # CompleteGuestUpdateSpec\
          \ object initializations here...\n    completeGuestUpdateSpec.version_description\
          \ = \"Updated version with 8GB memory.\"  # required field\n    completeGuestUpdateSpec.version_name\
          \ = \"v2.1\"  # required field\n    \n    ext_id = \"0A10B77c-E1b5-dF6C-DfEe-1D85f0b9D5b7\"\
          \n\n\n    try:\n        api_response = templates_api.complete_guest_update(extId=ext_id,\
          \ body=completeGuestUpdateSpec)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   completeGuestUpdateSpec := import1.NewCompleteGuestUpdateSpec()\n\n\
          \    // CompleteGuestUpdateSpec object initializations here...\n\n    \n\
          \    extId := \"ac29aced-464B-58ed-e5FD-e9F6ACebCcdB\"\n\n\n    response,\
          \ error := TemplatesApiInstance.CompleteGuestUpdate(&extId, completeGuestUpdateSpec)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/eB30Db40-7A0E-CfCb-C0DB-a6DaBDb7e2CF/$actions/complete-guest-update" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"versionName":"v2.1","versionDescription":"Updatedversionwith8GBmemory.","isActiveVersion":true,"$objectType":"vmm.v4.content.CompleteGuestUpdateSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"versionName":"v2.1","versionDescription":"Updatedversionwith8GBmemory.","isActiveVersion":true,"$objectType":"vmm.v4.content.CompleteGuestUpdateSpec"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/ca6D7d3E-d4F5-dAAE-2EAb-78Df7cCDd1cf/$actions/complete-guest-update"
  /vmm/v4.0/content/templates/{extId}/$actions/cancel-guest-update:
    post:
      tags:
      - Templates
      summary: Cancel guest OS update
      description: |
        This operation cancels the update initiated by the "Initiate guest OS update" API for the given template.
        The temporary VM created during the update process is deleted, and the pending update status is cleared.
        Please note that any modifications made to the temporary VM will be lost upon cancelling the update operation.
      operationId: cancelGuestUpdate
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6435e669-9551-4d1a-bd5a-6dd5ff8a6c35
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a2216a2e-5711-403e-ab7b-11f566979106
      responses:
        "202":
          description: The request to cancel the guest OS update is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/cancel-guest-update\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/cancel-guest-update\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/cancel-guest-update\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Cancel Guest Update VM Templates
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.CancelGuestUpdateApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  \n        String extId = \"1FABd6Aa-4Ba1-DbCa-f8b6-AA3AaFAd26ac\";\n\n\
          \        try {\n            CancelGuestUpdateApiResponse cancelGuestUpdateApiResponse\
          \ = templatesApi.cancelGuestUpdate(extId);\n            System.out.println(cancelGuestUpdateApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let templatesApi = new TemplatesApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"da0dc8Cd-4CEd-De81-58d5-ceF1c4d8e1DD\";\n\
          \n\n\n\n\n    templatesApi.cancelGuestUpdate(extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    \n    ext_id\
          \ = \"C002cDea-2ac1-ea9c-78dc-e76EB8dDfEF4\"\n\n\n    try:\n        api_response\
          \ = templates_api.cancel_guest_update(extId=ext_id)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   \n    extId := \"edBDebBF-EE92-d0bf-cdEA-D3cc20Ed50Fc\"\n\n\n    response,\
          \ error := TemplatesApiInstance.CancelGuestUpdate(&extId)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/C6Eb5cE8-1b6b-1EE7-d1A2-56aAe655D2Ff/$actions/cancel-guest-update" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/ecACC5d6-cD0B-FFF9-CFFB-084cDaf1dc61/$actions/cancel-guest-update"
  /vmm/v4.0/content/templates/{extId}/$actions/publish:
    post:
      tags:
      - Templates
      summary: Set an active version
      description: |
        Designate the template version identified by the given identifier as the active version.
        An active version is a default version for creating VMs from the template and starting the Guest OS Update.
      operationId: publishTemplate
      parameters:
      - name: extId
        in: path
        description: The identifier of a template.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 63a46a13-3ece-4bbc-9279-b264af6bfc00
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 48a33829-512f-4182-a3af-4ca3a2f92293
      requestBody:
        description: Request to publish version of a template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.content.TemplatePublishSpec'
        required: true
      responses:
        "202":
          description: The request to publish the version is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/publish\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/publish\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/publish\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Publish VM Templates Versions
        roleList:
        - Super Admin
        - Prism Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 20
        timeUnit: seconds
      - type: small
        count: 20
        timeUnit: seconds
      - type: large
        count: 20
        timeUnit: seconds
      - type: xlarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.TemplatesApi;\nimport com.nutanix.dp1.vmm.vmm.v4.content.TemplatePublishSpec;\n\
          import com.nutanix.dp1.vmm.vmm.v4.content.PublishTemplateApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    TemplatesApi templatesApi = new TemplatesApi(apiClient);\n\n      \
          \  TemplatePublishSpec templatePublishSpec = new TemplatePublishSpec();\n\
          \n        // TemplatePublishSpec object initializations here...\n      \
          \  templatePublishSpec.setVersionId(\"34d27668-cAda-5cfD-ee5a-6a1eBDAfFeEe\"\
          );  // required field\n        \n        String extId = \"B5d252ae-cA2E-00Ae-cC5B-a9EBCdcbd2bE\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            PublishTemplateApiResponse\
          \ publishTemplateApiResponse = templatesApi.publishTemplate(extId, templatePublishSpec,\
          \ opts);\n            System.out.println(publishTemplateApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, TemplatesApi, TemplatePublishSpec } from \"\
          @nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet templatesApi\
          \ = new TemplatesApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ templatePublishSpec = new TemplatePublishSpec();\n\n    // TemplatePublishSpec\
          \ object initializations here...\n    templatePublishSpec.setVersionId(\"\
          eBC9eef7-ED5b-c8Df-E51b-205Dba81FddB\");  // required field\n\n    \n  \
          \  let extId = \"CCC1765a-B75d-C2c0-feAF-FbFc2860dbEC\";\n\n\n    /*\n \
          \   Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    templatesApi.publishTemplate(extId,\
          \ templatePublishSpec, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    templates_api\
          \ = ntnx_vmm_py_client.TemplatesApi(api_client=client)\n    templatePublishSpec\
          \ = ntnx_vmm_py_client.TemplatePublishSpec()\n\n    # TemplatePublishSpec\
          \ object initializations here...\n    templatePublishSpec.version_id = \"\
          CEAC1b40-e8cA-c3DF-eFaA-CeffF0Db7B9b\"  # required field\n    \n    ext_id\
          \ = \"Dcd57378-A7Eb-Abed-EBCe-1bEA8F4A8EF0\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = templates_api.publish_template(extId=ext_id,\
          \ body=templatePublishSpec, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/content\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    TemplatesApiInstance\
          \ *api.TemplatesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    TemplatesApiInstance = api.NewTemplatesApi(ApiClientInstance)\n\n \
          \   templatePublishSpec := import1.NewTemplatePublishSpec()\n\n    // TemplatePublishSpec\
          \ object initializations here...\n\n    \n    extId := \"a3a1fce9-aCbd-aDa3-EdC6-DE094FCfea78\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := TemplatesApiInstance.PublishTemplate(&extId,\
          \ templatePublishSpec, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/cAac2B0D-ecbB-43Ab-2E27-7dF1E7CCde9a/$actions/publish" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"versionId":"string","$objectType":"vmm.v4.content.TemplatePublishSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"versionId":"string","$objectType":"vmm.v4.content.TemplatePublishSpec"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/content/templates/eBFaFEac-2EdE-4AE6-AFdB-FcacD3DE9eB7/$actions/publish"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/associate-categories:
    post:
      tags:
      - Vm
      summary: Associate categories to a VM
      description: Associate categories to a virtual machine.
      operationId: associateCategories
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 84f4837a-aa7b-4bdf-8a55-1ff30dfc0bc4
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 0f107603-2ccf-4fe7-b76c-46f15efbbc34
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.AssociateVmCategoriesParams'
        required: true
      responses:
        "202":
          description: The request to associate categories to a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/associate-categories\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/associate-categories\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/associate-categories\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Associate Virtual Machine Categories
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.AssociateVmCategoriesParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.AssociateCategoriesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        AssociateVmCategoriesParams\
          \ associateVmCategoriesParams = new AssociateVmCategoriesParams();\n\n \
          \       // AssociateVmCategoriesParams object initializations here...\n\
          \        \n        String extId = \"0091710a-2cFB-Ff07-be0F-ad2cC8cb6Ce1\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            AssociateCategoriesApiResponse\
          \ associateCategoriesApiResponse = vmApi.associateCategories(extId, associateVmCategoriesParams,\
          \ opts);\n            System.out.println(associateCategoriesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, AssociateVmCategoriesParams } from \"\
          @nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet vmApi = new\
          \ VmApi(apiClientInstance);\n\nfunction sample() {\n    let associateVmCategoriesParams\
          \ = new AssociateVmCategoriesParams();\n\n    // AssociateVmCategoriesParams\
          \ object initializations here...\n\n    \n    let extId = \"bBCbbfEf-DDaf-D49b-BdEd-Acc76baC88E9\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.associateCategories(extId, associateVmCategoriesParams,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    associateVmCategoriesParams\
          \ = ntnx_vmm_py_client.AssociateVmCategoriesParams()\n\n    # AssociateVmCategoriesParams\
          \ object initializations here...\n    \n    ext_id = \"F78Acd2c-BF3d-40d8-4887-F8CfCC5Fc8c2\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.associate_categories(extId=ext_id,\
          \ body=associateVmCategoriesParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    associateVmCategoriesParams\
          \ := import1.NewAssociateVmCategoriesParams()\n\n    // AssociateVmCategoriesParams\
          \ object initializations here...\n\n    \n    extId := \"872e92cF-70f7-aDFf-D21A-2afd8Bd81ABD\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.AssociateCategories(&extId,\
          \ associateVmCategoriesParams, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/eFEDdc8c-EC7E-5eC6-8fbE-C9bDcdcBBBc5/$actions/associate-categories" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"$objectType":"vmm.v4.ahv.config.AssociateVmCategoriesParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"$objectType":"vmm.v4.ahv.config.AssociateVmCategoriesParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/CF1ee9bb-D0eA-7ECF-CaEF-EDb8BafDdfAC/$actions/associate-categories"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/disassociate-categories:
    post:
      tags:
      - Vm
      summary: Disassociate categories from a VM
      description: Disassociate categories from a virtual machine.
      operationId: disassociateCategories
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 03c2b13d-5e16-4dcd-b154-b2e4992e3d7a
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: ccdfb1cd-032f-40dd-b9ef-df833bbca146
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.DisassociateVmCategoriesParams'
        required: true
      responses:
        "202":
          description: The request to disassociate categories from a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/disassociate-categories\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/disassociate-categories\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/disassociate-categories\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Disassociate Virtual Machine Categories
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.DisassociateVmCategoriesParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DisassociateCategoriesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        DisassociateVmCategoriesParams\
          \ disassociateVmCategoriesParams = new DisassociateVmCategoriesParams();\n\
          \n        // DisassociateVmCategoriesParams object initializations here...\n\
          \        \n        String extId = \"C4f485Eb-C65a-cef4-73b9-BEDE3cfeDCEE\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            DisassociateCategoriesApiResponse\
          \ disassociateCategoriesApiResponse = vmApi.disassociateCategories(extId,\
          \ disassociateVmCategoriesParams, opts);\n            System.out.println(disassociateCategoriesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, DisassociateVmCategoriesParams } from\
          \ \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet vmApi = new\
          \ VmApi(apiClientInstance);\n\nfunction sample() {\n    let disassociateVmCategoriesParams\
          \ = new DisassociateVmCategoriesParams();\n\n    // DisassociateVmCategoriesParams\
          \ object initializations here...\n\n    \n    let extId = \"4BBDA5a6-7AE1-eaBd-BbEE-A5cfBe4eCEaf\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.disassociateCategories(extId, disassociateVmCategoriesParams,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    disassociateVmCategoriesParams\
          \ = ntnx_vmm_py_client.DisassociateVmCategoriesParams()\n\n    # DisassociateVmCategoriesParams\
          \ object initializations here...\n    \n    ext_id = \"77dE2fba-869b-ABF7-9D3C-E64B5bBbc91B\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.disassociate_categories(extId=ext_id,\
          \ body=disassociateVmCategoriesParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    disassociateVmCategoriesParams\
          \ := import1.NewDisassociateVmCategoriesParams()\n\n    // DisassociateVmCategoriesParams\
          \ object initializations here...\n\n    \n    extId := \"520d7bCB-BFdA-ed2d-D3e5-ce9ae1aa0f3f\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.DisassociateCategories(&extId,\
          \ disassociateVmCategoriesParams, args)\n    if error != nil {\n       \
          \ fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/d0206dDe-Cef1-d29B-19AA-7f1c0B7eD13e/$actions/disassociate-categories" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"$objectType":"vmm.v4.ahv.config.DisassociateVmCategoriesParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"$objectType":"vmm.v4.ahv.config.DisassociateVmCategoriesParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/bBAaafe4-1fD5-aDEF-8CB0-dDd2Df8b1ED3/$actions/disassociate-categories"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}:
    get:
      tags:
      - Vm
      summary: Get configuration details for the provided CD-ROM
      description: Retrieves configuration details for the provided CD-ROM device
        attached to a virtual machine.
      operationId: getCdRomById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: bdd0b7c8-73b7-4ca2-8c22-13d6ae450872
      - name: extId
        in: path
        description: A globally unique identifier of a CD-ROM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cc64151e-cb93-47a3-bf6d-e72c3873af29
      responses:
        "200":
          description: Returns the configuration details for the provided CD-ROM device
            attached to a virtual machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRom'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine CD ROM
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetCdRomApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"EFceEAa1-fFb8-CF9b-Cfc3-8B85EdB3bdE1\";\n        \n        String\
          \ extId = \"BeCa1fAE-feF8-AFb7-CaBe-f151Ba5b3D6D\";\n\n        try {\n \
          \           GetCdRomApiResponse getCdRomApiResponse = vmApi.getCdRomById(vmExtId,\
          \ extId);\n            System.out.println(getCdRomApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"4afCd3B3-D925-832c-Daeb-FEE0C9eCBbD8\";\n    \n\
          \    let extId = \"8e2C1D34-EED1-406A-EA48-ABcEE7bDBBA3\";\n\n\n\n\n\n \
          \   vmApi.getCdRomById(vmExtId, extId).then(({data, response}) => {\n  \
          \      console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          f1cFF2EF-f0Da-7EBf-EB9E-6F55ab7Cf7AF\"\n    \n    ext_id = \"7BBE1aCD-EaF3-05cF-3B92-46DEb6A28EB3\"\
          \n\n\n    try:\n        api_response = vm_api.get_cd_rom_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"EcebfE74-a38d-Faff-bFec-faDcEeCBfacA\"\n    \n    extId := \"Fd9B1546-3ACa-b685-F9ca-aDd076bB31b4\"\
          \n\n\n    response, error := VmApiInstance.GetCdRomById(&vmExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.CdRom)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/5faBad79-6808-dfEc-fA4F-dBf6ffb4b1Cf/cd-roms/Ca1bebbA-e6cf-e84B-AdC0-b6e0AABa8daA" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/A3cc87bD-4dFA-537F-DAB5-a1EEDeDAbdBC/cd-roms/4cbE1BBC-B79A-6AEf-46BC-04DFA9bfe1A8"
    delete:
      tags:
      - Vm
      summary: Remove a CD-ROM device from a VM
      description: Removes the specified CD-ROM device from a virtual machine.
      operationId: deleteCdRomById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 8e76b0ef-ec7d-471a-8937-700462c2b7a2
      - name: extId
        in: path
        description: A globally unique identifier of a CD-ROM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 0f759cef-0044-44e7-80a6-e815dac54ea4
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: b291c149-e5d2-4afb-863b-5dd1e63b2002
      responses:
        "202":
          description: The request to delete the specified CD-ROM device from a VM
            is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Virtual Machine CD ROM
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetCdRomApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeleteCdRomApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"32a63CEc-46bF-4FCA-CAe1-7de8f7E57F8C\";\n        \n        String\
          \ extId = \"C9CFdc3E-cFaC-c9f5-7Baf-31F883Ab024a\";\n\n        // perform\
          \ GET call\n        GetCdRomApiResponse getResponse = null;\n        try\
          \ {\n            getResponse = vmApi.getCdRomById(vmExtId, extId);\n   \
          \     } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteCdRomApiResponse deleteCdRomApiResponse\
          \ = vmApi.deleteCdRomById(vmExtId, extId, opts);\n            System.out.println(deleteCdRomApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetCdRomApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"BDCDaFBf-CebB-EAFf-FCeD-Fcb52e688EEc\";\n    \n\
          \    let extId = \"96A985FD-EfCC-caCD-d3cf-aFdC09b6D336\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getCdRomById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deleteCdRomById(vmExtId, extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          Ced260ad-73ff-AB9F-d3b8-4B0F8fc2FF9C\"\n    \n    ext_id = \"DFDb039b-aFFF-16df-AdEa-84B0a0bb5DBb\"\
          \n\n    try:\n        api_response = vm_api.get_cd_rom_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_cd_rom_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"bC1fA9Df-5DC2-eeAB-dE8E-adFCdD2D10DF\"\n    \n    extId := \"2Ba9e809-BA38-F56C-5Fb9-98feC6dabdAd\"\
          \n\n    getResponse, err := VmApiInstance.GetCdRomById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.DeleteCdRomById(&vmExtId, &extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/aB9a6E30-9Bcf-Caac-57F3-DECc16FfEF35/cd-roms/3c8AcAfB-bC6B-EE12-c5AE-AEfab9c005E2" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/eB32CF5E-cDeB-afaC-7B03-742EC51f59DA/cd-roms/51AE2b9E-29Bc-dDdc-ACcc-CaFdBd8c1dF6"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/insert:
    post:
      tags:
      - Vm
      summary: Inserts an ISO in the provided CD-ROM device
      description: Inserts the defined ISO into a CD-ROM device attached to a Virtual
        Machine.
      operationId: insertCdRomById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: bb3a118b-fcbc-4e4b-817c-e51fd1caec35
      - name: extId
        in: path
        description: A globally unique identifier of a CD-ROM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a38b1904-4a70-4f7f-b01d-dccb21c9dfc2
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 251e9cb8-e871-4006-bd84-782fb03186bb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRomInsertParams'
        required: true
      responses:
        "202":
          description: The request to insert the defined ISO into a CD-ROM device
            attached to a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/insert\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/insert\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/insert\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Insert Virtual Machine CD ROM
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.CdRomInsertParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.InsertCdRomApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        CdRomInsertParams cdRomInsertParams\
          \ = new CdRomInsertParams();\n\n        // CdRomInsertParams object initializations\
          \ here...\n        \n        String vmExtId = \"e5f44AA7-eAF6-Cf51-AbFB-dDF9fefaAD7A\"\
          ;\n        \n        String extId = \"D3aB7BF4-5Efd-7677-8cb9-2D7b9bdEFcDf\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            InsertCdRomApiResponse\
          \ insertCdRomApiResponse = vmApi.insertCdRomById(vmExtId, extId, cdRomInsertParams,\
          \ opts);\n            System.out.println(insertCdRomApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, CdRomInsertParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ cdRomInsertParams = new CdRomInsertParams();\n\n    // CdRomInsertParams\
          \ object initializations here...\n\n    \n    let vmExtId = \"37dfaF76-ab24-Fb5c-FEFe-AB7BDeAb2AeF\"\
          ;\n    \n    let extId = \"AB6e9bAB-898E-EFc9-DbDa-DC3Fdeb57E1A\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.insertCdRomById(vmExtId, extId, cdRomInsertParams, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    cdRomInsertParams =\
          \ ntnx_vmm_py_client.CdRomInsertParams()\n\n    # CdRomInsertParams object\
          \ initializations here...\n    \n    vm_ext_id = \"3b396FA2-E33e-ED08-Dd1b-ebe891fCAaFF\"\
          \n    \n    ext_id = \"4315e26a-d4ec-CFdB-0bb9-53b0cdc32CdB\"\n\n    \"\"\
          \"\n    Some Create, Update, and Delete operations generally require an\
          \ If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.insert_cd_rom_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, body=cdRomInsertParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    cdRomInsertParams\
          \ := import1.NewCdRomInsertParams()\n\n    // CdRomInsertParams object initializations\
          \ here...\n\n    \n    vmExtId := \"ecD7Ae4B-24Be-AfCB-4F78-4b7FfB3C00eC\"\
          \n    \n    extId := \"a2B77a43-9A1b-Ca35-8BE8-FF2B01FDAaFb\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.InsertCdRomById(&vmExtId, &extId, cdRomInsertParams,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/89C794fe-C6c5-5b66-B2B6-fC6DBf5c7aCA/cd-roms/90b85cBd-f8b0-2D7D-7A3E-8BAcCff1f4c0/$actions/insert" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.CdRomInsertParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.CdRomInsertParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/0bf42c77-a140-1FA8-40bE-3F91C48bbC0a/cd-roms/7Acc6EbC-E3dA-e8fC-0CCe-1ADe4a1dB773/$actions/insert"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/eject:
    post:
      tags:
      - Vm
      summary: Ejects an ISO from the provided CD-ROM device
      description: Ejects the ISO currently inserted into a CD-ROM device on a Virtual
        Machine.
      operationId: ejectCdRomById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e83f0127-01a7-4d64-b431-6268800fcf2f
      - name: extId
        in: path
        description: A globally unique identifier of a CD-ROM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 095443e8-ce12-4883-b529-c09e4de0ec56
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 9c4c594a-7a52-4812-8039-80d554f691d2
      responses:
        "202":
          description: The request to eject an ISO from the provided CD-ROM device
            is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/eject\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/eject\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/eject\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Eject Virtual Machine CD ROM
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.EjectCdRomApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"bA2b9fFb-80ED-c0D7-DbC0-EcBF0EADcfDE\";\n        \n        String\
          \ extId = \"EA158e1B-deaA-dc1C-fb7b-feA4B1F2acDa\";\n\n        /*\n    \
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n        The value that needs to be sent in the If-Match header\
          \ needs to be retrieved by performing a Read(Get) operation on the same\
          \ resource.\n        ETags can be retrieved by calling a static method of\
          \ ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            EjectCdRomApiResponse ejectCdRomApiResponse\
          \ = vmApi.ejectCdRomById(vmExtId, extId, opts);\n            System.out.println(ejectCdRomApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"Beddcbfd-5bEB-CbEd-dC7F-B2ceECaD04Ce\";\n    \n\
          \    let extId = \"6bADA1A1-adaC-cDCa-95Df-a348AeCDCBAc\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.ejectCdRomById(vmExtId,\
          \ extId, {\"If-Match\" : etagValue}).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          bC64794c-A6fd-ecda-2AEA-a3De5BcD62b1\"\n    \n    ext_id = \"6dF3EECe-B71d-6f0C-FD76-ADf7D2Db0BBe\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.eject_cd_rom_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"d5b51eD4-E45F-DD17-eE18-1BfdCFef97Df\"\n    \n    extId := \"45C1fd8E-1f77-dECa-c5c8-b8fAE7Bfc3F5\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.EjectCdRomById(&vmExtId,\
          \ &extId, args)\n    if error != nil {\n        fmt.Println(error)\n   \
          \     return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/b1f5fEEa-D9CE-39F5-eE4a-D8ee9cDdedEF/cd-roms/ba3b2eB6-Cb29-eaEa-FBEb-Cab4b8cFcfcA/$actions/eject" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/AeC0f4Bd-0CdB-BBf7-8da6-D72Cb5fcCEA2/cd-roms/6CF8B9E0-ff21-0B6A-fFC6-C6accAC4B65D/$actions/eject"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms:
    get:
      tags:
      - Vm
      summary: List CD-ROMs attached to a VM
      description: Lists the CD-ROM devices attached to a virtual machine.
      operationId: listCdRomsByVmId
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ee7344b6-5e44-4473-8821-79a95f6c224b
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Returns the configuration details for the CD-ROM devices attached
            to a virtual machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRom'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine CD ROM
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListCdRomsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"68E92fEF-cAaC-ABcb-9a93-a7FBbDcbF30b\";\n        \n        int page\
          \ = 0;\n        \n        int limit = 50;\n\n        try {\n           \
          \ ListCdRomsApiResponse listCdRomsApiResponse = vmApi.listCdRomsByVmId(vmExtId,\
          \ page, limit);\n            System.out.println(listCdRomsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"1e6f3bA5-33da-0AdE-C2Fb-11eeafEEfE6B\";\n\n    //\
          \ Construct Optional Parameters\n    var opts = {};\n    opts[\"$page\"\
          ] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    vmApi.listCdRomsByVmId(vmExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          f20FDdaa-b66D-FACc-Bc65-4aCcc2D3CaBe\"\n    \n    page = 0\n    \n    limit\
          \ = 50\n\n\n    try:\n        api_response = vm_api.list_cd_roms_by_vm_id(vmExtId=vm_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"F9FcDdea-Cfa2-FdaB-ED48-B8b5EEcb6A9A\"\n    \n    page_ := 0\n  \
          \  \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListCdRomsByVmId(&vmExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.CdRom)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/eA6cB3f3-E9fc-4579-fbcC-baA2dA7BFbed/cd-roms?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/eADF0Ed3-4e0A-B36c-E0BA-F43B5cEbB162/cd-roms?$limit=50&$page=0"
    post:
      tags:
      - Vm
      summary: Create a CD-ROM device for a VM
      description: Creates and attaches a CD-ROM device to a virtual machine.
      operationId: createCdRom
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 120bd54c-95d6-4eb2-aef3-6052428dcf6f
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 8e280934-320f-41a8-a420-4d180ef56514
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRom'
        required: true
      responses:
        "202":
          description: The request to create a CD-ROM device for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Virtual Machine CD ROM
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.CdRom;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreateCdRomApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        CdRom cdRom = CdRom.UNKNOWN;\n\
          \n        // CdRom object initializations here...\n        \n        String\
          \ vmExtId = \"f8a701B1-Aeca-AED7-F420-Df76bD1aE2bE\";\n\n        /*\n  \
          \      Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n        The value that needs to be sent in the If-Match header\
          \ needs to be retrieved by performing a Read(Get) operation on the same\
          \ resource.\n        ETags can be retrieved by calling a static method of\
          \ ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CreateCdRomApiResponse\
          \ createCdRomApiResponse = vmApi.createCdRom(vmExtId, cdRom, opts);\n  \
          \          System.out.println(createCdRomApiResponse.toString());\n\n  \
          \      } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, CdRom } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ cdRom = CdRom.UNKNOWN;\n\n    // CdRom object initializations here...\n\
          \n    \n    let vmExtId = \"DF87Ab9C-1Feb-6eAF-C1d4-Bff858FEdF6F\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.createCdRom(vmExtId, cdRom, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    cdRom = ntnx_vmm_py_client.CdRom._UNKNOWN\n\
          \n    # CdRom object initializations here...\n    \n    vm_ext_id = \"C0bFbAbC-4E90-0E6c-5d6F-ace9CcAEeABE\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.create_cd_rom(vmExtId=vm_ext_id,\
          \ body=cdRom, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    cdRom := import1.NewCdRom()\n\
          \n    // CdRom object initializations here...\n\n    \n    vmExtId := \"\
          9aFb5cdE-820f-BC02-b13C-E3DFCBb940DD\"\n\n    /*\n    Some Create, Update,\
          \ and Delete operations generally require an If-Match header with a value\
          \ to be passed in order to protect against concurrent updates.\n    The\
          \ value that needs to be sent in the If-Match header needs to be retrieved\
          \ by performing a Read(Get) operation on the same resource.\n    ETags can\
          \ be retrieved by calling a static method of ApiClient as below:\n    etagValue\
          \ := ApiClientInstance.GetEtag(getResponse)\n    */\n\n    response, error\
          \ := VmApiInstance.CreateCdRom(&vmExtId, cdRom, args)\n    if error != nil\
          \ {\n        fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/b04EE6DE-CEDd-fB6c-cA73-b0C0A78c1CDa/cd-roms" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/C6dafB7e-D67F-0Ca4-BAf0-Eb0FdA7A1Ec8/cd-roms"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/clone:
    post:
      tags:
      - Vm
      summary: Clone a VM
      description: Clones an existing virtual machine. This operation also includes
        updating the existing configuration during the clone operation.
      operationId: cloneVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: de794c6b-81dc-4aa2-a790-f389353c45e8
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2925a855-0bcc-45f9-83fe-851e85ded5d7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CloneOverrideParams'
      responses:
        "202":
          description: The request to clone a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/clone\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/clone\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/clone\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Clone Existing Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.CloneOverrideParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CloneVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        CloneOverrideParams\
          \ cloneOverrideParams = new CloneOverrideParams();\n\n        // CloneOverrideParams\
          \ object initializations here...\n        \n        String extId = \"4BbCC9e9-EAb9-BBFB-5deb-4FC2C35F4Bc8\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CloneVmApiResponse cloneVmApiResponse\
          \ = vmApi.cloneVm(extId, cloneOverrideParams, opts);\n            System.out.println(cloneVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, CloneOverrideParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ cloneOverrideParams = new CloneOverrideParams();\n\n    // CloneOverrideParams\
          \ object initializations here...\n\n    \n    let extId = \"6031dceE-Cf14-ce1B-BABe-f7F857be1Eee\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.cloneVm(extId, cloneOverrideParams, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    cloneOverrideParams\
          \ = ntnx_vmm_py_client.CloneOverrideParams()\n\n    # CloneOverrideParams\
          \ object initializations here...\n    \n    ext_id = \"4Bb6dE0a-2Cc2-F6E5-aDed-7EBed38e5EE4\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.clone_vm(extId=ext_id,\
          \ body=cloneOverrideParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    cloneOverrideParams\
          \ := import1.NewCloneOverrideParams()\n\n    // CloneOverrideParams object\
          \ initializations here...\n\n    \n    extId := \"5cFe3E5B-968E-CEBa-b6d5-40eAa5Eb0cCC\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.CloneVm(&extId, cloneOverrideParams,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/bdBbFEaD-Ea8E-F3e7-FFE8-Fd89D019fBAb/$actions/clone" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"name":"TestVM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.ahv.config.CloneOverrideParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"name":"TestVM","numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"memorySizeBytes":0,"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"$objectType":"vmm.v4.ahv.config.CloneOverrideParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/3eDd973d-ccAC-AdDD-F5DD-e660fecDBFF4/$actions/clone"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}:
    get:
      tags:
      - Vm
      summary: Get configuration details for the provided disk device
      description: Retrieves configuration details for the provided disk device attached
        to a virtual machine.
      operationId: getDiskById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 79daf12a-c20d-4c75-8d9a-faa6b997287c
      - name: extId
        in: path
        description: A globally unique identifier of a VM disk of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 54fed46d-1480-44ef-ab08-32a1efa740df
      responses:
        "200":
          description: Returns the configuration details for the provided disk device
            attached to a virtual machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Disk
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"FF65eF0d-0cAe-C38a-aAcC-d3BBAFfa95cd\";\n        \n        String\
          \ extId = \"Bae2Ed1B-B0aa-BAFa-8Ceb-e9ab8de3f4ef\";\n\n        try {\n \
          \           GetDiskApiResponse getDiskApiResponse = vmApi.getDiskById(vmExtId,\
          \ extId);\n            System.out.println(getDiskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"bDAceDA8-a3eA-ee2a-57fb-CccfeeeeFB93\";\n    \n\
          \    let extId = \"F49cD097-d34A-FFC3-ed3C-7EC3bF4FddEB\";\n\n\n\n\n\n \
          \   vmApi.getDiskById(vmExtId, extId).then(({data, response}) => {\n   \
          \     console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          DC2eDaBA-fce3-4645-d9FD-bd53CDfC33F4\"\n    \n    ext_id = \"CefB6ACB-9cdC-CAcD-23d8-9D38bAbccC3f\"\
          \n\n\n    try:\n        api_response = vm_api.get_disk_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"F40d14ad-d138-7CAe-cC2a-Eca6a3aFdCa5\"\n    \n    extId := \"e6cE5eFd-8c5D-d3cD-Aa53-9E52cd0CbAF2\"\
          \n\n\n    response, error := VmApiInstance.GetDiskById(&vmExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.Disk)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/8DFb9aFA-6FDD-Fdab-AED4-c74AD6Cc05Fb/disks/19EDE52a-fcAf-bdAC-FD24-cD20CC6BBF30" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/607febBE-95db-cdBa-B17B-DF75bdfdC5dA/disks/Ff6CAbaa-aaA6-FAEd-Ed72-FFadDe359E6a"
    put:
      tags:
      - Vm
      summary: Update the configuration for the provided disk device
      description: Updates the configuration details for the provided disk device.
      operationId: updateDiskById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 73e56e2d-7dfa-4d5b-b93c-19d4e0e8a7d7
      - name: extId
        in: path
        description: A globally unique identifier of a VM disk of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4ab2c29e-93fd-4d98-a964-93aaf7ef6dc1
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 288ed847-123a-4917-a4ff-80d217ae5995
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
        required: true
      responses:
        "202":
          description: The request to update the configuration for the provided disk
            device is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Virtual Machine Disk
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.Disk;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetDiskApiResponse;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.config.UpdateDiskApiResponse;\nimport org.springframework.web.client.RestClientException;\n\
          import java.util.HashMap;\nimport org.apache.http.HttpHeaders;\n\npublic\
          \ class JavaSdkSample {\n    public static void main(String[] args) {\n\
          \        // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        Disk disk = new Disk();\n\
          \n        // Disk object initializations here...\n        \n        String\
          \ vmExtId = \"EDF867a2-BeFe-dDB2-bbba-36B3De0dcB85\";\n        \n      \
          \  String extId = \"3aFED1Bf-4fbE-1d3E-7eef-EEF757597E0a\";\n\n        //\
          \ perform GET call\n        GetDiskApiResponse getResponse = null;\n   \
          \     try {\n            getResponse = vmApi.getDiskById(vmExtId, extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateDiskApiResponse updateDiskApiResponse\
          \ = vmApi.updateDiskById(vmExtId, extId, disk, opts);\n            System.out.println(updateDiskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, Disk, GetDiskApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ disk = new Disk();\n\n    // Disk object initializations here...\n\n \
          \   \n    let vmExtId = \"bbe5FCcA-9d6A-f46F-BF4F-d6BFB0cFfdf6\";\n    \n\
          \    let extId = \"a1EFaCF6-8aFD-efd6-6e1b-7eeEE57dFECe\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getDiskById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.updateDiskById(vmExtId, extId, disk, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    disk = ntnx_vmm_py_client.Disk()\n\
          \n    # Disk object initializations here...\n    \n    vm_ext_id = \"2C6bc8a7-BFc3-d8dB-BFa3-FDEb81Dc1BDb\"\
          \n    \n    ext_id = \"31eCcAAc-B1C6-E05a-CC76-0Ef0EacEDFb1\"\n\n    try:\n\
          \        api_response = vm_api.get_disk_by_id(vmExtId=vm_ext_id, extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.update_disk_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, body=disk, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    disk := import1.NewDisk()\n\
          \n    // Disk object initializations here...\n\n    \n    vmExtId := \"\
          7AFB9B9a-BFBA-AEfe-ba9c-46cEf1bfBFe1\"\n    \n    extId := \"bEbCdcD2-6fF6-EB5a-b71C-F8F8a48a389b\"\
          \n\n    getResponse, err := VmApiInstance.GetDiskById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.UpdateDiskById(&vmExtId, &extId,\
          \ disk, args)\n    if error != nil {\n        fmt.Println(error)\n     \
          \   return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/Bd1E0c8F-Eaa1-00EE-A7BB-d3BfF4d0cef8/disks/DDDfd9Ef-AfA6-E77A-c9FE-eb8ABFfe0aAB" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/Fab4d8dA-8Adb-D9D9-eDbD-CB7d8c40b8Fd/disks/9A80Dadb-7fEb-b8DC-13ED-623c28E9A59A"
    delete:
      tags:
      - Vm
      summary: Removes the specified disk device from a virtual machine.
      description: Removes the specified disk device from a virtual machine.
      operationId: deleteDiskById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 992b81e9-bbbe-4da9-85d7-a079fc6bbf32
      - name: extId
        in: path
        description: A globally unique identifier of a VM disk of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e9df36e0-023e-4300-a092-72244602d2f0
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 7803574a-719c-40e5-904a-2dc31157b988
      responses:
        "202":
          description: The request to remove specified disk device from a virtual
            machine is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Virtual Machine Disk
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - CSI System
        - Developer
        - Kubernetes Data Services System
        - Kubernetes Infrastructure Provision
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetDiskApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeleteDiskApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"eeEFDD7f-eAA9-Af5C-Be58-F1CF51fDeB7c\";\n        \n        String\
          \ extId = \"aD5e37a0-Fc4f-abA5-A9c4-9EAfbE2Fcb88\";\n\n        // perform\
          \ GET call\n        GetDiskApiResponse getResponse = null;\n        try\
          \ {\n            getResponse = vmApi.getDiskById(vmExtId, extId);\n    \
          \    } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteDiskApiResponse deleteDiskApiResponse\
          \ = vmApi.deleteDiskById(vmExtId, extId, opts);\n            System.out.println(deleteDiskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetDiskApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"5bAba2dD-EB0b-FaeE-fDBF-bEFD5eAe1F0B\";\n    \n\
          \    let extId = \"dDaDACBC-cE35-ABe8-E0AF-FfA12eaf1e0A\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getDiskById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deleteDiskById(vmExtId, extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          2bc00f3A-daAD-4eA5-ec71-be1DFfb6cbbb\"\n    \n    ext_id = \"F3cC6f93-af5c-1DFb-DFC5-DcA43abaDcbf\"\
          \n\n    try:\n        api_response = vm_api.get_disk_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_disk_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"FAFb8cF6-Eb6E-bdFE-dbAe-7fd5Fa0Be241\"\n    \n    extId := \"9cD9A7Db-b85F-bDE7-27ab-09dCf498FeeC\"\
          \n\n    getResponse, err := VmApiInstance.GetDiskById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.DeleteDiskById(&vmExtId, &extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/4CE1aC4b-e7Bc-FDFe-a17F-16D1baEF419A/disks/DE971C0b-Aef4-F8Ac-ea84-e6E1aBBDEddE" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/FbAa6cb4-BdDD-40eD-DBbA-814A4048cdfe/disks/1870AdbF-cC8f-6bBB-8Aba-bdFdaeFEebE9"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/disks:
    get:
      tags:
      - Vm
      summary: List disks attached to a VM
      description: Lists the disk devices attached to a virtual machine.
      operationId: listDisksByVmId
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 14471270-10f9-4e61-a99f-2f27d605776a
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Returns the configuration details for the disk devices attached
            to a virtual machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Disk
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListDisksApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"be5ceEed-E2aA-35bf-beeE-A6FcDbe2CCdE\";\n        \n        int page\
          \ = 0;\n        \n        int limit = 50;\n\n        try {\n           \
          \ ListDisksApiResponse listDisksApiResponse = vmApi.listDisksByVmId(vmExtId,\
          \ page, limit);\n            System.out.println(listDisksApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"Ff7cbb6D-bA0C-68D4-983F-Cfb2BdB4Fab0\";\n\n    //\
          \ Construct Optional Parameters\n    var opts = {};\n    opts[\"$page\"\
          ] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    vmApi.listDisksByVmId(vmExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          6E51DCcd-3E84-De5d-c3ec-bc6AadD81ADb\"\n    \n    page = 0\n    \n    limit\
          \ = 50\n\n\n    try:\n        api_response = vm_api.list_disks_by_vm_id(vmExtId=vm_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"cA9324a0-A9De-dcD7-f06d-C83e0F8DdBeF\"\n    \n    page_ := 0\n  \
          \  \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListDisksByVmId(&vmExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Disk)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/CA11cAfD-Ccf4-B547-CAf7-b3da1432c76d/disks?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/7Ff1AdEa-ab68-A9dF-Bbf3-dAc47f4aaEA7/disks?$limit=50&$page=0"
    post:
      tags:
      - Vm
      summary: Create a disk device for a VM
      description: Creates and attaches a disk device to a virtual machine.
      operationId: createDisk
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 424bc99b-2c7a-4640-99ee-17b6cdb3b0d3
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 3e6784e8-92f8-4c82-b192-0045c8dc9bf0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
        required: true
      responses:
        "202":
          description: The request to create a disk device for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Virtual Machine Disk
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - CSI System
        - Developer
        - Kubernetes Data Services System
        - Kubernetes Infrastructure Provision
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Storage Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.Disk;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreateDiskApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        Disk disk = new Disk();\n\
          \n        // Disk object initializations here...\n        \n        String\
          \ vmExtId = \"6bFdE3FF-cbDA-0235-F42B-7e08aAfabDFf\";\n\n        /*\n  \
          \      Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n        The value that needs to be sent in the If-Match header\
          \ needs to be retrieved by performing a Read(Get) operation on the same\
          \ resource.\n        ETags can be retrieved by calling a static method of\
          \ ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CreateDiskApiResponse createDiskApiResponse\
          \ = vmApi.createDisk(vmExtId, disk, opts);\n            System.out.println(createDiskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, Disk } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ disk = new Disk();\n\n    // Disk object initializations here...\n\n \
          \   \n    let vmExtId = \"3dbeCFaf-4Ec3-eAe0-80c4-49c0fbeaDA9F\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.createDisk(vmExtId, disk, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    disk = ntnx_vmm_py_client.Disk()\n\
          \n    # Disk object initializations here...\n    \n    vm_ext_id = \"56eAFdfC-a3Bb-CA38-eec8-BBEFab2b36e8\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.create_disk(vmExtId=vm_ext_id,\
          \ body=disk, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    disk := import1.NewDisk()\n\
          \n    // Disk object initializations here...\n\n    \n    vmExtId := \"\
          02bDeBaC-Fb2c-36c5-A048-3Bf8611afFC0\"\n\n    /*\n    Some Create, Update,\
          \ and Delete operations generally require an If-Match header with a value\
          \ to be passed in order to protect against concurrent updates.\n    The\
          \ value that needs to be sent in the If-Match header needs to be retrieved\
          \ by performing a Read(Get) operation on the same resource.\n    ETags can\
          \ be retrieved by calling a static method of ApiClient as below:\n    etagValue\
          \ := ApiClientInstance.GetEtag(getResponse)\n    */\n\n    response, error\
          \ := VmApiInstance.CreateDisk(&vmExtId, disk, args)\n    if error != nil\
          \ {\n        fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/a8E98E02-A2AA-2fdA-EDAa-BcdaCdDe4Cff/disks" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/E3D82FE0-bdef-8D7A-beCA-dE1c1A7fDafE/disks"
  /vmm/v4.0/ahv/config/vms/{extId}:
    get:
      tags:
      - Vm
      summary: Get VM configuration details
      description: Retrieves configuration details for a virtual machine.
      operationId: getVmById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 12543b00-db8a-4aae-ae9e-f05f16a7d948
      responses:
        "200":
          description: Returns the configuration details for a virtual machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Existing Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
        - Disaster Recovery Admin
        - Disaster Recovery Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"1e59CCDD-abdC-Afc7-cA6f-EADc0Dc4Bedc\";\n\n        try {\n       \
          \     GetVmApiResponse getVmApiResponse = vmApi.getVmById(extId);\n    \
          \        System.out.println(getVmApiResponse.toString());\n\n        } catch\
          \ (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"BDF3D93a-ecEA-4c7a-bA9e-AABF1Ea34fca\";\n\n\n\n\n\n\
          \    vmApi.getVmById(extId).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"aBdc47Ea-Ab14-33f4-12D6-914dDCEc7b2E\"\
          \n\n\n    try:\n        api_response = vm_api.get_vm_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"F8D96adE-5EEC-f8bf-Cbe2-83AB7CE30CfF\"\n\n\n    response, error :=\
          \ VmApiInstance.GetVmById(&extId)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.Vm)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/E49cc6bE-2EE8-B7BE-AC4a-CBEBC35dBff9" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/1cEe6Dff-f98D-47Aa-454F-4E02B6Bd1DfB"
    put:
      tags:
      - Vm
      summary: Update configuration for a VM
      description: Updates configuration details for a virtual machine.
      operationId: updateVmById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 0704ed75-83d7-4081-afdc-fab222922c30
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 3c561b2a-a5c4-4295-8df9-f47a366e99e4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
        required: true
      responses:
        "202":
          description: The request to update configuration for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Virtual Machine Basic Config
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.Vm;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetVmApiResponse;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.UpdateVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        Vm vm = new Vm();\n\n\
          \        // Vm object initializations here...\n        \n        String\
          \ extId = \"9BD2d8fb-d410-bE31-8bEf-4719973aDEfc\";\n\n        // perform\
          \ GET call\n        GetVmApiResponse getResponse = null;\n        try {\n\
          \            getResponse = vmApi.getVmById(extId);\n        } catch(RestClientException\
          \ ex) {\n            System.out.println(ex.getMessage());\n        }\n \
          \       // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateVmApiResponse updateVmApiResponse\
          \ = vmApi.updateVmById(extId, vm, opts);\n            System.out.println(updateVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, Vm, GetVmApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ vm = new Vm();\n\n    // Vm object initializations here...\n\n    \n \
          \   let extId = \"D69ABb2C-32FD-FCFf-BD7E-d86eDFD84Da7\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getVmById(extId).then(({data, response}) => {\n  \
          \      console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.updateVmById(extId, vm, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    vm = ntnx_vmm_py_client.Vm()\n\
          \n    # Vm object initializations here...\n    \n    ext_id = \"EDfA6FD2-1fBB-2F9E-FBea-C5BA2c4AeEfC\"\
          \n\n    try:\n        api_response = vm_api.get_vm_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.update_vm_by_id(extId=ext_id,\
          \ body=vm, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    vm := import1.NewVm()\n\
          \n    // Vm object initializations here...\n\n    \n    extId := \"e0fcFf02-6309-DaAa-aDBC-2A521CBbaF3f\"\
          \n\n    getResponse, err := VmApiInstance.GetVmById(&extId)\n    if err\
          \ != nil {\n        fmt.Println(err)\n        return\n    }\n\n    // Extract\
          \ E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.UpdateVmById(&extId, vm, args)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/7bfeed7e-AeeD-aEf6-4bAC-7B4cfaFFfEA8" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/61E8aF8F-a46d-DEeF-dc81-4bBc7fdAF8Fb"
    delete:
      tags:
      - Vm
      summary: Delete a VM
      description: Delete the specified virtual machine.
      operationId: deleteVmById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c262baab-1517-466b-ae03-9f938e8a3eeb
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2505d101-8bf7-4d0c-b600-281df4a7f110
      responses:
        "202":
          description: The request to delete a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Existing Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetVmApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeleteVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"1Ef361C5-BCc9-c9a2-D14d-2fFC21DCA7d5\";\n\n        // perform GET\
          \ call\n        GetVmApiResponse getResponse = null;\n        try {\n  \
          \          getResponse = vmApi.getVmById(extId);\n        } catch(RestClientException\
          \ ex) {\n            System.out.println(ex.getMessage());\n        }\n \
          \       // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteVmApiResponse deleteVmApiResponse\
          \ = vmApi.deleteVmById(extId, opts);\n            System.out.println(deleteVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetVmApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"f99DbF4C-EAaE-4dea-eBBd-A06B8250F9dd\";\n\n\n    //\
          \ Perform Get call\n    vmApi.getVmById(extId).then(({data, response}) =>\
          \ {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deleteVmById(extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"72B3CF4e-daDa-fBF4-FeDE-DBDe8F73acCf\"\
          \n\n    try:\n        api_response = vm_api.get_vm_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_vm_by_id(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"9deF826a-2DfF-0CEa-1FAd-Ba8bfFFEbceF\"\n\n    getResponse, err :=\
          \ VmApiInstance.GetVmById(&extId)\n    if err != nil {\n        fmt.Println(err)\n\
          \        return\n    }\n\n    // Extract E-Tag Header\n    etagValue :=\
          \ ApiClientInstance.GetEtag(getResponse)\n\n    args := make(map[string]\
          \ interface{})\n    args[\"If-Match\"] = etagValue\n\n    response, error\
          \ := VmApiInstance.DeleteVmById(&extId, args)\n    if error != nil {\n \
          \       fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/ddCaAFFF-2Fbd-5a88-FD3c-b4AFF421aBeC" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/F8AFaEdB-fbf5-C64a-b76e-1BfAAcbA0e8C"
  /vmm/v4.0/ahv/config/vms:
    get:
      tags:
      - Vm
      summary: List VMs
      description: Lists the Virtual Machines defined on the system. List of Virtual
        Machines can be further filtered out using various filtering options.
      operationId: listVms
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - apcConfig/cpuModel/extId
          - apcConfig/cpuModel/name
          - apcConfig/isApcEnabled
          - cluster/extId
          - extId
          - gpus
          - hardwareClockTimezone
          - host/extId
          - isAgentVm
          - isCpuHotplugEnabled
          - isCpuPassthroughEnabled
          - isGpuConsoleEnabled
          - isLiveMigrateCapable
          - isMemoryOvercommitEnabled
          - isScsiControllerEnabled
          - isVcpuHardPinningEnabled
          - isVgaConsoleEnabled
          - machineType
          - memorySizeBytes
          - name
          - nics
          - numCoresPerSocket
          - numNumaNodes
          - numSockets
          - numThreadsPerCore
          - powerState
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - memorySizeBytes
          - name
          - numCoresPerSocket
          - numNumaNodes
          - numSockets
          - numThreadsPerCore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - apcConfig/cpuModel/extId
          - apcConfig/cpuModel/name
          - apcConfig/isApcEnabled
          - availabilityZone
          - biosUuid
          - bootConfig
          - categories
          - cdRoms
          - cluster/extId
          - createTime
          - description
          - disks
          - enabledCpuFeatures
          - extId
          - generationUuid
          - gpus
          - guestCustomization
          - guestTools
          - hardwareClockTimezone
          - host/extId
          - isAgentVm
          - isBrandingEnabled
          - isCpuHotplugEnabled
          - isCpuPassthroughEnabled
          - isCrossClusterMigrationInProgress
          - isGpuConsoleEnabled
          - isLiveMigrateCapable
          - isMemoryOvercommitEnabled
          - isScsiControllerEnabled
          - isVcpuHardPinningEnabled
          - isVgaConsoleEnabled
          - links
          - machineType
          - memorySizeBytes
          - name
          - nics
          - numCoresPerSocket
          - numNumaNodes
          - numSockets
          - numThreadsPerCore
          - ownershipInfo
          - pcieDevices
          - powerState
          - protectionPolicyState
          - protectionType
          - serialPorts
          - source
          - storageConfig
          - tenantId
          - updateTime
          - vtpmConfig
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of Virtual Machines present in the cluster.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Existing Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListVmsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        int page =\
          \ 0;\n        \n        int limit = 50;\n\n        try {\n            ListVmsApiResponse\
          \ listVmsApiResponse = vmApi.listVms(page, limit, null, null, null);\n \
          \           System.out.println(listVmsApiResponse.toString());\n\n     \
          \   } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, VmApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmApi = new VmApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              vmApi.listVms(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    page = 0\n  \
          \  \n    limit = 50\n\n\n    try:\n        api_response = vm_api.list_vms(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    page_\
          \ := 0\n    \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListVms(&page_,\
          \ &limit_, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Vm)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - Vm
      summary: Create a VM
      description: Creates a Virtual Machine with the provided configuration.
      operationId: createVm
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 89a4939e-a869-4374-a652-16719737580e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
        required: true
      responses:
        "202":
          description: The request to create a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create New Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.VmApi;
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.Vm;
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreateVmApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  VmApi vmApi = new VmApi(apiClient);

                  Vm vm = new Vm();

                  // Vm object initializations here...

                  try {
                      CreateVmApiResponse createVmApiResponse = vmApi.createVm(vm);
                      System.out.println(createVmApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, VmApi, Vm } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmApi = new VmApi(apiClientInstance);

          function sample() {
              let vm = new Vm();

              // Vm object initializations here...






              vmApi.createVm(vm).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              vm_api = ntnx_vmm_py_client.VmApi(api_client=client)
              vm = ntnx_vmm_py_client.Vm()

              # Vm object initializations here...


              try:
                  api_response = vm_api.create_vm(body=vm)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              VmApiInstance *api.VmApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              VmApiInstance = api.NewVmApi(ApiClientInstance)

              vm := import1.NewVm()

              // Vm object initializations here...



              response, error := VmApiInstance.CreateVm(vm)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestVM","description":"DescriptionforyourVM","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","source":{"entityType":"$UNKNOWN","extId":"string","$objectType":"vmm.v4.ahv.config.VmSourceReference"},"numSockets":0,"numCoresPerSocket":0,"numThreadsPerCore":0,"numNumaNodes":0,"memorySizeBytes":0,"isVcpuHardPinningEnabled":true,"isCpuPassthroughEnabled":true,"enabledCpuFeatures":["$UNKNOWN"],"isMemoryOvercommitEnabled":true,"isGpuConsoleEnabled":true,"isCpuHotplugEnabled":true,"isScsiControllerEnabled":true,"generationUuid":"string","biosUuid":"string","categories":[{"extId":"string","$objectType":"vmm.v4.ahv.config.CategoryReference"}],"ownershipInfo":{"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"},"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"cluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"availabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"guestCustomization":{"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"},"guestTools":{"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"},"hardwareClockTimezone":"UTC","isBrandingEnabled":true,"bootConfig":{"bootDevice":{"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"$objectType":"vmm.v4.ahv.config.BootDeviceDisk"},"bootOrder":["$UNKNOWN"],"$objectType":"vmm.v4.ahv.config.LegacyBoot"},"isVgaConsoleEnabled":true,"machineType":"$UNKNOWN","powerState":"$UNKNOWN","vtpmConfig":{"isVtpmEnabled":true,"version":"string","$objectType":"vmm.v4.ahv.config.VtpmConfig"},"isAgentVm":true,"apcConfig":{"isApcEnabled":true,"cpuModel":{"extId":"string","name":"Haswell","$objectType":"vmm.v4.ahv.config.CpuModelReference"},"$objectType":"vmm.v4.ahv.config.ApcConfig"},"isLiveMigrateCapable":true,"isCrossClusterMigrationInProgress":true,"storageConfig":{"isFlashModeEnabled":true,"qosConfig":{"throttledIops":0,"$objectType":"vmm.v4.ahv.config.QosConfig"},"$objectType":"vmm.v4.ahv.config.ADSFVmStorageConfig"},"disks":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.DiskAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"$objectType":"vmm.v4.ahv.config.Disk"}],"cdRoms":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"diskAddress":{"busType":"$UNKNOWN","index":0,"$objectType":"vmm.v4.ahv.config.CdRomAddress"},"backingInfo":{"diskExtId":"string","diskSizeBytes":0,"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"storageConfig":{"isFlashModeEnabled":true,"$objectType":"vmm.v4.ahv.config.VmDiskStorageConfig"},"dataSource":{"reference":{"imageExtId":"string","$objectType":"vmm.v4.ahv.config.ImageReference"},"$objectType":"vmm.v4.ahv.config.DataSource"},"isMigrationInProgress":true,"$objectType":"vmm.v4.ahv.config.VmDisk"},"isoType":"$UNKNOWN","$objectType":"vmm.v4.ahv.config.CdRom"}],"nics":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"gpus":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"}],"serialPorts":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"}],"protectionType":"$UNKNOWN","protectionPolicyState":{"policy":{"extId":"string","$objectType":"vmm.v4.ahv.config.PolicyReference"},"$objectType":"vmm.v4.ahv.config.ProtectionPolicyState"},"pcieDevices":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"}],"$objectType":"vmm.v4.ahv.config.Vm"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/customize-guest:
    post:
      tags:
      - Vm
      summary: Stage guest customization configuration details
      description: Stage a Sysprep or cloud-init configuration file to be used by
        the guest for the next boot. Note that the Sysprep command must be used to
        generalize the Windows VMs before triggering this API call.
      operationId: customizeGuestVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4cf7f056-7207-43ea-8c98-391a3b4b1b70
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 8548419b-4639-4314-b84c-80aba78d660d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestCustomizationParams'
        required: true
      responses:
        "202":
          description: The request to stage guest customization configuration details
            is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/customize-guest\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/customize-guest\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/customize-guest\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Customise Virtual Machine Guest
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestCustomizationParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CustomizeGuestVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestCustomizationParams\
          \ guestCustomizationParams = new GuestCustomizationParams();\n\n       \
          \ // GuestCustomizationParams object initializations here...\n        \n\
          \        String extId = \"Aa7cF1cf-D3bC-95aF-aCfE-fdDDb1e37Be0\";\n\n  \
          \      /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CustomizeGuestVmApiResponse\
          \ customizeGuestVmApiResponse = vmApi.customizeGuestVm(extId, guestCustomizationParams,\
          \ opts);\n            System.out.println(customizeGuestVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestCustomizationParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestCustomizationParams = new GuestCustomizationParams();\n\n    // GuestCustomizationParams\
          \ object initializations here...\n\n    \n    let extId = \"d252Ad2B-e69a-efFf-4095-DFcbf324859e\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.customizeGuestVm(extId, guestCustomizationParams, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestCustomizationParams\
          \ = ntnx_vmm_py_client.GuestCustomizationParams()\n\n    # GuestCustomizationParams\
          \ object initializations here...\n    \n    ext_id = \"A9Ccd6Da-FaD1-bcCA-DdEC-2Dacd1BFda5e\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.customize_guest_vm(extId=ext_id,\
          \ body=guestCustomizationParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestCustomizationParams\
          \ := import1.NewGuestCustomizationParams()\n\n    // GuestCustomizationParams\
          \ object initializations here...\n\n    \n    extId := \"45cB4D83-D6d8-F0A2-eE8b-F0Ad7C0F28c9\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.CustomizeGuestVm(&extId,\
          \ guestCustomizationParams, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/6aa88bD7-A71E-D159-fde1-CAEbe3CffaFB/$actions/customize-guest" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"config":{"installType":"$UNKNOWN","sysprepScript":{"value":"string","$objectType":"vmm.v4.ahv.config.Unattendxml"},"$objectType":"vmm.v4.ahv.config.Sysprep"},"$objectType":"vmm.v4.ahv.config.GuestCustomizationParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/b5cC7a25-ADA2-Da17-BeFE-bBaE8ecBaB4a/$actions/customize-guest"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-vm-disks:
    post:
      tags:
      - Vm
      summary: VmDisk migration between storage containers
      description: "Specifies the VmDisks of a VM for migration and the migration\
        \ plan for them. If all the disks of a VM need to be migrated to the same\
        \ storage container, only a single migration plan with only the external ID\
        \ of the destination storage container is needed.  If the disks are being\
        \ migrated to different containers, one plan per disk needs to be specified."
      operationId: migrateVmDisks
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f5633b50-8d03-4eed-9ebe-5eb4fcab30d6
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f75a31ee-45b5-4bec-a705-000ee3cab5ce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.DiskMigrationParams'
        required: true
      responses:
        "202":
          description: The request to migrate VmDisks between storage containers is
            accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-vm-disks\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-vm-disks\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-vm-disks\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Migrate Virtual Machine Disk
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.DiskMigrationParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.MigrateVmDisksApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        DiskMigrationParams\
          \ diskMigrationParams = new DiskMigrationParams();\n\n        // DiskMigrationParams\
          \ object initializations here...\n        \n        String extId = \"9C28f7Cd-Fd0B-6dEe-DBb9-2cCcbc0E943B\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            MigrateVmDisksApiResponse\
          \ migrateVmDisksApiResponse = vmApi.migrateVmDisks(extId, diskMigrationParams,\
          \ opts);\n            System.out.println(migrateVmDisksApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, DiskMigrationParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ diskMigrationParams = new DiskMigrationParams();\n\n    // DiskMigrationParams\
          \ object initializations here...\n\n    \n    let extId = \"F80b23Ab-3aDB-Ee46-2bEC-9CBcAEcDC53A\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.migrateVmDisks(extId, diskMigrationParams, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    diskMigrationParams\
          \ = ntnx_vmm_py_client.DiskMigrationParams()\n\n    # DiskMigrationParams\
          \ object initializations here...\n    \n    ext_id = \"c5F42AFE-1a8B-cba5-7DEd-0a2A80Daecba\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.migrate_vm_disks(extId=ext_id,\
          \ body=diskMigrationParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    diskMigrationParams\
          \ := import1.NewDiskMigrationParams()\n\n    // DiskMigrationParams object\
          \ initializations here...\n\n    \n    extId := \"f09BdfDF-3fd2-0Cf8-44AA-c1adD563DeaD\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.MigrateVmDisks(&extId, diskMigrationParams,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/228E4Ab4-Ebae-Eef1-0aa5-4B6253Ef2FEC/$actions/migrate-vm-disks" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"migrateDisks":{"plans":[{"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"vmDisks":[{"diskExtId":"string","$objectType":"vmm.v4.ahv.config.MigrateDiskReference"}],"$objectType":"vmm.v4.ahv.config.ADSFDiskMigrationPlan"}],"$objectType":"vmm.v4.ahv.config.MigrationPlans"},"$objectType":"vmm.v4.ahv.config.DiskMigrationParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"migrateDisks":{"plans":[{"storageContainer":{"extId":"string","$objectType":"vmm.v4.ahv.config.VmDiskContainerReference"},"vmDisks":[{"diskExtId":"string","$objectType":"vmm.v4.ahv.config.MigrateDiskReference"}],"$objectType":"vmm.v4.ahv.config.ADSFDiskMigrationPlan"}],"$objectType":"vmm.v4.ahv.config.MigrationPlans"},"$objectType":"vmm.v4.ahv.config.DiskMigrationParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/fb9BAdC3-3eb0-a5eE-4fFd-bBfDECcCFC60/$actions/migrate-vm-disks"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/revert:
    post:
      tags:
      - Vm
      summary: Revert the AHV VM.
      description: "Revert VM identified by {extId}. This does an in-place VM restore\
        \ from a specified VM Recovery Point."
      operationId: revertVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 02c3bf8e-9c5e-4fbf-968b-4061921bf2b8
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 8f457ce9-a439-468f-99b2-c2b8dd6ff5e2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.RevertParams'
        required: true
      responses:
        "202":
          description: "Request Accepted. Returning task ID to monitor the progress\
            \ of VM revert operation. Once the task completes, the current VM's recovery\
            \ point ID (created before this revert operation has started) may be found\
            \ in the task completion details if created."
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/revert\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/revert\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/revert\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Revert Existing Virtual Machine
        roleList:
        - Consumer
        - Developer
        - Operator
        - Project Admin
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Disaster Recovery Admin
      x-rate-limit:
      - type: xsmall
        count: 30
        timeUnit: seconds
      - type: Small
        count: 40
        timeUnit: seconds
      - type: Large
        count: 60
        timeUnit: seconds
      - type: XLarge
        count: 80
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.RevertParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.RevertVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        RevertParams revertParams\
          \ = new RevertParams();\n\n        // RevertParams object initializations\
          \ here...\n        revertParams.setVmRecoveryPointExtId(\"cbE2beb7-Cf38-4ffC-eAC7-EbCbBDe0880E\"\
          );  // required field\n        \n        String extId = \"cE8C11d6-a1C8-1CBC-eC27-bCF0AEe3EBc1\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            RevertVmApiResponse revertVmApiResponse\
          \ = vmApi.revertVm(extId, revertParams, opts);\n            System.out.println(revertVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, RevertParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ revertParams = new RevertParams();\n\n    // RevertParams object initializations\
          \ here...\n    revertParams.setVmRecoveryPointExtId(\"0B50e64E-cbbf-a672-FEEe-B17E8dbb55eD\"\
          );  // required field\n\n    \n    let extId = \"a5D2F30B-eddF-21CB-Dc15-fFEFCfEC7F4B\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.revertVm(extId, revertParams, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    revertParams = ntnx_vmm_py_client.RevertParams()\n\
          \n    # RevertParams object initializations here...\n    revertParams.vm_recovery_point_ext_id\
          \ = \"Ff7a2Dd5-9bd6-fda5-6aa6-Cfee7Ab4EcB0\"  # required field\n    \n \
          \   ext_id = \"dbCEaBCe-AFf1-2a2C-b2AF-99A8aDEDA4DE\"\n\n    \"\"\"\n  \
          \  Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = vm_api.revert_vm(extId=ext_id, body=revertParams,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    revertParams\
          \ := import1.NewRevertParams()\n\n    // RevertParams object initializations\
          \ here...\n\n    \n    extId := \"3F7a3cE4-BeeE-EadF-CeCf-F3fEfeBC7dAE\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.RevertVm(&extId, revertParams,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/bfEaDb7D-AeaF-aB96-EA28-4d8cf6EF3047/$actions/revert" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"vmRecoveryPointExtId":"string","$objectType":"vmm.v4.ahv.config.RevertParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"vmRecoveryPointExtId":"string","$objectType":"vmm.v4.ahv.config.RevertParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/42FBDce8-9e42-Ffd0-0FEA-ccdedbDD9cDC/$actions/revert"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate:
    post:
      tags:
      - Vm
      summary: Migrate a VM across clusters
      description: "Migrates a VM from the current cluster to a new target cluster.\
        \ Supports the dry-run option, which if used results only in validation of\
        \ the cross-cluster migration parameters and pre-requisites."
      operationId: crossClusterMigrateVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1976c8b5-6f78-4d5d-b7f7-a69c343f035d
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 7cde40ed-6033-400f-9660-466fdbf7fd11
      - name: $dryrun
        in: query
        description: |
          A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          description: |
            A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
          example: false
      requestBody:
        description: Input on how to migrate a VM across clusters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmCrossClusterMigrateParams'
        required: true
      responses:
        "202":
          description: The request to migrate a VM across clusters is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Allow Cross Cluster VM Migration
        roleList:
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.AvailabilityZoneReference;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.VmCrossClusterMigrateParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CrossClusterMigrateVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        VmCrossClusterMigrateParams\
          \ vmCrossClusterMigrateParams = new VmCrossClusterMigrateParams();\n\n \
          \       // VmCrossClusterMigrateParams object initializations here...\n\
          \        vmCrossClusterMigrateParams.setIsLiveMigration(true);  // required\
          \ field\n        vmCrossClusterMigrateParams.setTargetAvailabilityZone(new\
          \ AvailabilityZoneReference());  // required field\n        \n        String\
          \ extId = \"5358cEfB-AF88-f6FF-97eA-104BBB9DAC48\";\n        \n        boolean\
          \ dryrun = true;\n\n        /*\n        Some Create, Update, and Delete\
          \ operations generally require an If-Match header with a value to be passed\
          \ in order to protect against concurrent updates.\n        The value that\
          \ needs to be sent in the If-Match header needs to be retrieved by performing\
          \ a Read(Get) operation on the same resource.\n        ETags can be retrieved\
          \ by calling a static method of ApiClient as below:\n        String eTag\
          \ = ApiClient.getEtag(getResponse);\n        HashMap<String, Object> opts\
          \ = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH, eTag);\n  \
          \      */\n        try {\n            CrossClusterMigrateVmApiResponse crossClusterMigrateVmApiResponse\
          \ = vmApi.crossClusterMigrateVm(extId, dryrun, vmCrossClusterMigrateParams,\
          \ opts);\n            System.out.println(crossClusterMigrateVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, AvailabilityZoneReference, VmCrossClusterMigrateParams\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ vmCrossClusterMigrateParams = new VmCrossClusterMigrateParams();\n\n \
          \   // VmCrossClusterMigrateParams object initializations here...\n    vmCrossClusterMigrateParams.setIsLiveMigration(true);\
          \  // required field\n    vmCrossClusterMigrateParams.setTargetAvailabilityZone(new\
          \ AvailabilityZoneReference());  // required field\n\n    \n    let extId\
          \ = \"1FeA7b5b-d562-bDBd-fcAa-20Fb1cACFAD0\";\n\n    // Construct Optional\
          \ Parameters\n    var opts = {};\n    opts[\"$dryrun\"] = true;\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.crossClusterMigrateVm(extId,\
          \ vmCrossClusterMigrateParams, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    vmCrossClusterMigrateParams\
          \ = ntnx_vmm_py_client.VmCrossClusterMigrateParams()\n\n    # VmCrossClusterMigrateParams\
          \ object initializations here...\n    vmCrossClusterMigrateParams.is_live_migration\
          \ = True  # required field\n    vmCrossClusterMigrateParams.target_availability_zone\
          \ = ntnx_vmm_py_client.AvailabilityZoneReference()  # required field\n \
          \   \n    ext_id = \"AFCE8ad3-ccC9-2DB6-b19e-aDebD155eAE7\"\n    \n    dryrun\
          \ = True\n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.cross_cluster_migrate_vm(extId=ext_id,\
          \ _dryrun=dryrun, body=vmCrossClusterMigrateParams, if_match=etag_value)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    vmCrossClusterMigrateParams\
          \ := import1.NewVmCrossClusterMigrateParams()\n\n    // VmCrossClusterMigrateParams\
          \ object initializations here...\n\n    \n    extId := \"a0ea3828-c1ac-CE2a-Ae3c-DcfcadFaCDc2\"\
          \n    \n    dryrun_ := true\n\n    /*\n    Some Create, Update, and Delete\
          \ operations generally require an If-Match header with a value to be passed\
          \ in order to protect against concurrent updates.\n    The value that needs\
          \ to be sent in the If-Match header needs to be retrieved by performing\
          \ a Read(Get) operation on the same resource.\n    ETags can be retrieved\
          \ by calling a static method of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.CrossClusterMigrateVm(&extId,\
          \ &dryrun_, vmCrossClusterMigrateParams, args)\n    if error != nil {\n\
          \        fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/d66Df62e-e9ff-fA2e-22fa-eb8Cec159bDE/$actions/migrate?$dryrun=true" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"targetAvailabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"targetCluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"isLiveMigration":true,"overrides":{"overrideNicList":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"$objectType":"vmm.v4.ahv.config.VmCrossClusterMigrateOverrides"},"$objectType":"vmm.v4.ahv.config.VmCrossClusterMigrateParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"targetAvailabilityZone":{"extId":"string","$objectType":"vmm.v4.ahv.config.AvailabilityZoneReference"},"targetCluster":{"extId":"string","$objectType":"vmm.v4.ahv.config.ClusterReference"},"isLiveMigration":true,"overrides":{"overrideNicList":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"}],"$objectType":"vmm.v4.ahv.config.VmCrossClusterMigrateOverrides"},"$objectType":"vmm.v4.ahv.config.VmCrossClusterMigrateParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/a1eE230C-5CEd-8cf7-D1b3-4Fff0bBc4A6e/$actions/migrate?$dryrun=true"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-to-host:
    post:
      tags:
      - Vm
      summary: Host to host VM migration
      description: Migrate a VM to another host within the same cluster.
      operationId: migrateVmToHost
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 92ba854c-985a-40b6-8f38-3725e41cbca2
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 26513582-20e4-470f-82f3-615a5309250e
      requestBody:
        description: The request body for migrating a VM from one host to another
          within a cluster.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmMigrateToHostParams'
        required: true
      responses:
        "202":
          description: The request to migrate a VM to another host within the cluster
            is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-to-host\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-to-host\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-to-host\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Migrate Virtual Machine To Host
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.HostReference;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.VmMigrateToHostParams;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.config.MigrateVmToHostApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        VmMigrateToHostParams\
          \ vmMigrateToHostParams = new VmMigrateToHostParams();\n\n        // VmMigrateToHostParams\
          \ object initializations here...\n        vmMigrateToHostParams.setHost(new\
          \ HostReference());  // required field\n        \n        String extId =\
          \ \"B436A3Ff-bdD7-114f-eD61-5aFBAc6fBe3d\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            MigrateVmToHostApiResponse\
          \ migrateVmToHostApiResponse = vmApi.migrateVmToHost(extId, vmMigrateToHostParams,\
          \ opts);\n            System.out.println(migrateVmToHostApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, HostReference, VmMigrateToHostParams\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ vmMigrateToHostParams = new VmMigrateToHostParams();\n\n    // VmMigrateToHostParams\
          \ object initializations here...\n    vmMigrateToHostParams.setHost(new\
          \ HostReference());  // required field\n\n    \n    let extId = \"Cd4BEDE5-e84c-A4Cb-C6fB-EFBfEa0Dfb40\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.migrateVmToHost(extId, vmMigrateToHostParams, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    vmMigrateToHostParams\
          \ = ntnx_vmm_py_client.VmMigrateToHostParams()\n\n    # VmMigrateToHostParams\
          \ object initializations here...\n    vmMigrateToHostParams.host = ntnx_vmm_py_client.HostReference()\
          \  # required field\n    \n    ext_id = \"Fe5Fd74b-FbcB-07dE-faA2-98c4543cDe7f\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.migrate_vm_to_host(extId=ext_id,\
          \ body=vmMigrateToHostParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    vmMigrateToHostParams\
          \ := import1.NewVmMigrateToHostParams()\n\n    // VmMigrateToHostParams\
          \ object initializations here...\n\n    \n    extId := \"b0E4C48D-bD1D-DCff-EDBb-3aCfb1DeCbeb\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.MigrateVmToHost(&extId,\
          \ vmMigrateToHostParams, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/F18f8bfb-ADc8-4FbD-5eb7-5DBfDD23CDcD/$actions/migrate-to-host" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"$objectType":"vmm.v4.ahv.config.VmMigrateToHostParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"host":{"extId":"string","$objectType":"vmm.v4.ahv.config.HostReference"},"$objectType":"vmm.v4.ahv.config.VmMigrateToHostParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/1A1fcA1a-Ca6a-C9a6-Caac-DFCFDcB6DfdA/$actions/migrate-to-host"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}:
    get:
      tags:
      - Vm
      summary: Get configuration details for the provided GPU device
      description: Retrieves configuration details for the provided GPU device attached
        to a virtual machine.
      operationId: getGpuById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: da980806-ee4b-4ed8-bb92-b98bbe783008
      - name: extId
        in: path
        description: A globally unique identifier of a VM GPU of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6c174831-51c8-42e6-b4b0-c081dcb85418
      responses:
        "200":
          description: Returns the configuration details for the provided GPU device
            attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.Gpu'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine GPU
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetGpuApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"fEB84010-C72E-0CfC-b7E1-6D2FE6b0CadF\";\n        \n        String\
          \ extId = \"7b9B9fDA-Baec-Ad0E-D85a-7EBFb4F0fAA0\";\n\n        try {\n \
          \           GetGpuApiResponse getGpuApiResponse = vmApi.getGpuById(vmExtId,\
          \ extId);\n            System.out.println(getGpuApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"6B6fEAeD-9bAB-a4CB-4A4E-ec4bBfd7fFB8\";\n    \n\
          \    let extId = \"9FCdb1aB-CDea-D673-2FAE-E3dDaBe3DbBf\";\n\n\n\n\n\n \
          \   vmApi.getGpuById(vmExtId, extId).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          Ebca9dA3-cAFC-f4BC-Fb2C-EB98cE2A92EA\"\n    \n    ext_id = \"581EbbDB-aDeA-F8Fb-0Bb5-4a22Ff9fcAd2\"\
          \n\n\n    try:\n        api_response = vm_api.get_gpu_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"01bfcc2E-AA3A-EFDD-eEce-F020BbdCfBce\"\n    \n    extId := \"69BecebF-eaa0-B6eb-E2BC-AA59a69ebEc7\"\
          \n\n\n    response, error := VmApiInstance.GetGpuById(&vmExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.Gpu)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/FbFE59BD-afbD-69DD-cfe3-CCfb20A4bE8C/gpus/17FceCAa-Ea31-2EFA-4Ddc-BeBf0EebBdcf" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/3bE3e752-eAfD-3Beb-a5e6-DBF8F9a15B4C/gpus/7DCD41Fe-BC93-69Cd-ceAd-81a54FAF9e6A"
    delete:
      tags:
      - Vm
      summary: Remove a GPU device from a VM
      description: Removes the specified GPU device from a virtual machine
      operationId: deleteGpuById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4de595b8-75e6-4d61-811e-4f5ff164ecfe
      - name: extId
        in: path
        description: A globally unique identifier of a VM GPU of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b2a8bb45-a77e-4c94-a674-efc4a8f61c02
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 1056ca23-6ee7-470b-b74d-cd4f5618f55a
      responses:
        "202":
          description: The request to remove a GPU device from a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Virtual Machine GPU
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetGpuApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeleteGpuApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"3BDfB1a4-d3Fa-3F6c-DeC7-fc705DEa2Da9\";\n        \n        String\
          \ extId = \"dADcfc97-2B92-C974-b8dD-B9b3EAecfbd2\";\n\n        // perform\
          \ GET call\n        GetGpuApiResponse getResponse = null;\n        try {\n\
          \            getResponse = vmApi.getGpuById(vmExtId, extId);\n        }\
          \ catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteGpuApiResponse deleteGpuApiResponse\
          \ = vmApi.deleteGpuById(vmExtId, extId, opts);\n            System.out.println(deleteGpuApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetGpuApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"BBcEE7A6-7fC3-37EB-6fDf-AeCea9E9Bd99\";\n    \n\
          \    let extId = \"fFbe3EbB-EAF7-Cc47-BFaB-ba5afCb4eF6A\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getGpuById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deleteGpuById(vmExtId, extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          1AaF6Fed-AFca-ECAc-75DF-e2ade46bAc4B\"\n    \n    ext_id = \"Cc4Ec4dA-A3Ff-AA96-BEDC-DA0F4fdFD28B\"\
          \n\n    try:\n        api_response = vm_api.get_gpu_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_gpu_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"cdA7C00c-3be1-FB04-eD11-FcDEe4ebeFf3\"\n    \n    extId := \"a2cb6EcA-FcE8-c2eF-7fe5-7DceDdbcd2AA\"\
          \n\n    getResponse, err := VmApiInstance.GetGpuById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.DeleteGpuById(&vmExtId, &extId, args)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/01cdfF70-6EFb-dF0f-E542-ccd6aaF035ed/gpus/C7d2433e-5eCf-725F-a1A8-debCe15Da3c2" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/FBfF7d3c-38ad-Bdaa-bD3E-7ea195bEcd3b/gpus/5ce3eB4c-E0B1-5CFD-Ef8a-4d68a960cD8f"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus:
    get:
      tags:
      - Vm
      summary: List GPUs attached to a VM
      description: Lists the GPU devices attached to a virtual machine
      operationId: listGpusByVmId
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7605cae7-86dd-46f8-b80c-a2ca68f6e4fd
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - mode
          - vendor
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of GPU devices attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.Gpu'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine GPU
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListGpusApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"ec8AADD2-Dc0e-cADB-9ffA-Ad5Bd44BbBFe\";\n        \n        int page\
          \ = 0;\n        \n        int limit = 50;\n\n        try {\n           \
          \ ListGpusApiResponse listGpusApiResponse = vmApi.listGpusByVmId(vmExtId,\
          \ page, limit, null);\n            System.out.println(listGpusApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"aBbA5c12-52C6-CC7f-dee7-3dCBAcD3cFcb\";\n\n    //\
          \ Construct Optional Parameters\n    var opts = {};\n    opts[\"$page\"\
          ] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n\n\n\n\n    vmApi.listGpusByVmId(vmExtId, opts).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          1dD9BDe0-B4bc-C5cF-1fC6-59C0eEfDD67d\"\n    \n    page = 0\n    \n    limit\
          \ = 50\n\n\n    try:\n        api_response = vm_api.list_gpus_by_vm_id(vmExtId=vm_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"6FAf1D31-3cEc-14Da-Cb8f-fdeB02bFbE88\"\n    \n    page_ := 0\n  \
          \  \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListGpusByVmId(&vmExtId,\
          \ &page_, &limit_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Gpu)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/93806a2F-eDCa-dc85-acee-2fC2245EAAAe/gpus?$filter=string_sample_data&$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/D8Ccb5ab-af4D-16Fb-5FA1-19DdbAdC2cCD/gpus?$filter=string_sample_data&$limit=50&$page=0"
    post:
      tags:
      - Vm
      summary: Attach a GPU device to a VM
      description: Attaches a GPU device to a virtual machine
      operationId: createGpu
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a4312da3-cb25-4f3d-aa05-1063d5cdd1cd
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: e65f86e7-ed3a-4704-85de-7e882a6179ee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Gpu'
        required: true
      responses:
        "202":
          description: The request to attach a GPU device to a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Virtual Machine GPU
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.Gpu;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreateGpuApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        Gpu gpu = Gpu.UNKNOWN;\n\
          \n        // Gpu object initializations here...\n        \n        String\
          \ vmExtId = \"c6fDFbFc-C24E-90ca-65e3-Ea6dcdAcd68d\";\n\n        /*\n  \
          \      Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n        The value that needs to be sent in the If-Match header\
          \ needs to be retrieved by performing a Read(Get) operation on the same\
          \ resource.\n        ETags can be retrieved by calling a static method of\
          \ ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CreateGpuApiResponse createGpuApiResponse\
          \ = vmApi.createGpu(vmExtId, gpu, opts);\n            System.out.println(createGpuApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, Gpu } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ gpu = Gpu.UNKNOWN;\n\n    // Gpu object initializations here...\n\n  \
          \  \n    let vmExtId = \"3315bFDc-c57d-c9F3-C0C8-eDb5fcAD1df5\";\n\n\n \
          \   /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.createGpu(vmExtId, gpu, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    gpu = ntnx_vmm_py_client.Gpu._UNKNOWN\n\
          \n    # Gpu object initializations here...\n    \n    vm_ext_id = \"a9BD1daD-DfdA-FAB6-43ed-Bd9Ddf2de500\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.create_gpu(vmExtId=vm_ext_id,\
          \ body=gpu, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    gpu := import1.NewGpu()\n\
          \n    // Gpu object initializations here...\n\n    \n    vmExtId := \"BA8FFbec-aBbE-06Fb-2DE4-bf61a5999aba\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.CreateGpu(&vmExtId, gpu,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/A3CdfEcd-fF29-Ef58-E3AD-99A87C76EA8d/gpus" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"mode":"$UNKNOWN","deviceId":0,"vendor":"$UNKNOWN","pciAddress":{"segment":0,"bus":0,"device":0,"func":0,"$objectType":"vmm.v4.ahv.config.SBDF"},"guestDriverVersion":"string","name":"string","frameBufferSizeBytes":0,"numVirtualDisplayHeads":0,"fraction":0,"$objectType":"vmm.v4.ahv.config.Gpu"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/A8F7e0F6-fEa6-CF45-cdc3-35DfBDCEcE38/gpus"
  /vmm/v4.0/ahv/config/vms/{extId}/guest-tools:
    get:
      tags:
      - Vm
      summary: Get VM NGT configuration
      description: Retrieves the Nutanix Guest Tools configuration for a virtual machine.
      operationId: getGuestToolsById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f29535e2-6bd8-4782-b879-409f17217b31
      responses:
        "200":
          description: Returns the Nutanix Guest Tools configuration for a virtual
            machine.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestTools'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine NGT
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"e22c3ABf-2d2d-9DDa-bD8f-0DdFB1b5E2Ab\";\n\n        try {\n       \
          \     GetGuestToolsApiResponse getGuestToolsApiResponse = vmApi.getGuestToolsById(extId);\n\
          \            System.out.println(getGuestToolsApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"EFBe6BdF-025f-0cDb-CDE4-F59bA3fefcaa\";\n\n\n\n\n\n\
          \    vmApi.getGuestToolsById(extId).then(({data, response}) => {\n     \
          \   console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"aCBf23B2-DA69-DFf8-Cc9F-A8aC516bBAd2\"\
          \n\n\n    try:\n        api_response = vm_api.get_guest_tools_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"F43b715a-aFFb-d1d3-E9Ec-aBfbbdCa6EED\"\n\n\n    response, error :=\
          \ VmApiInstance.GetGuestToolsById(&extId)\n    if error != nil {\n     \
          \   fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.GuestTools)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/D9dA13B1-0AFC-800f-3D3d-1eCeDfCEc92d/guest-tools" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/fAf488fa-FC5c-C2bC-3Be4-5A43ea9D9b0C/guest-tools"
    put:
      tags:
      - Vm
      summary: Update NGT configuration for a VM
      description: Updates the Nutanix Guest Tools configuration for a virtual machine.
      operationId: updateGuestToolsById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: bd839793-33d3-4885-8d43-441c277a76fb
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4d53616b-61f0-4175-81e2-2c0ff7f8bb0b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestTools'
        required: true
      responses:
        "202":
          description: The request to update NGT configuration for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Virtual Machine NGT
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestTools;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.UpdateGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestTools guestTools\
          \ = new GuestTools();\n\n        // GuestTools object initializations here...\n\
          \        \n        String extId = \"6cBCD6A5-F7bE-E98D-ddAB-5dbbe0C79aaE\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UpdateGuestToolsApiResponse\
          \ updateGuestToolsApiResponse = vmApi.updateGuestToolsById(extId, guestTools,\
          \ opts);\n            System.out.println(updateGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestTools } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestTools = new GuestTools();\n\n    // GuestTools object initializations\
          \ here...\n\n    \n    let extId = \"f8E1b8FE-EbEF-B83e-AD71-F48dacBAc7b9\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.updateGuestToolsById(extId, guestTools, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestTools = ntnx_vmm_py_client.GuestTools()\n\
          \n    # GuestTools object initializations here...\n    \n    ext_id = \"\
          0Bc5a4Eb-75BB-Ab9a-2D7f-DC51d1e66Ddb\"\n\n    \"\"\"\n    Some Create, Update,\
          \ and Delete operations generally require an If-Match header with a value\
          \ to be passed in order to protect against concurrent updates.\n    The\
          \ value that needs to be sent in the If-Match header needs to be retrieved\
          \ by performing a Read(Get) operation on the same resource.\n    ETags can\
          \ be retrieved by calling a static method of ApiClient as below:\n    etag_value\
          \ = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n    try:\n     \
          \   api_response = vm_api.update_guest_tools_by_id(extId=ext_id, body=guestTools,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestTools :=\
          \ import1.NewGuestTools()\n\n    // GuestTools object initializations here...\n\
          \n    \n    extId := \"0AB246B7-abca-2Bea-D264-ebF1aA05dEF3\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.UpdateGuestToolsById(&extId, guestTools,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/2eAbfcdB-0BeE-D44D-CA9f-Fdc8263cbDAa/guest-tools" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"version":"string","isInstalled":true,"isEnabled":true,"isIsoInserted":true,"capabilities":["$UNKNOWN"],"availableVersion":"string","guestOsVersion":"string","isReachable":true,"isVssSnapshotCapable":true,"isVmMobilityDriversInstalled":true,"$objectType":"vmm.v4.ahv.config.GuestTools"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/c634fBE8-5bB0-F7CB-CEcA-7F51a2dbcA14/guest-tools"
  /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/install:
    post:
      tags:
      - Vm
      summary: Install NGT in a VM
      description: Installs Nutanix Guest Tools in a Virtual Machine by using the
        provided credentials.
      operationId: installVmGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4f134575-93d6-4a7c-a013-f1511e725e15
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 0669d916-85c2-4b25-beff-52f8bedcfe82
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestToolsInstallConfig'
        required: true
      responses:
        "202":
          description: The request to install NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/install\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/install\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/install\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Install Virtual Machine NGT
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestToolsInstallConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.InstallVmGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestToolsInstallConfig\
          \ guestToolsInstallConfig = new GuestToolsInstallConfig();\n\n        //\
          \ GuestToolsInstallConfig object initializations here...\n        \n   \
          \     String extId = \"cDf53d4B-fBd1-BBeF-0b0d-b3afFBD9a65F\";\n\n     \
          \   /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            InstallVmGuestToolsApiResponse\
          \ installVmGuestToolsApiResponse = vmApi.installVmGuestTools(extId, guestToolsInstallConfig,\
          \ opts);\n            System.out.println(installVmGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestToolsInstallConfig } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestToolsInstallConfig = new GuestToolsInstallConfig();\n\n    // GuestToolsInstallConfig\
          \ object initializations here...\n\n    \n    let extId = \"13c4aA7F-1a73-1eDc-edBF-B45fbAedcaac\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.installVmGuestTools(extId, guestToolsInstallConfig, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestToolsInstallConfig\
          \ = ntnx_vmm_py_client.GuestToolsInstallConfig()\n\n    # GuestToolsInstallConfig\
          \ object initializations here...\n    \n    ext_id = \"fc0A8A45-C16b-5a9f-2fFc-D9d5fECa1CeC\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.install_vm_guest_tools(extId=ext_id,\
          \ body=guestToolsInstallConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestToolsInstallConfig\
          \ := import1.NewGuestToolsInstallConfig()\n\n    // GuestToolsInstallConfig\
          \ object initializations here...\n\n    \n    extId := \"BBbE5e53-21DA-e5Ba-adBC-1f9555dC82DA\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.InstallVmGuestTools(&extId,\
          \ guestToolsInstallConfig, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/fc16a6c0-9dDa-66EC-6DA7-c1E41fa8ADFa/guest-tools/$actions/install" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"capabilities":["$UNKNOWN"],"credential":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.ahv.config.Credential"},"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.ahv.config.RebootPreferenceSchedule"},"$objectType":"vmm.v4.ahv.config.RebootPreference"},"$objectType":"vmm.v4.ahv.config.GuestToolsInstallConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"capabilities":["$UNKNOWN"],"credential":{"username":"test_user","password":"test_password","$objectType":"vmm.v4.ahv.config.Credential"},"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.ahv.config.RebootPreferenceSchedule"},"$objectType":"vmm.v4.ahv.config.RebootPreference"},"$objectType":"vmm.v4.ahv.config.GuestToolsInstallConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/ADBB53A6-4D20-68c4-aEF7-DCFB9D2A7FAf/guest-tools/$actions/install"
  /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/upgrade:
    post:
      tags:
      - Vm
      summary: Upgrade NGT inside a VM
      description: Trigger an in-guest upgrade of Nutanix Guest Tools.
      operationId: upgradeVmGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ef058073-31b5-4182-b848-8add271a14bc
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a23e86d4-0efb-422c-983f-f8066acf65f6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestToolsUpgradeConfig'
        required: true
      responses:
        "202":
          description: The request to upgrade NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/upgrade\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/upgrade\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/upgrade\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Upgrade Virtual Machine NGT
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestToolsUpgradeConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.UpgradeVmGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestToolsUpgradeConfig\
          \ guestToolsUpgradeConfig = new GuestToolsUpgradeConfig();\n\n        //\
          \ GuestToolsUpgradeConfig object initializations here...\n        \n   \
          \     String extId = \"A2Ee7c5f-6d3a-3fFE-d9D4-BDF8B96c0d6a\";\n\n     \
          \   /*\n        Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n        The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n        ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UpgradeVmGuestToolsApiResponse\
          \ upgradeVmGuestToolsApiResponse = vmApi.upgradeVmGuestTools(extId, guestToolsUpgradeConfig,\
          \ opts);\n            System.out.println(upgradeVmGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestToolsUpgradeConfig } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestToolsUpgradeConfig = new GuestToolsUpgradeConfig();\n\n    // GuestToolsUpgradeConfig\
          \ object initializations here...\n\n    \n    let extId = \"F1EcAbA9-0bB7-3fAE-4bFf-dAFE2AaEdE4f\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.upgradeVmGuestTools(extId, guestToolsUpgradeConfig, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestToolsUpgradeConfig\
          \ = ntnx_vmm_py_client.GuestToolsUpgradeConfig()\n\n    # GuestToolsUpgradeConfig\
          \ object initializations here...\n    \n    ext_id = \"f2CCEceF-F9be-BBCB-cBfC-b78CdEFfCe9A\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.upgrade_vm_guest_tools(extId=ext_id,\
          \ body=guestToolsUpgradeConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestToolsUpgradeConfig\
          \ := import1.NewGuestToolsUpgradeConfig()\n\n    // GuestToolsUpgradeConfig\
          \ object initializations here...\n\n    \n    extId := \"C9FEa18B-1c58-6b69-cF0E-CCd73FfBfEba\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.UpgradeVmGuestTools(&extId,\
          \ guestToolsUpgradeConfig, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/6cbAacd0-cA5D-605a-aC3d-Da1aAeB6fEAc/guest-tools/$actions/upgrade" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.ahv.config.RebootPreferenceSchedule"},"$objectType":"vmm.v4.ahv.config.RebootPreference"},"$objectType":"vmm.v4.ahv.config.GuestToolsUpgradeConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"rebootPreference":{"scheduleType":"$UNKNOWN","schedule":{"startTime":"2015-07-20T15:49:04-07:00","$objectType":"vmm.v4.ahv.config.RebootPreferenceSchedule"},"$objectType":"vmm.v4.ahv.config.RebootPreference"},"$objectType":"vmm.v4.ahv.config.GuestToolsUpgradeConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/dfF9B9b1-BAeE-0FCE-ddE4-AE5bBFC3DD1d/guest-tools/$actions/upgrade"
  /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/insert-iso:
    post:
      tags:
      - Vm
      summary: Insert NGT ISO into an available CD-ROM for a VM
      description: Inserts the Nutanix Guest Tools installation and configuration
        ISO into a virtual machine.
      operationId: insertVmGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 44a9e154-86ff-4158-9c91-a1a4941a9c48
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: fcf72b39-bc2f-4718-a933-aefb89a73a50
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestToolsInsertConfig'
        required: true
      responses:
        "202":
          description: The request to insert NGT ISO for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/insert-iso\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/insert-iso\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/insert-iso\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Insert Virtual Machine NGT ISO
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestToolsInsertConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.InsertVmGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestToolsInsertConfig\
          \ guestToolsInsertConfig = new GuestToolsInsertConfig();\n\n        // GuestToolsInsertConfig\
          \ object initializations here...\n        \n        String extId = \"2FAFfAcd-5DB7-6b8D-45cE-29Bb0a9AE3f3\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            InsertVmGuestToolsApiResponse\
          \ insertVmGuestToolsApiResponse = vmApi.insertVmGuestTools(extId, guestToolsInsertConfig,\
          \ opts);\n            System.out.println(insertVmGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestToolsInsertConfig } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestToolsInsertConfig = new GuestToolsInsertConfig();\n\n    // GuestToolsInsertConfig\
          \ object initializations here...\n\n    \n    let extId = \"9Ed93dfb-AeE5-9cDf-dbB0-Dadf70a1381e\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.insertVmGuestTools(extId, guestToolsInsertConfig, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestToolsInsertConfig\
          \ = ntnx_vmm_py_client.GuestToolsInsertConfig()\n\n    # GuestToolsInsertConfig\
          \ object initializations here...\n    \n    ext_id = \"5fAeAeeD-9295-FDCC-BDCF-eCFDD5aE66Bb\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.insert_vm_guest_tools(extId=ext_id,\
          \ body=guestToolsInsertConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestToolsInsertConfig\
          \ := import1.NewGuestToolsInsertConfig()\n\n    // GuestToolsInsertConfig\
          \ object initializations here...\n\n    \n    extId := \"ce3abC46-1CA8-7AAE-aC6B-60Bb8BDEDbdd\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.InsertVmGuestTools(&extId,\
          \ guestToolsInsertConfig, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/EBEBc6aF-2F9D-FAD9-Ebd5-fdfe7F44f6D5/guest-tools/$actions/insert-iso" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"capabilities":["$UNKNOWN"],"isConfigOnly":true,"$objectType":"vmm.v4.ahv.config.GuestToolsInsertConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"capabilities":["$UNKNOWN"],"isConfigOnly":true,"$objectType":"vmm.v4.ahv.config.GuestToolsInsertConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/fC9AAC8B-2db6-e5cb-bbF5-bB7eACaDa41f/guest-tools/$actions/insert-iso"
  /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/uninstall:
    post:
      tags:
      - Vm
      summary: Uninstall NGT from a VM
      description: Trigger an in-guest uninstallation of Nutanix Guest Tools.
      operationId: uninstallVmGuestTools
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: eb538479-6098-458f-8106-3903974958cc
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 36019708-dbdc-4548-b253-b4e26bcc8e8f
      responses:
        "202":
          description: The request to uninstall NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/uninstall\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/uninstall\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/uninstall\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Uninstall Virtual Machine NGT
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.UninstallVmGuestToolsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"2A2B89B9-aCF1-fFB6-d046-CFd52FFedb2e\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UninstallVmGuestToolsApiResponse\
          \ uninstallVmGuestToolsApiResponse = vmApi.uninstallVmGuestTools(extId,\
          \ opts);\n            System.out.println(uninstallVmGuestToolsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"Ed044FEe-7C6E-fc15-Db39-f3daEDa97Dd3\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.uninstallVmGuestTools(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"9ABAb8b1-370e-2DFF-bbCC-FBfAC7BffB2f\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.uninstall_vm_guest_tools(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"BaFfc424-fEEe-CFD5-B2DD-bbeFaC6fDbf5\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.UninstallVmGuestTools(&extId, args)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/cAc4cAAf-8C85-7F75-fceD-cbCe1Bd68CbA/guest-tools/$actions/uninstall" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/DEdDBdCf-3CfD-cc04-73aD-B4fDD2bBBdBF/guest-tools/$actions/uninstall"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}:
    get:
      tags:
      - Vm
      summary: Get configuration details for the provided network device
      description: Retrieves configuration details for the provided network device
        attached to a virtual machine.
      operationId: getNicById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 0b917a5f-dcee-4055-99f4-b9da0380fd05
      - name: extId
        in: path
        description: A globally unique identifier of a VM NIC of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1e0b6f8a-4847-46a1-af5b-e3860c1f5646
      responses:
        "200":
          description: Returns the configuration details for the provided network
            device attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine NIC
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetNicApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"dfD322B5-1BCB-dc6F-a231-54b7c6FFdF5f\";\n        \n        String\
          \ extId = \"DA9ECCcb-dE63-facf-ceDE-faaDcB6ACB39\";\n\n        try {\n \
          \           GetNicApiResponse getNicApiResponse = vmApi.getNicById(vmExtId,\
          \ extId);\n            System.out.println(getNicApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"45DbAEfD-dBdf-8Dfa-cFbA-afcA78E1ebc4\";\n    \n\
          \    let extId = \"aFDb2aD1-74A6-EbBE-6bfa-c3EB5dfEDaAD\";\n\n\n\n\n\n \
          \   vmApi.getNicById(vmExtId, extId).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          0D9A5BBa-ACA5-fb8A-5daB-cDbE06DDf41B\"\n    \n    ext_id = \"fE47F2Ca-dDa7-D920-A3Ff-bEfA8fcbEFC5\"\
          \n\n\n    try:\n        api_response = vm_api.get_nic_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"dbbd5d36-aeBe-ebF3-ad6b-b909A6aCbaDc\"\n    \n    extId := \"DDd64D7c-AEc1-EbAF-ABBa-cC7fEBAc53f8\"\
          \n\n\n    response, error := VmApiInstance.GetNicById(&vmExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.Nic)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/De7EcaFb-eAAC-eD0E-2BBe-FFF7Af3fED52/nics/649DEfe7-8BAe-AeFD-8AE0-0AbDfaF40ACe" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/ADdcb7EE-f7c8-2BAF-3ace-9edBDdECFBBf/nics/dbfDdddb-0858-9bEf-5AA8-AC25BC1DcFBE"
    put:
      tags:
      - Vm
      summary: Update the configuration for the provided network device
      description: Updates the configuration details for the provided network device.
      operationId: updateNicById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b466f871-a2cd-43cf-b254-5281735ebc8b
      - name: extId
        in: path
        description: A globally unique identifier of a VM NIC of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 59537387-8ed3-4dd5-8292-adcc5bee9353
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4ce74131-b160-4f57-b438-de5a5f3e2daf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
        required: true
      responses:
        "202":
          description: The request to update the configuration for the provided network
            device is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Virtual Machine NIC
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.Nic;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetNicApiResponse;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.config.UpdateNicApiResponse;\nimport org.springframework.web.client.RestClientException;\n\
          import java.util.HashMap;\nimport org.apache.http.HttpHeaders;\n\npublic\
          \ class JavaSdkSample {\n    public static void main(String[] args) {\n\
          \        // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        Nic nic = new Nic();\n\
          \n        // Nic object initializations here...\n        \n        String\
          \ vmExtId = \"5cCd6BAA-fC0d-4197-eC6E-fF56A906ecBf\";\n        \n      \
          \  String extId = \"dBE9AfDE-129D-Ae7f-Feca-6CbbBfb6BDe2\";\n\n        //\
          \ perform GET call\n        GetNicApiResponse getResponse = null;\n    \
          \    try {\n            getResponse = vmApi.getNicById(vmExtId, extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateNicApiResponse updateNicApiResponse\
          \ = vmApi.updateNicById(vmExtId, extId, nic, opts);\n            System.out.println(updateNicApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, Nic, GetNicApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ nic = new Nic();\n\n    // Nic object initializations here...\n\n    \n\
          \    let vmExtId = \"Fd9DeECd-f227-fdf1-f16B-Ec8e75be42c9\";\n    \n   \
          \ let extId = \"BCCAba9A-bde7-07a1-70ed-6D6f582614b2\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getNicById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.updateNicById(vmExtId, extId, nic, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    nic = ntnx_vmm_py_client.Nic()\n\
          \n    # Nic object initializations here...\n    \n    vm_ext_id = \"E04f9D96-aAf4-abDF-86BC-31DdA6CfBeE1\"\
          \n    \n    ext_id = \"DC7d9cFd-C6eF-b1aF-FBeA-7Ccd94b79ccC\"\n\n    try:\n\
          \        api_response = vm_api.get_nic_by_id(vmExtId=vm_ext_id, extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.update_nic_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, body=nic, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    nic := import1.NewNic()\n\
          \n    // Nic object initializations here...\n\n    \n    vmExtId := \"eAAdE6FA-2bEE-dcBC-db38-cF49e4CAd2f4\"\
          \n    \n    extId := \"aEDd8940-DCE8-EEBC-AeEa-F6213AabEcac\"\n\n    getResponse,\
          \ err := VmApiInstance.GetNicById(&vmExtId, &extId)\n    if err != nil {\n\
          \        fmt.Println(err)\n        return\n    }\n\n    // Extract E-Tag\
          \ Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\n  \
          \  args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.UpdateNicById(&vmExtId, &extId, nic,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/Ff7df579-9aeE-EABc-1CE6-e0ceefCA8bAC/nics/4ba81fbd-77cC-FeFB-eEDc-A51D8cCaAAB3" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/cA6b84fF-cb7B-D9aA-Ea4B-7AeD3EeDAaEF/nics/F6FFb63c-406d-bcfd-cebe-adCFFdEBB7f6"
    delete:
      tags:
      - Vm
      summary: Remove a network device from a VM
      description: Removes the specified network device from a virtual machine.
      operationId: deleteNicById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b9c0935b-c6ea-49ac-a121-52371dc86675
      - name: extId
        in: path
        description: A globally unique identifier of a VM NIC of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 141bec02-b24e-4fc8-bd27-5877faa1a235
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d250f5c6-ee61-4875-b0d1-f254a44da8d9
      responses:
        "202":
          description: The request to remove a network device from a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Virtual Machine NIC
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetNicApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeleteNicApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"DF244B02-d9fA-bB4F-2C46-cecf0CEbDee5\";\n        \n        String\
          \ extId = \"aD5305DB-cfc1-c3Cb-7dF1-Fb35aCD5cf81\";\n\n        // perform\
          \ GET call\n        GetNicApiResponse getResponse = null;\n        try {\n\
          \            getResponse = vmApi.getNicById(vmExtId, extId);\n        }\
          \ catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteNicApiResponse deleteNicApiResponse\
          \ = vmApi.deleteNicById(vmExtId, extId, opts);\n            System.out.println(deleteNicApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetNicApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"6bE8BAab-E027-C3eA-5e9D-7D9Fe3E222bc\";\n    \n\
          \    let extId = \"FC28eece-EF6b-fffA-0dd1-B2dAA9bD1ec7\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getNicById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deleteNicById(vmExtId, extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          3111DD0D-abAC-5E9a-cAEe-cdAAE8FfceED\"\n    \n    ext_id = \"E0AccD0A-d9bE-CbEF-daE0-43EfA688C6Df\"\
          \n\n    try:\n        api_response = vm_api.get_nic_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_nic_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"ace8FaF3-290F-22bC-DABc-F7DaAc6fca63\"\n    \n    extId := \"ad418cDC-F323-A2FC-1a3E-daDFDcDCCAcB\"\
          \n\n    getResponse, err := VmApiInstance.GetNicById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.DeleteNicById(&vmExtId, &extId, args)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/DAE5315d-DAAf-f595-Eec6-73Aa0BDCf1DA/nics/4c24Da9a-b4Be-BDdb-e08D-3cb6CE2ec49e" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/DF9AFcBc-Ac8E-7C32-f5af-FAf08aCe4dFA/nics/A94aBCaA-7CBe-2D6d-9df4-b44ABAAeAFcC"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/nics:
    get:
      tags:
      - Vm
      summary: List network devices attached to a VM
      description: Lists the network devices attached to a virtual machine.
      operationId: listNicsByVmId
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 30f0bb9d-a18c-4fa1-b479-964480595668
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - networkInfo/subnet/extId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of network devices attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine NIC
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListNicsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"C3C0b106-AbBD-BeDF-eeEE-E0dDF3FEeADa\";\n        \n        int page\
          \ = 0;\n        \n        int limit = 50;\n\n        try {\n           \
          \ ListNicsApiResponse listNicsApiResponse = vmApi.listNicsByVmId(vmExtId,\
          \ page, limit, null);\n            System.out.println(listNicsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"f35E32AC-cAEf-fcFC-7D23-eb63BFDbD5cf\";\n\n    //\
          \ Construct Optional Parameters\n    var opts = {};\n    opts[\"$page\"\
          ] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n\n\n\n\n    vmApi.listNicsByVmId(vmExtId, opts).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          BAAEA7fB-62Bf-B31b-dfAC-Ed9BfEAEF7c5\"\n    \n    page = 0\n    \n    limit\
          \ = 50\n\n\n    try:\n        api_response = vm_api.list_nics_by_vm_id(vmExtId=vm_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"fA1BD032-d30e-fcfe-CD8f-Bd1D7Cd2Eb3E\"\n    \n    page_ := 0\n  \
          \  \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListNicsByVmId(&vmExtId,\
          \ &page_, &limit_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Nic)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/eda9ACC7-FeC8-B85d-A1c4-80FAdE85cb6D/nics?$filter=string_sample_data&$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/Df6ACE4d-ED7d-C72B-E46d-d993f22BFfd6/nics?$filter=string_sample_data&$limit=50&$page=0"
    post:
      tags:
      - Vm
      summary: Create a network device for a VM
      description: Creates and attaches a network device to a virtual machine.
      operationId: createNic
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 97ab5dfe-4f25-45f4-b972-6976a0780feb
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 5fa47ccb-78ca-45a1-8a20-0eefa4dbbc8b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
        required: true
      responses:
        "202":
          description: The request to create a network device for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Virtual Machine NIC
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.Nic;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreateNicApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        Nic nic = new Nic();\n\
          \n        // Nic object initializations here...\n        \n        String\
          \ vmExtId = \"4c4FD1D0-53cF-fFcb-2eAc-DBFAaCbBC1Cc\";\n\n        /*\n  \
          \      Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n        The value that needs to be sent in the If-Match header\
          \ needs to be retrieved by performing a Read(Get) operation on the same\
          \ resource.\n        ETags can be retrieved by calling a static method of\
          \ ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CreateNicApiResponse createNicApiResponse\
          \ = vmApi.createNic(vmExtId, nic, opts);\n            System.out.println(createNicApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, Nic } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ nic = new Nic();\n\n    // Nic object initializations here...\n\n    \n\
          \    let vmExtId = \"FEF9ecF9-cA3e-FAfB-AAbc-25Fa15C6A98b\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.createNic(vmExtId,\
          \ nic, {\"If-Match\" : etagValue}).then(({data, response}) => {\n      \
          \  console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    nic = ntnx_vmm_py_client.Nic()\n\
          \n    # Nic object initializations here...\n    \n    vm_ext_id = \"1aCD1fD5-b1FA-Bc9e-C6bD-2dd7eaB2ce6f\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.create_nic(vmExtId=vm_ext_id,\
          \ body=nic, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    nic := import1.NewNic()\n\
          \n    // Nic object initializations here...\n\n    \n    vmExtId := \"DEedB919-7773-4f9B-cdde-98aFfCeFcACc\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.CreateNic(&vmExtId, nic,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/0EdC1abe-E7Ae-Ee0E-aC9c-3B40ff5a14c2/nics" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"backingInfo":{"model":"$UNKNOWN","macAddress":"string","isConnected":true,"numQueues":0,"$objectType":"vmm.v4.ahv.config.EmulatedNic"},"networkInfo":{"nicType":"$UNKNOWN","networkFunctionChain":{"extId":"string","$objectType":"vmm.v4.ahv.config.NetworkFunctionChainReference"},"networkFunctionNicType":"$UNKNOWN","subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"vlanMode":"$UNKNOWN","trunkedVlans":[0],"shouldAllowUnknownMacs":true,"ipv4Config":{"shouldAssignIp":true,"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"secondaryIpAddressList":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Config"},"ipv4Info":{"learnedIpAddresses":[{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"}],"$objectType":"vmm.v4.ahv.config.Ipv4Info"},"$objectType":"vmm.v4.ahv.config.NicNetworkInfo"},"$objectType":"vmm.v4.ahv.config.Nic"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/a7B2daEb-BcA2-BeaE-861A-FE51AeF2Ba49/nics"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/assign-ip:
    post:
      tags:
      - Vm
      summary: Assign an IP address to the provided network device
      description: Assigns a specific IP address to a network device attached to a
        managed network.
      operationId: assignIpById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1d3cb4d0-f85d-4eee-870a-e83fe83cd234
      - name: extId
        in: path
        description: A globally unique identifier of a VM NIC of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3d562797-923e-41f5-a2af-1ac420965f87
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: da4d4f0d-8365-4b68-9455-514823fb079a
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.AssignIpParams'
        required: true
      responses:
        "202":
          description: The request to assign an IP address to the provided network
            device is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/assign-ip\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/assign-ip\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/assign-ip\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Assign Virtual Machine NIC IP
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.AssignIpParams;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.AssignIpApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        AssignIpParams assignIpParams\
          \ = new AssignIpParams();\n\n        // AssignIpParams object initializations\
          \ here...\n        \n        String vmExtId = \"afeb0c2a-A3d7-7DBb-E443-9FCd3BEC6999\"\
          ;\n        \n        String extId = \"f22e0AC9-b5C9-d68c-42fc-5a8D7E6fc24F\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            AssignIpApiResponse assignIpApiResponse\
          \ = vmApi.assignIpById(vmExtId, extId, assignIpParams, opts);\n        \
          \    System.out.println(assignIpApiResponse.toString());\n\n        } catch\
          \ (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, AssignIpParams } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ assignIpParams = new AssignIpParams();\n\n    // AssignIpParams object\
          \ initializations here...\n\n    \n    let vmExtId = \"e99aaFcc-ecFf-C593-ee5f-b0B8FEea4ADE\"\
          ;\n    \n    let extId = \"Bc9eCC4d-8BFd-6dD4-E9F8-B6fFF2BE0bA5\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.assignIpById(vmExtId, extId, assignIpParams, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    assignIpParams = ntnx_vmm_py_client.AssignIpParams()\n\
          \n    # AssignIpParams object initializations here...\n    \n    vm_ext_id\
          \ = \"e4DbEefF-d0CD-aa2a-D43f-4eD7Ad1faDff\"\n    \n    ext_id = \"fdAbfFfE-5aDf-cd2d-Ef3a-3b3BBF6CFfe3\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.assign_ip_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, body=assignIpParams, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    assignIpParams\
          \ := import1.NewAssignIpParams()\n\n    // AssignIpParams object initializations\
          \ here...\n\n    \n    vmExtId := \"CdCB554c-4BCd-aFc7-aEaf-cdE80C79CFBc\"\
          \n    \n    extId := \"f95BcaD6-51BC-f2fD-B05b-7aFBaCaEb88E\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.AssignIpById(&vmExtId, &extId, assignIpParams,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/5CE78F0b-bC35-9E78-2C9d-0E7C6ad3FcBc/nics/DdbfAFA1-0eD6-4b98-EAbb-5FE3F81eb8CA/$actions/assign-ip" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"vmm.v4.ahv.config.AssignIpParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"vmm.v4.ahv.config.AssignIpParams"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/cdaBd2db-BcaC-8eAC-AeEd-2CAA6aF0EEFC/nics/dE36cf9F-cB9C-CAC6-6AFF-e31EDEF8A45d/$actions/assign-ip"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/release-ip:
    post:
      tags:
      - Vm
      summary: Release an assigned IP address from the provided network device
      description: Releases the IP address assignment from a network device attached
        to a managed network.
      operationId: releaseIpById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3d09cc8f-ecbe-4058-9d39-e84b50089c6a
      - name: extId
        in: path
        description: A globally unique identifier of a VM NIC of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d9f18ca8-8cc6-4c5e-9ba5-cbf8d835c101
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 04371f85-30d5-4676-8e73-0efd9311195d
      responses:
        "202":
          description: The request to release an assigned IP address from the provided
            network device is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/release-ip\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/release-ip\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/release-ip\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Release Virtual Machine NIC IP
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ReleaseIpApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"5e54aE1C-2d74-F3aF-2Ad9-Dd2EB4fDA2E2\";\n        \n        String\
          \ extId = \"7cBB0e35-AF5b-5Be8-30b2-0C26fBfA40Db\";\n\n        /*\n    \
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n        The value that needs to be sent in the If-Match header\
          \ needs to be retrieved by performing a Read(Get) operation on the same\
          \ resource.\n        ETags can be retrieved by calling a static method of\
          \ ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ReleaseIpApiResponse releaseIpApiResponse\
          \ = vmApi.releaseIpById(vmExtId, extId, opts);\n            System.out.println(releaseIpApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"7e6F0DaE-bf8e-3e4F-fbFb-7cFDe5D9aeAf\";\n    \n\
          \    let extId = \"Bc5cDAfD-BE5a-B3eC-9afa-fC4AfAeDFCBD\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.releaseIpById(vmExtId,\
          \ extId, {\"If-Match\" : etagValue}).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          fED2Fb6c-f6F2-57Af-16fe-71e1Ca1eC67C\"\n    \n    ext_id = \"FAA9E5dC-Dfad-fAa9-bbba-fcCa5dabCee7\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.release_ip_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"7a1FACa6-4C2B-B15C-86Ce-E6fc1bcee7ff\"\n    \n    extId := \"f4e4b0bc-aefb-2d3b-460D-1aaafcDF4Df6\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.ReleaseIpById(&vmExtId,\
          \ &extId, args)\n    if error != nil {\n        fmt.Println(error)\n   \
          \     return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/3eEE1cbC-C4b1-EA9D-aBfB-e114A38dFE5e/nics/dA7Eaec2-5bc9-AE6E-CEED-1EDCEDBEC4Cd/$actions/release-ip" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/E77beAF0-4Ee7-A41c-EBaE-Df1FAae7EDdC/nics/ad1Dc2aF-9a1e-3E1B-54Ff-E6e9BaC0BCa8/$actions/release-ip"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/migrate:
    post:
      tags:
      - Vm
      summary: Migrate a network device to another subnet
      description: Migrates a network device attached to a Virtual Machine to another
        subnet. This can be used to move network devices between VLAN and VPC subnets.
      operationId: migrateNicById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d7f7136a-72d1-49be-9a45-797c46c84a1c
      - name: extId
        in: path
        description: A globally unique identifier of a VM NIC of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 54576f50-1143-41bd-a9a6-382651e1e7a4
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 045d4ef6-2a71-4269-a3cb-ed810961f8db
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.MigrateNicConfig'
        required: true
      responses:
        "202":
          description: The request to migrate a network device to another subnet is
            accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/migrate\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/migrate\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/migrate\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Migrate Virtual Machine NIC
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Network Infra Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.MigrateNicType;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.SubnetReference;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.MigrateNicConfig;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.MigrateNicApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        MigrateNicConfig migrateNicConfig\
          \ = new MigrateNicConfig();\n\n        // MigrateNicConfig object initializations\
          \ here...\n        migrateNicConfig.setMigrateType(MigrateNicType.UNKNOWN);\
          \  // required field\n        migrateNicConfig.setSubnet(new SubnetReference());\
          \  // required field\n        \n        String vmExtId = \"E731dc8e-B840-45dD-3eAa-b9eCC01ccaA9\"\
          ;\n        \n        String extId = \"6FAEecDd-CfC7-fdA1-BB10-5bE3AcB7dbbC\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            MigrateNicApiResponse migrateNicApiResponse\
          \ = vmApi.migrateNicById(vmExtId, extId, migrateNicConfig, opts);\n    \
          \        System.out.println(migrateNicApiResponse.toString());\n\n     \
          \   } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, MigrateNicType, SubnetReference, MigrateNicConfig\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ migrateNicConfig = new MigrateNicConfig();\n\n    // MigrateNicConfig\
          \ object initializations here...\n    migrateNicConfig.setMigrateType(MigrateNicType.UNKNOWN);\
          \  // required field\n    migrateNicConfig.setSubnet(new SubnetReference());\
          \  // required field\n\n    \n    let vmExtId = \"Edd3adcc-b66B-DB2C-fccf-bED3Ec2473bb\"\
          ;\n    \n    let extId = \"4eF4BC77-aAbd-Ae95-d0ad-7DCDf54deBBD\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.migrateNicById(vmExtId, extId, migrateNicConfig, {\"\
          If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    migrateNicConfig =\
          \ ntnx_vmm_py_client.MigrateNicConfig()\n\n    # MigrateNicConfig object\
          \ initializations here...\n    migrateNicConfig.migrate_type = ntnx_vmm_py_client.MigrateNicType._UNKNOWN\
          \  # required field\n    migrateNicConfig.subnet = ntnx_vmm_py_client.SubnetReference()\
          \  # required field\n    \n    vm_ext_id = \"8272C3A4-E49E-D61E-DcCe-3aaa94EbF9c3\"\
          \n    \n    ext_id = \"eAF4bcaC-7C7A-Ba3F-f0Ba-cffa7DcBEBaF\"\n\n    \"\"\
          \"\n    Some Create, Update, and Delete operations generally require an\
          \ If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.migrate_nic_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, body=migrateNicConfig, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    migrateNicConfig\
          \ := import1.NewMigrateNicConfig()\n\n    // MigrateNicConfig object initializations\
          \ here...\n\n    \n    vmExtId := \"9f5dBcEf-e9f0-fBc9-e3fE-c3ddfFc1d3c9\"\
          \n    \n    extId := \"dF5fcAD7-dC1B-D1cc-7eEE-bf9f83B0AE4d\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.MigrateNicById(&vmExtId, &extId, migrateNicConfig,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/eFbc76Eb-63a4-62fb-Aee3-DAeF59fdeFfb/nics/cfdCbe8c-B66f-BF6d-d3eC-Cf1cd0ACefda/$actions/migrate" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"migrateType":"$UNKNOWN","ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"vmm.v4.ahv.config.MigrateNicConfig"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"subnet":{"extId":"string","$objectType":"vmm.v4.ahv.config.SubnetReference"},"migrateType":"$UNKNOWN","ipAddress":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"vmm.v4.ahv.config.MigrateNicConfig"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/ECF6fBDf-aFcE-dD4c-DA0b-b6dbBea1b5Da/nics/DFC5Bf83-f1ff-4e4C-b5cE-9A88E88a97B3/$actions/migrate"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/assign-owner:
    post:
      tags:
      - Vm
      summary: Assign owner of a VM
      description: Assign the owner of a virtual machine.
      operationId: assignVmOwner
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7a435200-ea71-4e7e-9b29-8817e4678ad6
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4996f409-f6fc-4dae-9963-3ddca949f843
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.OwnershipInfo'
        required: true
      responses:
        "202":
          description: The request to assign an owner of a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/assign-owner\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/assign-owner\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/assign-owner\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Assign Virtual Machine Owner
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.OwnershipInfo;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.AssignVmOwnerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        OwnershipInfo ownershipInfo\
          \ = new OwnershipInfo();\n\n        // OwnershipInfo object initializations\
          \ here...\n        \n        String extId = \"ab614BCa-4b7f-A9de-DEbb-b3D2eCE3eA6D\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            AssignVmOwnerApiResponse\
          \ assignVmOwnerApiResponse = vmApi.assignVmOwner(extId, ownershipInfo, opts);\n\
          \            System.out.println(assignVmOwnerApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, OwnershipInfo } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ ownershipInfo = new OwnershipInfo();\n\n    // OwnershipInfo object initializations\
          \ here...\n\n    \n    let extId = \"c2f47C52-0ba2-CaC8-Beac-ECCc7DcaaC0f\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.assignVmOwner(extId, ownershipInfo, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    ownershipInfo = ntnx_vmm_py_client.OwnershipInfo()\n\
          \n    # OwnershipInfo object initializations here...\n    \n    ext_id =\
          \ \"E3CE8578-cCCa-CFaf-e84d-5db3FBdAC0dA\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = vm_api.assign_vm_owner(extId=ext_id, body=ownershipInfo,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    ownershipInfo\
          \ := import1.NewOwnershipInfo()\n\n    // OwnershipInfo object initializations\
          \ here...\n\n    \n    extId := \"1fAAE12e-6CDF-ed8b-Afc8-03aCA8c5A7eB\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.AssignVmOwner(&extId, ownershipInfo,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/33efaf60-fcf7-DCE7-c76d-f00Ff87aAce2/$actions/assign-owner" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"owner":{"extId":"string","$objectType":"vmm.v4.ahv.config.OwnerReference"},"$objectType":"vmm.v4.ahv.config.OwnershipInfo"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/bBAEe9F7-FF3b-63B6-aDe3-cC8eCEcFBe6F/$actions/assign-owner"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}:
    get:
      tags:
      - Vm
      summary: Get configuration details for the provided PCIe device
      description: Retrieves configuration details for the provided PCIe device attached
        to a virtual machine.
      operationId: getPcieDeviceById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b58412f6-104c-4c1b-b521-dad864bfe11e
      - name: extId
        in: path
        description: Globally unique identifier of a PCIe device  of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 5ec4656d-eaa3-4450-b3b9-63748cff3873
      responses:
        "200":
          description: Returns the requested configuration details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDevice'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine PCIe Device
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetPcieDeviceApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"0fcBbefE-DcD8-eC6e-deb8-bA36Cd7EaEF5\";\n        \n        String\
          \ extId = \"62Adaabc-c1bf-93e3-1b86-DEbb6c1AC2fe\";\n\n        try {\n \
          \           GetPcieDeviceApiResponse getPcieDeviceApiResponse = vmApi.getPcieDeviceById(vmExtId,\
          \ extId);\n            System.out.println(getPcieDeviceApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"afafad84-AaAC-cdCf-efa3-266A0e2adaAB\";\n    \n\
          \    let extId = \"49F2dbfA-F03d-9709-3CCF-BA53Fe8CfbdA\";\n\n\n\n\n\n \
          \   vmApi.getPcieDeviceById(vmExtId, extId).then(({data, response}) => {\n\
          \        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          9EAeBCe2-F2BB-8aff-4d31-DFedD1A8C9FF\"\n    \n    ext_id = \"985BACfC-DB3c-Ca3C-EAD2-fCbAB62D8981\"\
          \n\n\n    try:\n        api_response = vm_api.get_pcie_device_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"5eee5E4c-FAE4-Aade-AFA5-41daaFd377fe\"\n    \n    extId := \"B49da4Db-0A4e-eAeF-3aB4-aCa2CDd6c7a9\"\
          \n\n\n    response, error := VmApiInstance.GetPcieDeviceById(&vmExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.PcieDevice)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/fDc61aA6-faD9-C9Cb-eCDF-CC9BeF42e31d/pcie-devices/1bbfa1Fc-cA9B-4e1f-6ecF-30AD9bb1Fd6E" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/D4Fd61ba-abd6-B714-3D3a-2AdEEf2d877C/pcie-devices/fcc8a3DE-de9a-b64A-D55D-aE93D29dFdCB"
    delete:
      tags:
      - Vm
      summary: Remove a PCIe device from a VM
      description: Removes the specified PCIe device from a virtual machine.
      operationId: deletePcieDeviceById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: fb7a0659-d447-46f1-863d-c37f8fc027cc
      - name: extId
        in: path
        description: Globally unique identifier of a PCIe device  of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 0d072d51-d74c-4c84-9582-e822efe2dab4
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 850c110c-f1a9-4f39-b484-cf77449bbee9
      responses:
        "202":
          description: The request to remove a PCIe device from a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Virtual Machine PCIe Device
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetPcieDeviceApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeletePcieDeviceApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"AeaCf3de-dB8c-8f7B-BAF3-D23E2c1BaCCd\";\n        \n        String\
          \ extId = \"e6149E0F-aE2C-ACbC-73eb-cafb347B2bDc\";\n\n        // perform\
          \ GET call\n        GetPcieDeviceApiResponse getResponse = null;\n     \
          \   try {\n            getResponse = vmApi.getPcieDeviceById(vmExtId, extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeletePcieDeviceApiResponse deletePcieDeviceApiResponse\
          \ = vmApi.deletePcieDeviceById(vmExtId, extId, opts);\n            System.out.println(deletePcieDeviceApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetPcieDeviceApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"EDEDA9ED-2Ca4-0170-8Bff-DcbdBde09E8A\";\n    \n\
          \    let extId = \"3DBCF5A0-1A7d-86FE-6820-25a1C5E5Dabe\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getPcieDeviceById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deletePcieDeviceById(vmExtId, extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          185E10Fd-eacE-E2bc-BaEF-Be341647bD0C\"\n    \n    ext_id = \"5C8A4FEc-EC6c-b3eD-b1eF-9Fcd77B12fFB\"\
          \n\n    try:\n        api_response = vm_api.get_pcie_device_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_pcie_device_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"DbFAA0De-acfA-AAFD-efFc-C83BA052f77E\"\n    \n    extId := \"DeA70Fa2-0c61-5c1E-Ef21-ebB3a6fD6AB5\"\
          \n\n    getResponse, err := VmApiInstance.GetPcieDeviceById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.DeletePcieDeviceById(&vmExtId, &extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/ad2Cd285-FCd1-Ab8e-f4cb-DbED8cD0cbee/pcie-devices/7cfAbf8A-e58c-A8A2-a6Da-A85ECAaEdA3b" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/FeeFFCDE-AFC6-cFfC-2952-da2cfa8febb0/pcie-devices/20367aA5-94BB-cBAB-B8fF-f74aeba4DFb3"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices:
    get:
      tags:
      - Vm
      summary: List PCIe devices attached to a VM
      description: Lists all the PCIe devices attached to a virtual machine.
      operationId: listPcieDevicesByVmId
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3bfdefa1-b849-44ff-bcf6-f971d6b1884c
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Returns a list of PCIe devices attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDevice'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine PCIe Device
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListPcieDevicesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"7BfD06b3-4528-0c11-9c70-e4DBcbF6BEAC\";\n        \n        int page\
          \ = 0;\n        \n        int limit = 50;\n\n        try {\n           \
          \ ListPcieDevicesApiResponse listPcieDevicesApiResponse = vmApi.listPcieDevicesByVmId(vmExtId,\
          \ page, limit);\n            System.out.println(listPcieDevicesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"aa6Eec5E-8353-AEd7-0EeD-Ad62e35ef1Bb\";\n\n    //\
          \ Construct Optional Parameters\n    var opts = {};\n    opts[\"$page\"\
          ] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    vmApi.listPcieDevicesByVmId(vmExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          91edaBEa-C63a-f1db-3CC6-Ca6bF8dbF4a1\"\n    \n    page = 0\n    \n    limit\
          \ = 50\n\n\n    try:\n        api_response = vm_api.list_pcie_devices_by_vm_id(vmExtId=vm_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"b08bDDD2-07D2-0Ea5-C68b-a3c53Fa38f89\"\n    \n    page_ := 0\n  \
          \  \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListPcieDevicesByVmId(&vmExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.PcieDevice)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/1ca57DD9-FECF-fEeD-7d13-9a8102A9EE61/pcie-devices?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/db6bD40F-0abd-Ece9-0cEb-C6E5e1f7ee4a/pcie-devices?$limit=50&$page=0"
    post:
      tags:
      - Vm
      summary: Create a PCIe device for a VM
      description: Creates and attaches a PCIe device to a virtual machine.
      operationId: createPcieDevice
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a623ce69-57b7-491d-a2ed-17eb5052c9a9
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 5fad99a1-1201-49cd-9e95-3a68c4a0a262
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDevice'
        required: true
      responses:
        "202":
          description: The request to create a PCIe device for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Virtual Machine PCIe Device
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.PcieDevice;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreatePcieDeviceApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        PcieDevice pcieDevice\
          \ = new PcieDevice();\n\n        // PcieDevice object initializations here...\n\
          \        \n        String vmExtId = \"Aca0d2aB-c54d-EAA2-3Fc9-C979ACFDbDA3\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CreatePcieDeviceApiResponse\
          \ createPcieDeviceApiResponse = vmApi.createPcieDevice(vmExtId, pcieDevice,\
          \ opts);\n            System.out.println(createPcieDeviceApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, PcieDevice } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ pcieDevice = new PcieDevice();\n\n    // PcieDevice object initializations\
          \ here...\n\n    \n    let vmExtId = \"BAbb5Fc6-daB8-eCfE-baAa-83c7b329cfDb\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.createPcieDevice(vmExtId, pcieDevice, {\"If-Match\" :\
          \ etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    pcieDevice = ntnx_vmm_py_client.PcieDevice()\n\
          \n    # PcieDevice object initializations here...\n    \n    vm_ext_id =\
          \ \"3Ea3DECd-A55b-ee96-BcD6-CEc8DA2fcA3a\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = vm_api.create_pcie_device(vmExtId=vm_ext_id,\
          \ body=pcieDevice, if_match=etag_value)\n        print(api_response)\n \
          \   except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    pcieDevice :=\
          \ import1.NewPcieDevice()\n\n    // PcieDevice object initializations here...\n\
          \n    \n    vmExtId := \"062Bcd01-fb6a-DdAB-FC8c-DdbA1C64E97A\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.CreatePcieDevice(&vmExtId, pcieDevice,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/0DdbdAcb-DCBe-dCeE-fBF0-0A3d0E8EC8BF/pcie-devices" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"assignedDeviceInfo":{"device":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDeviceInfo"},"backingInfo":{"deviceExtId":"string","$objectType":"vmm.v4.ahv.config.PcieDeviceReference"},"$objectType":"vmm.v4.ahv.config.PcieDevice"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/71ECC8c4-CddF-8BCd-12fc-bb0428C0Ac3F/pcie-devices"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-on:
    post:
      tags:
      - Vm
      summary: Turn on a VM
      description: Turns a Virtual Machine on.
      operationId: powerOnVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a4edc882-3638-46f5-ba42-2823998f8455
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 1c953aaa-782b-4cef-b730-d71684736d68
      responses:
        "202":
          description: The request to turn on a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-on\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-on\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-on\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Power On Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.PowerOnVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"4B6a998F-bBCe-81c4-7cDF-3B8ddDDB6Ad3\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            PowerOnVmApiResponse powerOnVmApiResponse\
          \ = vmApi.powerOnVm(extId, opts);\n            System.out.println(powerOnVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"BDfdDcAe-A94f-8cdc-dDC7-82B6ca2d9fcf\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.powerOnVm(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"Ab59aAFd-14DD-feBb-52cD-ebA8A2cee175\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.power_on_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"Fe0DAca8-f8B1-11B0-edbC-7c3a1dBefDc5\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.PowerOnVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/87D764EB-1d0c-71Bd-fb03-cCe1abaFeeeB/$actions/power-on" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/aBceafAc-836C-4fF6-1bb3-93A214A46187/$actions/power-on"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-cycle:
    post:
      tags:
      - Vm
      summary: Force a power cycle for a VM
      description: "Force a power-cycle for a virtual machine. This operation is equivalent\
        \ to requesting a VM power-off followed by the VM power-on. Power cycling\
        \ a VM is slower than resetting it, but it will be creating a fresh instance\
        \ of the virtual machine. When resetting, the same instance is restarted within\
        \ the context of the running VM instance."
      operationId: powerCycleVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 5f9dd849-fe69-46f4-b863-a654f9c2a975
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 32142ba4-5bec-4135-9a75-f704fe7cfcf5
      responses:
        "202":
          description: The request to force a power cycle for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-cycle\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-cycle\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-cycle\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Power Cycle Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.PowerCycleVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"de35b04c-7a1d-FEcc-b0FD-CD5feEbBbfaa\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            PowerCycleVmApiResponse\
          \ powerCycleVmApiResponse = vmApi.powerCycleVm(extId, opts);\n         \
          \   System.out.println(powerCycleVmApiResponse.toString());\n\n        }\
          \ catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"Fbea86fc-6145-EEfb-2A0f-53CCa14ecCab\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.powerCycleVm(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"bc9182A6-BF60-e999-FBd3-5fcfc4eB2bAD\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.power_cycle_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"0D817e49-eEa3-f0FA-d36e-AFEc88df6F8e\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.PowerCycleVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/4abFcff2-8cFC-Ff6b-8Bef-E4dF4fe0d4Fd/$actions/power-cycle" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/Aa0ABdfB-C6Da-2abf-cCb6-DCE9748576F1/$actions/power-cycle"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-off:
    post:
      tags:
      - Vm
      summary: Force power off a VM
      description: "Forceably shuts down a virtual machine which is equivalent to\
        \ removing the power cable. Note: The forced shutdown may result in data loss\
        \ if any operations are in progress during the shutdown."
      operationId: powerOffVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f05103a2-7192-4399-a78d-cdfe8bb99538
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: cd3a02ff-1ede-4038-b944-7cbe7e42d51b
      responses:
        "202":
          description: The request to force power off a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-off\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-off\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-off\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Power Off Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.PowerOffVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"B2F4DAe4-f6ac-BC76-eBB4-dcBabAa3dcFe\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            PowerOffVmApiResponse powerOffVmApiResponse\
          \ = vmApi.powerOffVm(extId, opts);\n            System.out.println(powerOffVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"E1Ab4d0A-9f13-CfB5-85Ee-7c4bFDFac96B\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.powerOffVm(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"37b2BDEF-fcd4-F29E-ff2f-8DF96Df6BA5C\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.power_off_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"d6f00F6f-c0B5-1efb-aBFF-33beDAff4FCf\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.PowerOffVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/f1BDD8e5-BD37-efe0-Cdef-AC2CDbE6BeEe/$actions/power-off" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/0dBBAaDb-1F9a-b1eD-12aA-ECeAEaEaF082/$actions/power-off"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/reset:
    post:
      tags:
      - Vm
      summary: Reset a VM immediately
      description: "Force reset of a Virtual Machine, without waiting for the guest\
        \ VM to shutdown itself. Resetting a VM is faster than power-cycle as the\
        \ reset occurs within the context of the running virtual machine instance\
        \ rather than creating a fresh instance."
      operationId: resetVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7a8fd0a5-c6d9-4cf8-a3c9-ee3b5e2e4431
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 26d9783b-0314-4fef-b704-7389e0970f4a
      responses:
        "202":
          description: The request to reset a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/reset\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/reset\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/reset\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Reset Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ResetVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"f4de02Cb-a7AB-54fc-a52a-ca0fde1ccbd3\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ResetVmApiResponse resetVmApiResponse\
          \ = vmApi.resetVm(extId, opts);\n            System.out.println(resetVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"B7e2FBbb-DA4c-3EBc-2f8d-CCFAA9eDD6D7\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.resetVm(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"7CbBECb2-0b6e-e7bC-0FFB-6ebDACaB9E9f\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.reset_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"85BB9BfE-e3d5-4AdB-D5F4-BfDBCdbdB6EE\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.ResetVm(&extId, args)\n    if error !=\
          \ nil {\n        fmt.Println(error)\n        return\n    }\n    data, _\
          \ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/1aB05CBf-E3c8-F666-Aed0-FCeFCDDf0dDB/$actions/reset" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/a2b8FabC-ef49-DDB4-eA3D-46fbF61cbEae/$actions/reset"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/shutdown:
    post:
      tags:
      - Vm
      summary: Shutdown the VM using ACPI
      description: Collaborative shutdown of a Virtual Machine through the ACPI support
        in the operating system.
      operationId: shutdownVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: fc23c811-5385-47e1-9696-d9f271063922
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: fc1ebe94-afd3-4b94-bad1-73556e21709b
      responses:
        "202":
          description: The request to shutdown the VM using ACPI is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: ACPI Shutdown Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ShutdownVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"8BAFd7bd-F10f-5b19-3a0f-280FadE9d7AB\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ShutdownVmApiResponse shutdownVmApiResponse\
          \ = vmApi.shutdownVm(extId, opts);\n            System.out.println(shutdownVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"B62De33c-b6aA-1DfD-DcAe-A0FcFbb0700E\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.shutdownVm(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"2497e75b-6cAA-Ac1F-5cEc-FCBAca98aEcf\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.shutdown_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"1E54FD0d-f102-9D3e-c6d4-b7eEeEB2796d\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.ShutdownVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/Fc4F19eb-dD40-fcDf-CDdF-7fBAd250bBfb/$actions/shutdown" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/5fd2EaE3-aFfA-514b-5D1F-B8C6AFAcb0D4/$actions/shutdown"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown:
    post:
      tags:
      - Vm
      summary: Shutdown the VM using NGT
      description: "Collaborative shutdown of a Virtual Machine, requesting Nutanix\
        \ Guest Tools to trigger a shutdown from within the VM."
      operationId: shutdownGuestVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7e346739-def7-4b6c-a268-d0447b3c8942
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a0a305e0-371d-4042-9f74-2c41f91b4495
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestPowerOptions'
        required: true
      responses:
        "202":
          description: The request to shutdown the VM using NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Guest Shutdown Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestPowerOptions;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.ShutdownVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestPowerOptions guestPowerOptions\
          \ = new GuestPowerOptions();\n\n        // GuestPowerOptions object initializations\
          \ here...\n        \n        String extId = \"fBeb59Fe-79D3-47ED-0Bd2-a7EafDe69C51\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ShutdownVmApiResponse shutdownVmApiResponse\
          \ = vmApi.shutdownGuestVm(extId, guestPowerOptions, opts);\n           \
          \ System.out.println(shutdownVmApiResponse.toString());\n\n        } catch\
          \ (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestPowerOptions } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestPowerOptions = new GuestPowerOptions();\n\n    // GuestPowerOptions\
          \ object initializations here...\n\n    \n    let extId = \"dcAaEB0f-F0AF-EAEb-9Cdd-515bBeD0Fa48\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.shutdownGuestVm(extId, guestPowerOptions, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestPowerOptions =\
          \ ntnx_vmm_py_client.GuestPowerOptions()\n\n    # GuestPowerOptions object\
          \ initializations here...\n    \n    ext_id = \"C68CcDf6-5cDb-1234-cB69-E98F61eaD64c\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.shutdown_guest_vm(extId=ext_id,\
          \ body=guestPowerOptions, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestPowerOptions\
          \ := import1.NewGuestPowerOptions()\n\n    // GuestPowerOptions object initializations\
          \ here...\n\n    \n    extId := \"ba886C95-a1Eb-0aDF-8ed5-CddEEadDEcD1\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.ShutdownGuestVm(&extId,\
          \ guestPowerOptions, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/9aa8dE53-Effc-7Cec-Ac1f-A5fCEdFEf740/$actions/guest-shutdown" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"guestPowerStateTransitionConfig":{"shouldEnableScriptExec":true,"shouldFailOnScriptFailure":true,"$objectType":"vmm.v4.ahv.config.GuestPowerStateTransitionConfig"},"$objectType":"vmm.v4.ahv.config.GuestPowerOptions"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"guestPowerStateTransitionConfig":{"shouldEnableScriptExec":true,"shouldFailOnScriptFailure":true,"$objectType":"vmm.v4.ahv.config.GuestPowerStateTransitionConfig"},"$objectType":"vmm.v4.ahv.config.GuestPowerOptions"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/bAEcA8BA-FAA2-BC94-bF9b-eaECBC142F9d/$actions/guest-shutdown"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/reboot:
    post:
      tags:
      - Vm
      summary: Reboot a VM using ACPI
      description: Collaborative reboot of a Virtual Machine through the ACPI support
        in the operating system.
      operationId: rebootVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a8cbd936-be70-40c6-b642-497174c51e4f
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d7abe121-59c7-47df-8569-7239bc11a90d
      responses:
        "202":
          description: The request to reboot a VM using ACPI is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: ACPI Reboot Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.RebootVmApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String extId\
          \ = \"8a8Fbfd9-e1b9-1851-9aCd-82b6E59EbC2F\";\n\n        /*\n        Some\
          \ Create, Update, and Delete operations generally require an If-Match header\
          \ with a value to be passed in order to protect against concurrent updates.\n\
          \        The value that needs to be sent in the If-Match header needs to\
          \ be retrieved by performing a Read(Get) operation on the same resource.\n\
          \        ETags can be retrieved by calling a static method of ApiClient\
          \ as below:\n        String eTag = ApiClient.getEtag(getResponse);\n   \
          \     HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            RebootVmApiResponse rebootVmApiResponse\
          \ = vmApi.rebootVm(extId, opts);\n            System.out.println(rebootVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let extId = \"B1bb9CbF-5E1E-F7e5-9BaA-eE54BDE2cEE8\";\n\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    let etagValue = ApiClient.getEtag(data);\n    */\n    vmApi.rebootVm(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    ext_id = \"B3B49Ecf-DaBb-ddBE-dF3A-F3BAf8ce9dFd\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.reboot_vm(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    extId\
          \ := \"C5eb2abB-4c01-C2ac-6bAc-DbAEAE6b0B61\"\n\n    /*\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.RebootVm(&extId, args)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/AfFFAa1a-8ffa-4AcE-eD9C-F5Dee3Bdd29D/$actions/reboot" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/1C22aFce-Ff91-fcce-fC7f-AfCC7E6BFa26/$actions/reboot"
  /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot:
    post:
      tags:
      - Vm
      summary: Restart the VM using NGT
      description: "Collaborative reboot of a Virtual Machine, requesting Nutanix\
        \ Guest Tools to trigger a reboot from within the VM."
      operationId: rebootGuestVm
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e59454e0-3ae9-488f-b715-21cf2cc0c072
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2add4a68-942c-480a-8857-7861c12371c5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestPowerOptions'
        required: true
      responses:
        "202":
          description: The request to restart the VM using NGT is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Guest Reboot Virtual Machine
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GuestPowerOptions;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.RebootVmApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        GuestPowerOptions guestPowerOptions\
          \ = new GuestPowerOptions();\n\n        // GuestPowerOptions object initializations\
          \ here...\n        \n        String extId = \"ee7ABf76-AC4b-DCCB-6dE5-9baD0CCCa24C\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            RebootVmApiResponse rebootVmApiResponse\
          \ = vmApi.rebootGuestVm(extId, guestPowerOptions, opts);\n            System.out.println(rebootVmApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GuestPowerOptions } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ guestPowerOptions = new GuestPowerOptions();\n\n    // GuestPowerOptions\
          \ object initializations here...\n\n    \n    let extId = \"8cFAdb96-FdB5-EfaB-c80E-Ad4b270973cB\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.rebootGuestVm(extId, guestPowerOptions, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    guestPowerOptions =\
          \ ntnx_vmm_py_client.GuestPowerOptions()\n\n    # GuestPowerOptions object\
          \ initializations here...\n    \n    ext_id = \"b3BbD487-1Ed3-E3eB-CD9b-F1DDbCfD8baE\"\
          \n\n    \"\"\"\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = vm_api.reboot_guest_vm(extId=ext_id,\
          \ body=guestPowerOptions, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    guestPowerOptions\
          \ := import1.NewGuestPowerOptions()\n\n    // GuestPowerOptions object initializations\
          \ here...\n\n    \n    extId := \"aAE10F9d-fF7a-bFfC-AC72-EEeeeadf4FEa\"\
          \n\n    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \    */\n\n    response, error := VmApiInstance.RebootGuestVm(&extId, guestPowerOptions,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/67Bb3Df7-089c-fEA1-beaE-6ea5De7Fe15B/$actions/guest-reboot" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"guestPowerStateTransitionConfig":{"shouldEnableScriptExec":true,"shouldFailOnScriptFailure":true,"$objectType":"vmm.v4.ahv.config.GuestPowerStateTransitionConfig"},"$objectType":"vmm.v4.ahv.config.GuestPowerOptions"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"guestPowerStateTransitionConfig":{"shouldEnableScriptExec":true,"shouldFailOnScriptFailure":true,"$objectType":"vmm.v4.ahv.config.GuestPowerStateTransitionConfig"},"$objectType":"vmm.v4.ahv.config.GuestPowerOptions"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/1A42Ece9-C2E1-BE7A-EBfd-E8f3F7e1Baab/$actions/guest-reboot"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}:
    get:
      tags:
      - Vm
      summary: Get configuration details for the provided serial port
      description: Retrieves configuration details for the provided serial port attached
        to a virtual machine.
      operationId: getSerialPortById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: daca454e-e7a0-4040-8246-e5e48f43ed50
      - name: extId
        in: path
        description: The globally unique identifier of a serial port of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f4d11e7d-10f2-47f5-af83-f76184f74fc3
      responses:
        "200":
          description: Return the configuration details for the provided serial port
            attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Serial Port
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 20
        timeUnit: seconds
      - type: Large
        count: 25
        timeUnit: seconds
      - type: XLarge
        count: 25
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetSerialPortApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"83dF5d67-DAC4-EE5D-A4cE-a2DdcebEAEdE\";\n        \n        String\
          \ extId = \"4EE7eab5-65FF-6a1A-ADA0-BEbfDDC99D2A\";\n\n        try {\n \
          \           GetSerialPortApiResponse getSerialPortApiResponse = vmApi.getSerialPortById(vmExtId,\
          \ extId);\n            System.out.println(getSerialPortApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"edE2862e-eC65-1af9-9EB7-feFfecACF12e\";\n    \n\
          \    let extId = \"BC6B4Fa1-080d-Ed6e-6Abc-D2BdBaEbdF5C\";\n\n\n\n\n\n \
          \   vmApi.getSerialPortById(vmExtId, extId).then(({data, response}) => {\n\
          \        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          dA3dF31f-0877-AEB4-0Bba-75dcBB6932fF\"\n    \n    ext_id = \"cbDeB81b-EFa2-9Ccd-E1aF-fDeb8deDDced\"\
          \n\n\n    try:\n        api_response = vm_api.get_serial_port_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"22d1D77d-feb9-f07b-632e-8DdcEA9CbC4C\"\n    \n    extId := \"BAfc83EE-6fa9-deC5-FB25-E2FE5faE476D\"\
          \n\n\n    response, error := VmApiInstance.GetSerialPortById(&vmExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.SerialPort)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/bFbeA075-4aF9-CA5c-e9eb-b6F44c96086b/serial-ports/cDDe8a53-FeBc-66BC-Eaaa-0BFd1cf0D3fd" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/d1b11a7b-E735-aeBF-EAC6-3cfeE7f1d21f/serial-ports/65De6Ac5-C4a6-fcC0-EcBE-Ec4EadCEAbC2"
    put:
      tags:
      - Vm
      summary: Update the configuration for the provided serial port
      description: Updates the configuration details for the provided serial port.
      operationId: updateSerialPortById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7ef7eb25-e231-4e8c-bde1-d5411dbc8d6a
      - name: extId
        in: path
        description: The globally unique identifier of a serial port of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f9016ccd-3f03-4837-a456-71870ab22e4d
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a7cd51c2-8876-43bb-b42f-20ef0ea91d61
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
        required: true
      responses:
        "202":
          description: The request to update the configuration for the provided serial
            port is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Virtual Machine Serial Port
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.SerialPort;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetSerialPortApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.UpdateSerialPortApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        SerialPort serialPort\
          \ = new SerialPort();\n\n        // SerialPort object initializations here...\n\
          \        \n        String vmExtId = \"2b7De3E2-EdfD-6ea8-6ea5-e0933ee13ecF\"\
          ;\n        \n        String extId = \"C2d8cdeB-F56c-6E7a-EDD4-bbEBEFdFeaef\"\
          ;\n\n        // perform GET call\n        GetSerialPortApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = vmApi.getSerialPortById(vmExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateSerialPortApiResponse updateSerialPortApiResponse\
          \ = vmApi.updateSerialPortById(vmExtId, extId, serialPort, opts);\n    \
          \        System.out.println(updateSerialPortApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, SerialPort, GetSerialPortApiResponse\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ serialPort = new SerialPort();\n\n    // SerialPort object initializations\
          \ here...\n\n    \n    let vmExtId = \"8Eae5bA1-a2Eb-A544-ED54-81cDBBeacB16\"\
          ;\n    \n    let extId = \"efCB2aeD-cf0e-3D0E-1A2b-fCA7Ffc6Cfd6\";\n\n\n\
          \    // Perform Get call\n    vmApi.getSerialPortById(vmExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        vmApi.updateSerialPortById(vmExtId,\
          \ extId, serialPort, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    serialPort = ntnx_vmm_py_client.SerialPort()\n\
          \n    # SerialPort object initializations here...\n    \n    vm_ext_id =\
          \ \"BA5a8CDc-B3e0-B7CC-7B4a-ABeF1dcBDB47\"\n    \n    ext_id = \"92e29bE3-Debb-864B-3d3C-ceaf8EEafAb5\"\
          \n\n    try:\n        api_response = vm_api.get_serial_port_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.update_serial_port_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, body=serialPort, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    serialPort :=\
          \ import1.NewSerialPort()\n\n    // SerialPort object initializations here...\n\
          \n    \n    vmExtId := \"4D3F1DBF-FfAC-B422-BF6a-cdaeA1bfB04d\"\n    \n\
          \    extId := \"C6dFB975-aCeB-CBBD-daFc-C4fBcAfAeb4B\"\n\n    getResponse,\
          \ err := VmApiInstance.GetSerialPortById(&vmExtId, &extId)\n    if err !=\
          \ nil {\n        fmt.Println(err)\n        return\n    }\n\n    // Extract\
          \ E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.UpdateSerialPortById(&vmExtId, &extId,\
          \ serialPort, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/F2A9d510-d7DB-F4f4-e7ca-Acbc4B2AcCBa/serial-ports/eADcb6e3-12fD-1ad7-E9DF-715aa1F011Da" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/a79E4c2A-9Bca-cbB1-E1EE-EeEfE763cEdC/serial-ports/8eb96F6E-fFFf-Cb3c-dEFc-ab8EeDbfCeF2"
    delete:
      tags:
      - Vm
      summary: Remove a serial port from a VM
      description: Removes the specified serial port from a virtual machine.
      operationId: deleteSerialPortById
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b3877f98-0fbc-429a-bef9-7e3b369e79f7
      - name: extId
        in: path
        description: The globally unique identifier of a serial port of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c13ab658-53f2-480d-ab53-baa3d4d9d308
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 0ad1a017-2e7f-4e46-bd0e-1ee813cbc8f9
      responses:
        "202":
          description: The request to remove a serial port from a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Virtual Machine Serial Port
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 10
        timeUnit: seconds
      - type: Large
        count: 15
        timeUnit: seconds
      - type: XLarge
        count: 15
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.GetSerialPortApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.DeleteSerialPortApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"8B44bca8-Ac1A-4383-0F7f-67A7852B45E0\";\n        \n        String\
          \ extId = \"5A09Ca92-0D0e-5caB-Dcb0-F798a60E95EA\";\n\n        // perform\
          \ GET call\n        GetSerialPortApiResponse getResponse = null;\n     \
          \   try {\n            getResponse = vmApi.getSerialPortById(vmExtId, extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteSerialPortApiResponse deleteSerialPortApiResponse\
          \ = vmApi.deleteSerialPortById(vmExtId, extId, opts);\n            System.out.println(deleteSerialPortApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, GetSerialPortApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"aa5DBbB2-D5AF-b152-8cb4-cabD626E9cd4\";\n    \n\
          \    let extId = \"E9D09EFf-E26A-8D5f-AdC0-2bfaD9bAEe01\";\n\n\n    // Perform\
          \ Get call\n    vmApi.getSerialPortById(vmExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        // Extract E-Tag Header\n        let etagValue = ApiClient.getEtag(data);\n\
          \n        vmApi.deleteSerialPortById(vmExtId, extId, {\"If-Match\" : etagValue}).then(({data,\
          \ response}) => {\n            console.log(`API returned the following status\
          \ code: ${response.status}`);\n            console.log(data.getData());\n\
          \        }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          EEFdaBbf-9dcb-a0Ba-dAC6-a80F43AE5CDa\"\n    \n    ext_id = \"BFBA653a-27Db-0f0e-32CE-A5cEd9ee4Ada\"\
          \n\n    try:\n        api_response = vm_api.get_serial_port_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_api.delete_serial_port_by_id(vmExtId=vm_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"AB2CdFDD-Fc3A-d32B-fc6C-e4c59aAbBa2C\"\n    \n    extId := \"f4DaA0aA-7Fef-5D03-dFDE-f6fAEbe3Fb9f\"\
          \n\n    getResponse, err := VmApiInstance.GetSerialPortById(&vmExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmApiInstance.DeleteSerialPortById(&vmExtId, &extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/f8A2d7F1-48dA-fEC9-6fF6-Bd75DE9a5BbD/serial-ports/0DBA9bbD-cAbA-DB7D-c93f-008D5C872A4D" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/9e0bC5C4-dbA0-F0c7-DB33-f95B1A7fdFd3/serial-ports/e5eddcAE-8aff-BA21-5da2-9Ddeddd3dbFF"
  /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports:
    get:
      tags:
      - Vm
      summary: List serial ports attached to a VM
      description: Lists the serial ports attached to a virtual machine.
      operationId: listSerialPortsByVmId
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7db78dfe-31d5-4f1a-9f4f-121d3f8e60e9
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Returns the list of serial ports attached to a VM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Virtual Machine Serial Port
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Storage Admin
        - Network Infra Admin
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 3
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 7
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.ListSerialPortsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        \n        String vmExtId\
          \ = \"fBA1BA69-F3Ee-f79C-ABbE-8E3efE53Cbbc\";\n        \n        int page\
          \ = 0;\n        \n        int limit = 50;\n\n        try {\n           \
          \ ListSerialPortsApiResponse listSerialPortsApiResponse = vmApi.listSerialPortsByVmId(vmExtId,\
          \ page, limit);\n            System.out.println(listSerialPortsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n\n   \
          \ \n    let vmExtId = \"FbFB79BD-eEc9-1BCE-b702-D9a7bEfadAb2\";\n\n    //\
          \ Construct Optional Parameters\n    var opts = {};\n    opts[\"$page\"\
          ] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    vmApi.listSerialPortsByVmId(vmExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    \n    vm_ext_id = \"\
          b2eDFeA0-F0b2-F3b3-9eFc-ECfE5aa6Fee9\"\n    \n    page = 0\n    \n    limit\
          \ = 50\n\n\n    try:\n        api_response = vm_api.list_serial_ports_by_vm_id(vmExtId=vm_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    \n    vmExtId\
          \ := \"F4cFbe2E-dFEF-3Beb-0ac3-Bff9FFB06ACe\"\n    \n    page_ := 0\n  \
          \  \n    limit_ := 50\n\n\n    response, error := VmApiInstance.ListSerialPortsByVmId(&vmExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.SerialPort)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/fCACf7D9-eeDE-fC38-E4BE-eAfadfDe3E66/serial-ports?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/DC8EBFD7-9f3D-cABd-C4FA-5CddF89F461E/serial-ports?$limit=50&$page=0"
    post:
      tags:
      - Vm
      summary: Create a serial port for a VM
      description: Creates and attaches a serial port device to a virtual machine.
      operationId: createSerialPort
      parameters:
      - name: vmExtId
        in: path
        description: A globally unique identifier of a VM of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 9341bf75-bb5d-42db-845d-cafbd03b9472
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 42a2f126-f4ab-4844-940e-18241055e6de
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
        required: true
      responses:
        "202":
          description: The request to create a serial port for a VM is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Virtual Machine Serial Port
        roleList:
        - Account Owner
        - Administrator
        - User
        - Consumer
        - Developer
        - Operator
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmApi;\nimport com.nutanix.dp1.vmm.vmm.v4.ahv.config.SerialPort;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.config.CreateSerialPortApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmApi vmApi = new VmApi(apiClient);\n\n        SerialPort serialPort\
          \ = new SerialPort();\n\n        // SerialPort object initializations here...\n\
          \        \n        String vmExtId = \"4Ae2a5Cf-46c3-e72e-F8Ea-F7bcFBf7FCCD\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            CreateSerialPortApiResponse\
          \ createSerialPortApiResponse = vmApi.createSerialPort(vmExtId, serialPort,\
          \ opts);\n            System.out.println(createSerialPortApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmApi, SerialPort } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmApi = new VmApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ serialPort = new SerialPort();\n\n    // SerialPort object initializations\
          \ here...\n\n    \n    let vmExtId = \"54fd3fDf-7C96-8Fce-DEcc-a8b9dD0DfdC0\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmApi.createSerialPort(vmExtId, serialPort, {\"If-Match\" :\
          \ etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_api\
          \ = ntnx_vmm_py_client.VmApi(api_client=client)\n    serialPort = ntnx_vmm_py_client.SerialPort()\n\
          \n    # SerialPort object initializations here...\n    \n    vm_ext_id =\
          \ \"FaFDCeFe-CDA0-ACA6-FAea-A6Ca89CA9fdc\"\n\n    \"\"\"\n    Some Create,\
          \ Update, and Delete operations generally require an If-Match header with\
          \ a value to be passed in order to protect against concurrent updates.\n\
          \    The value that needs to be sent in the If-Match header needs to be\
          \ retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = vm_api.create_serial_port(vmExtId=vm_ext_id,\
          \ body=serialPort, if_match=etag_value)\n        print(api_response)\n \
          \   except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmApiInstance\
          \ *api.VmApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    VmApiInstance = api.NewVmApi(ApiClientInstance)\n\n    serialPort :=\
          \ import1.NewSerialPort()\n\n    // SerialPort object initializations here...\n\
          \n    \n    vmExtId := \"50d1A0fA-BD09-93A2-bABE-C1deFaFdbfF2\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmApiInstance.CreateSerialPort(&vmExtId, serialPort,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/b3dE0fB3-5A1b-DbBc-1B86-d4eCD43403fb/serial-ports" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isConnected":true,"index":0,"$objectType":"vmm.v4.ahv.config.SerialPort"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/config/vms/aed3eBC9-93Ef-5dDd-2BdC-1E20fafa1Efd/serial-ports"
  /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}:
    get:
      tags:
      - VmAntiAffinityPolicies
      summary: Get VM-VM anti-affinity policy based on the provided external identifier
      description: Fetches the VM-VM anti-affinity policy of the provided VM-VM anti-affinity
        policy external identifier.
      operationId: getVmAntiAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM-VM anti-affinity policy
          of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 9e9a1daa-6198-4e09-a452-6cc8c695a15e
      responses:
        "200":
          description: Returns the requested VM-VM anti-affinity policy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicy'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 15
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.GetVmAntiAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"faa6FB6F-4aF4-b9ff-5bdF-ADF088C2b55d\"\
          ;\n\n        try {\n            GetVmAntiAffinityPolicyApiResponse getVmAntiAffinityPolicyApiResponse\
          \ = vmAntiAffinityPoliciesApi.getVmAntiAffinityPolicyById(extId);\n    \
          \        System.out.println(getVmAntiAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmAntiAffinityPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"b482CBCc-80FD-9eE8-9550-6CAE6Fca7F3d\"\
          ;\n\n\n\n\n\n    vmAntiAffinityPoliciesApi.getVmAntiAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"C5EEebdf-AEf4-E80d-A11e-dC26C56be6ff\"\n\n\n    try:\n\
          \        api_response = vm_anti_affinity_policies_api.get_vm_anti_affinity_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"51E21dba-CCfD-Cccf-AcB4-2C62B9cbD6Fc\"\n\n\n    response,\
          \ error := VmAntiAffinityPoliciesApiInstance.GetVmAntiAffinityPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.VmAntiAffinityPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/3BF3faEf-B02E-aF5e-a7cc-D38d19FAEdFe" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/BBcbFFe2-9d8b-9DaE-74C8-acCccAE1Ea59"
    put:
      tags:
      - VmAntiAffinityPolicies
      summary: Update VM-VM anti-affinity policy
      description: Updates the requested VM-VM anti-affinity policy.
      operationId: updateVmAntiAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM-VM anti-affinity policy
          of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 72e8ef08-e860-4e4e-a5b2-78531fd6d290
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 75006b8f-b77c-4c76-bd96-5980392ee4b9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicy'
        required: true
      responses:
        "202":
          description: The request to update the VM-VM anti-affinity policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.VmAntiAffinityPolicy;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.GetVmAntiAffinityPolicyApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.UpdateVmAntiAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        VmAntiAffinityPolicy vmAntiAffinityPolicy = new VmAntiAffinityPolicy();\n\
          \n        // VmAntiAffinityPolicy object initializations here...\n     \
          \   \n        String extId = \"BAA21d61-ebEC-068E-BBfa-dfaBE13F8ABC\";\n\
          \n        // perform GET call\n        GetVmAntiAffinityPolicyApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = vmAntiAffinityPoliciesApi.getVmAntiAffinityPolicyById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateVmAntiAffinityPolicyApiResponse\
          \ updateVmAntiAffinityPolicyApiResponse = vmAntiAffinityPoliciesApi.updateVmAntiAffinityPolicyById(extId,\
          \ vmAntiAffinityPolicy, opts);\n            System.out.println(updateVmAntiAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmAntiAffinityPoliciesApi, VmAntiAffinityPolicy,\
          \ GetVmAntiAffinityPolicyApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n    let vmAntiAffinityPolicy = new VmAntiAffinityPolicy();\n\
          \n    // VmAntiAffinityPolicy object initializations here...\n\n    \n \
          \   let extId = \"F9dCCEfb-C56E-CfA2-aBFb-98dD3BEB7fFC\";\n\n\n    // Perform\
          \ Get call\n    vmAntiAffinityPoliciesApi.getVmAntiAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        vmAntiAffinityPoliciesApi.updateVmAntiAffinityPolicyById(extId,\
          \ vmAntiAffinityPolicy, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  vmAntiAffinityPolicy = ntnx_vmm_py_client.VmAntiAffinityPolicy()\n\n\
          \    # VmAntiAffinityPolicy object initializations here...\n    \n    ext_id\
          \ = \"6eBF51DF-b3fD-faCC-83B3-9c9cFb26dEE5\"\n\n    try:\n        api_response\
          \ = vm_anti_affinity_policies_api.get_vm_anti_affinity_policy_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_anti_affinity_policies_api.update_vm_anti_affinity_policy_by_id(extId=ext_id,\
          \ body=vmAntiAffinityPolicy, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    vmAntiAffinityPolicy := import1.NewVmAntiAffinityPolicy()\n\n    //\
          \ VmAntiAffinityPolicy object initializations here...\n\n    \n    extId\
          \ := \"eCfe9Ab0-4DF1-a8d9-Fa9F-B2eeC4e82DBA\"\n\n    getResponse, err :=\
          \ VmAntiAffinityPoliciesApiInstance.GetVmAntiAffinityPolicyById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmAntiAffinityPoliciesApiInstance.UpdateVmAntiAffinityPolicyById(&extId,\
          \ vmAntiAffinityPolicy, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/dcfFb1dE-DeF9-cadf-9CFE-ceCf590fbC7F" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestAntiAffinitypolicy","description":"Descriptionforyourantiaffinitypolicy","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"updatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numCompliantVms":0,"numNonCompliantVms":0,"numPendingVms":0,"$objectType":"vmm.v4.ahv.policies.VmAntiAffinityPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestAntiAffinitypolicy","description":"Descriptionforyourantiaffinitypolicy","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"updatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numCompliantVms":0,"numNonCompliantVms":0,"numPendingVms":0,"$objectType":"vmm.v4.ahv.policies.VmAntiAffinityPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/DaAFEBcB-fdCa-FbEb-ddBd-AD2BbbAEfD95"
    delete:
      tags:
      - VmAntiAffinityPolicies
      summary: Delete VM-VM anti-affinity policy
      description: Deletes the requested VM-VM anti-affinity policy.
      operationId: deleteVmAntiAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: A globally unique identifier of a VM-VM anti-affinity policy
          of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c6fa9997-913e-40f1-b8e5-3cc043f8c1ba
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 9f94955d-a986-4ba8-8eb6-a47472ce9784
      responses:
        "202":
          description: The request to delete the policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.GetVmAntiAffinityPolicyApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.DeleteVmAntiAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"bfBfAEbF-a2bD-AeCE-F45a-0De9AC8a320D\"\
          ;\n\n        // perform GET call\n        GetVmAntiAffinityPolicyApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = vmAntiAffinityPoliciesApi.getVmAntiAffinityPolicyById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteVmAntiAffinityPolicyApiResponse\
          \ deleteVmAntiAffinityPolicyApiResponse = vmAntiAffinityPoliciesApi.deleteVmAntiAffinityPolicyById(extId,\
          \ opts);\n            System.out.println(deleteVmAntiAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmAntiAffinityPoliciesApi, GetVmAntiAffinityPolicyApiResponse\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"38ACAB3b-A6cd-EDCc-7b17-986bC4CfecFF\"\
          ;\n\n\n    // Perform Get call\n    vmAntiAffinityPoliciesApi.getVmAntiAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        vmAntiAffinityPoliciesApi.deleteVmAntiAffinityPolicyById(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n           \
          \ console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"2d5Fccfc-3eF7-fDAb-a6FC-cc307A8BAeF2\"\n\n    try:\n\
          \        api_response = vm_anti_affinity_policies_api.get_vm_anti_affinity_policy_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_anti_affinity_policies_api.delete_vm_anti_affinity_policy_by_id(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"66f1cac9-f7e8-DefF-9C3A-FeDd71d42FD6\"\n\n    getResponse,\
          \ err := VmAntiAffinityPoliciesApiInstance.GetVmAntiAffinityPolicyById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmAntiAffinityPoliciesApiInstance.DeleteVmAntiAffinityPolicyById(&extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/d998AFCd-87Cb-377c-DE4a-0adc7A39A332" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/F2d1fFcb-8Aab-eF5e-B1f4-BFa2fC1EBb8c"
  /vmm/v4.0/ahv/policies/vm-anti-affinity-policies:
    get:
      tags:
      - VmAntiAffinityPolicies
      summary: List VM-VM anti-affinity policies
      description: List VM-VM anti-affinity policies.
      operationId: listVmAntiAffinityPolicies
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - name
          - updateTime
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of VM-VM anti-affinity policies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicy'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.ListVmAntiAffinityPoliciesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVmAntiAffinityPoliciesApiResponse listVmAntiAffinityPoliciesApiResponse\
          \ = vmAntiAffinityPoliciesApi.listVmAntiAffinityPolicies(page, limit, null,\
          \ null);\n            System.out.println(listVmAntiAffinityPoliciesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, VmAntiAffinityPoliciesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";




              vmAntiAffinityPoliciesApi.listVmAntiAffinityPolicies(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = vm_anti_affinity_policies_api.list_vm_anti_affinity_policies(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VmAntiAffinityPoliciesApiInstance.ListVmAntiAffinityPolicies(&page_,\
          \ &limit_, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VmAntiAffinityPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0"
    post:
      tags:
      - VmAntiAffinityPolicies
      summary: Create VM-VM anti-affinity policy
      description: Creates a VM-VM anti-affinity policy.
      operationId: createVmAntiAffinityPolicy
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c8a2f55d-7b2a-4b32-85d9-6b79411fea3d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicy'
        required: true
      responses:
        "202":
          description: The request to create the VM-VM anti-affinity policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.VmAntiAffinityPolicy;
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.CreateVmAntiAffinityPolicyApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);

                  VmAntiAffinityPolicy vmAntiAffinityPolicy = new VmAntiAffinityPolicy();

                  // VmAntiAffinityPolicy object initializations here...

                  try {
                      CreateVmAntiAffinityPolicyApiResponse createVmAntiAffinityPolicyApiResponse = vmAntiAffinityPoliciesApi.createVmAntiAffinityPolicy(vmAntiAffinityPolicy);
                      System.out.println(createVmAntiAffinityPolicyApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, VmAntiAffinityPoliciesApi, VmAntiAffinityPolicy } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);

          function sample() {
              let vmAntiAffinityPolicy = new VmAntiAffinityPolicy();

              // VmAntiAffinityPolicy object initializations here...






              vmAntiAffinityPoliciesApi.createVmAntiAffinityPolicy(vmAntiAffinityPolicy).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              vm_anti_affinity_policies_api = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)
              vmAntiAffinityPolicy = ntnx_vmm_py_client.VmAntiAffinityPolicy()

              # VmAntiAffinityPolicy object initializations here...


              try:
                  api_response = vm_anti_affinity_policies_api.create_vm_anti_affinity_policy(body=vmAntiAffinityPolicy)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              VmAntiAffinityPoliciesApiInstance *api.VmAntiAffinityPoliciesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)

              vmAntiAffinityPolicy := import1.NewVmAntiAffinityPolicy()

              // VmAntiAffinityPolicy object initializations here...



              response, error := VmAntiAffinityPoliciesApiInstance.CreateVmAntiAffinityPolicy(vmAntiAffinityPolicy)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestAntiAffinitypolicy","description":"Descriptionforyourantiaffinitypolicy","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"updatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numCompliantVms":0,"numNonCompliantVms":0,"numPendingVms":0,"$objectType":"vmm.v4.ahv.policies.VmAntiAffinityPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestAntiAffinitypolicy","description":"Descriptionforyourantiaffinitypolicy","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"updatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"categories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numCompliantVms":0,"numNonCompliantVms":0,"numPendingVms":0,"$objectType":"vmm.v4.ahv.policies.VmAntiAffinityPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies"
  /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{vmAntiAffinityPolicyExtId}/vm-compliance-states:
    get:
      tags:
      - VmAntiAffinityPolicies
      summary: List compliance states of VMs in the VM-VM anti-affinity policy based
        on the provided external identifier
      description: Lists compliance states of VMs in the VM-VM anti-affinity policy
        of the provided VM-VM anti-affinity policy external identifier.
      operationId: listVmAntiAffinityPolicyVmComplianceStates
      parameters:
      - name: vmAntiAffinityPolicyExtId
        in: path
        description: A globally unique identifier of a VM-VM anti-affinity policy
          of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 334ece79-3c7f-4e6a-b617-4ebdc24b1f7c
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Returns a list of requested complaince states of VMs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicyVmComplianceState'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{vmAntiAffinityPolicyExtId}/vm-compliance-states\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{vmAntiAffinityPolicyExtId}/vm-compliance-states\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{vmAntiAffinityPolicyExtId}/vm-compliance-states\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Anti Affinity Policy VM Compliance States
        roleList:
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.ListVmAntiAffinityPolicyVmComplianceStatesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        \n        String vmAntiAffinityPolicyExtId = \"f62dD4cf-85F8-47c1-5CaC-DCba39DD36aF\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVmAntiAffinityPolicyVmComplianceStatesApiResponse\
          \ listVmAntiAffinityPolicyVmComplianceStatesApiResponse = vmAntiAffinityPoliciesApi.listVmAntiAffinityPolicyVmComplianceStates(vmAntiAffinityPolicyExtId,\
          \ page, limit);\n            System.out.println(listVmAntiAffinityPolicyVmComplianceStatesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmAntiAffinityPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let vmAntiAffinityPolicyExtId = \"1B2A952B-fdCC-DAfB-fBdc-67F975cFD8B3\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    vmAntiAffinityPoliciesApi.listVmAntiAffinityPolicyVmComplianceStates(vmAntiAffinityPolicyExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  \n    vm_anti_affinity_policy_ext_id = \"FBb2FCd4-DD5b-CD4A-3ADC-C4FEabD0a0aB\"\
          \n    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = vm_anti_affinity_policies_api.list_vm_anti_affinity_policy_vm_compliance_states(vmAntiAffinityPolicyExtId=vm_anti_affinity_policy_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    vmAntiAffinityPolicyExtId := \"CBf6ed1e-FC05-FA0C-6a99-FBEfeEEaFb5d\"\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VmAntiAffinityPoliciesApiInstance.ListVmAntiAffinityPolicyVmComplianceStates(&vmAntiAffinityPolicyExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VmAntiAffinityPolicyVmComplianceState)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/6c1F7AD6-64eC-bA1c-CB89-7eBFa66FCd14/vm-compliance-states?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-anti-affinity-policies/fFE83cef-2daB-aeC9-bad2-3AD2d5BDbef8/vm-compliance-states?$limit=50&$page=0"
  /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies:
    get:
      tags:
      - VmAntiAffinityPolicies
      summary: List legacy VM-VM anti-affinity policies
      description: List legacy VM-VM anti-affinity policies.
      operationId: listLegacyVmAntiAffinityPolicies
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - extId
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of legacy VM-VM anti-affinity policies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.policies.LegacyVmAntiAffinityPolicy'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Legacy VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.ListLegacyVmAntiAffinityPoliciesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListLegacyVmAntiAffinityPoliciesApiResponse\
          \ listLegacyVmAntiAffinityPoliciesApiResponse = vmAntiAffinityPoliciesApi.listLegacyVmAntiAffinityPolicies(page,\
          \ limit, null);\n            System.out.println(listLegacyVmAntiAffinityPoliciesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, VmAntiAffinityPoliciesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";




              vmAntiAffinityPoliciesApi.listLegacyVmAntiAffinityPolicies(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = vm_anti_affinity_policies_api.list_legacy_vm_anti_affinity_policies(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VmAntiAffinityPoliciesApiInstance.ListLegacyVmAntiAffinityPolicies(&page_,\
          \ &limit_, nil)\n    if error != nil {\n        fmt.Println(error)\n   \
          \     return\n    }\n    data, _ := response.GetData().([]import1.LegacyVmAntiAffinityPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies?$filter=string_sample_data&$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies?$filter=string_sample_data&$limit=50&$page=0"
  /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/{extId}:
    delete:
      tags:
      - VmAntiAffinityPolicies
      summary: Delete legacy VM-VM anti-affinity policy
      description: Deletes the legacy VM-VM anti-affinity policy.
      operationId: deleteLegacyVmAntiAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: External ID of the legacy VM-VM Anti-Affinity policy of type
          UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 5554480b-ee3c-45e7-9c62-ea206a1ac1f6
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 08279042-b9a8-41cb-b3f6-897149e3a8c1
      responses:
        "202":
          description: The request to delete a legacy VM-VM anti-affinity policy is
            accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Legacy VM Anti Affinity Policy
        roleList:
        - Prism Admin
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Virtual Machine Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 5
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmAntiAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.DeleteLegacyVmAntiAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmAntiAffinityPoliciesApi vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"AbfDE6aE-aC0f-A5df-CFC8-7EdD5eCA701b\"\
          ;\n\n        try {\n            DeleteLegacyVmAntiAffinityPolicyApiResponse\
          \ deleteLegacyVmAntiAffinityPolicyApiResponse = vmAntiAffinityPoliciesApi.deleteLegacyVmAntiAffinityPolicyById(extId);\n\
          \            System.out.println(deleteLegacyVmAntiAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmAntiAffinityPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmAntiAffinityPoliciesApi = new VmAntiAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"DDD4eae8-CcCE-aB0b-baeF-CEcA9Baa3BEa\"\
          ;\n\n\n\n\n\n    vmAntiAffinityPoliciesApi.deleteLegacyVmAntiAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_anti_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmAntiAffinityPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"1D74dfaC-C06b-Da2e-A1dB-9a5586FFD0bc\"\n\n\n    try:\n\
          \        api_response = vm_anti_affinity_policies_api.delete_legacy_vm_anti_affinity_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmAntiAffinityPoliciesApiInstance\
          \ *api.VmAntiAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmAntiAffinityPoliciesApiInstance = api.NewVmAntiAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"5EeC3fC5-6fbA-63C1-ce6C-D4F3af9B99FD\"\n\n\n    response,\
          \ error := VmAntiAffinityPoliciesApiInstance.DeleteLegacyVmAntiAffinityPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/Ee585eD8-99c0-3bAA-fD09-85EfeABcdCFd" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/fece050f-Feef-dBfb-cdbF-d214c9Bc0a6b"
  /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}:
    get:
      tags:
      - VmHostAffinityPolicies
      summary: Get the VM-host affinity policy details
      description: Fetches the VM-host affinity policy configuration for the provided
        VM-host affinity policy external identifier.
      operationId: getVmHostAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: The external ID (UUID) of the VM-host affinity policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d3b1d386-91a3-452f-b128-7a77930de794
      responses:
        "200":
          description: Returns the VM-host affinity policy details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicy'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Host Affinity Policy
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: Small
        count: 15
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.GetVmHostAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"DCDDddeD-Bce3-C3Ab-C6d2-aACa1Cd0Cd44\"\
          ;\n\n        try {\n            GetVmHostAffinityPolicyApiResponse getVmHostAffinityPolicyApiResponse\
          \ = vmHostAffinityPoliciesApi.getVmHostAffinityPolicyById(extId);\n    \
          \        System.out.println(getVmHostAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmHostAffinityPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"B1E8DFdf-CB87-EbeB-aFbF-fbcdc19Ed8C9\"\
          ;\n\n\n\n\n\n    vmHostAffinityPoliciesApi.getVmHostAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_host_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"C12bEE9A-1DBE-C6D1-348E-7ABABDEDcdf4\"\n\n\n    try:\n\
          \        api_response = vm_host_affinity_policies_api.get_vm_host_affinity_policy_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmHostAffinityPoliciesApiInstance\
          \ *api.VmHostAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"E00aF4cf-Bc7F-E243-aE4a-eAf856a5Ac7f\"\n\n\n    response,\
          \ error := VmHostAffinityPoliciesApiInstance.GetVmHostAffinityPolicyById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.VmHostAffinityPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/fBA2acA2-237a-CeBA-fd0F-7AC5e2B0Eb8f" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/b98FCD3F-FDdb-9D3D-59bB-C325D41AEcAF"
    put:
      tags:
      - VmHostAffinityPolicies
      summary: Update the VM-host affinity policy
      description: Updates the configuration of the VM-host affinity policy with the
        given external identifier.
      operationId: updateVmHostAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: The external ID (UUID) of the VM-host affinity policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6d728595-ccf7-4d0d-9dea-ccded7723158
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: b30732f7-a089-4dfd-a7ac-64a2e33ee59b
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicy'
        required: true
      responses:
        "202":
          description: The request to update the VM-host affinity policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update VM Host Affinity Policy
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.VmHostAffinityPolicy;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.GetVmHostAffinityPolicyApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.UpdateVmHostAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);\n\
          \n        VmHostAffinityPolicy vmHostAffinityPolicy = new VmHostAffinityPolicy();\n\
          \n        // VmHostAffinityPolicy object initializations here...\n     \
          \   \n        String extId = \"d2CcAFaD-A60d-bccF-9E2c-FCaDc06DE72A\";\n\
          \n        // perform GET call\n        GetVmHostAffinityPolicyApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = vmHostAffinityPoliciesApi.getVmHostAffinityPolicyById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateVmHostAffinityPolicyApiResponse\
          \ updateVmHostAffinityPolicyApiResponse = vmHostAffinityPoliciesApi.updateVmHostAffinityPolicyById(extId,\
          \ vmHostAffinityPolicy, opts);\n            System.out.println(updateVmHostAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmHostAffinityPoliciesApi, VmHostAffinityPolicy,\
          \ GetVmHostAffinityPolicyApiResponse } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n    let vmHostAffinityPolicy = new VmHostAffinityPolicy();\n\
          \n    // VmHostAffinityPolicy object initializations here...\n\n    \n \
          \   let extId = \"d24A8f1e-0bDF-CAdb-eace-9Cdb1b2A05ED\";\n\n\n    // Perform\
          \ Get call\n    vmHostAffinityPoliciesApi.getVmHostAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        vmHostAffinityPoliciesApi.updateVmHostAffinityPolicyById(extId,\
          \ vmHostAffinityPolicy, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_host_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)\n  \
          \  vmHostAffinityPolicy = ntnx_vmm_py_client.VmHostAffinityPolicy()\n\n\
          \    # VmHostAffinityPolicy object initializations here...\n    \n    ext_id\
          \ = \"2eec3Db1-CEfF-28FF-64da-f7ce4aBD5e6A\"\n\n    try:\n        api_response\
          \ = vm_host_affinity_policies_api.get_vm_host_affinity_policy_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_host_affinity_policies_api.update_vm_host_affinity_policy_by_id(extId=ext_id,\
          \ body=vmHostAffinityPolicy, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmHostAffinityPoliciesApiInstance\
          \ *api.VmHostAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)\n\
          \n    vmHostAffinityPolicy := import1.NewVmHostAffinityPolicy()\n\n    //\
          \ VmHostAffinityPolicy object initializations here...\n\n    \n    extId\
          \ := \"BdC08cdC-50E9-bd1a-6EbC-70B94aaACC7C\"\n\n    getResponse, err :=\
          \ VmHostAffinityPoliciesApiInstance.GetVmHostAffinityPolicyById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmHostAffinityPoliciesApiInstance.UpdateVmHostAffinityPolicyById(&extId,\
          \ vmHostAffinityPolicy, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/DBD5aC1C-D9ae-Adeb-5D42-BbD8Cb3DaDB0" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestHostAffinitypolicy","description":"Descriptionforyourhostaffinitypolicy.","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"lastUpdatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"vmCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"hostCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numVms":0,"numHosts":0,"numCompliantVms":0,"numNonCompliantVms":0,"$objectType":"vmm.v4.ahv.policies.VmHostAffinityPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestHostAffinitypolicy","description":"Descriptionforyourhostaffinitypolicy.","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"lastUpdatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"vmCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"hostCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numVms":0,"numHosts":0,"numCompliantVms":0,"numNonCompliantVms":0,"$objectType":"vmm.v4.ahv.policies.VmHostAffinityPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/0BBbBCCC-85A2-bBc7-3Bfd-cb36eac7Ee48"
    delete:
      tags:
      - VmHostAffinityPolicies
      summary: Delete a VM-host affinity policy
      description: Deletes the VM-host affinity policy with the given external identifier.
      operationId: deleteVmHostAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: The external ID (UUID) of the VM-host affinity policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 84a82953-980f-4270-a0c8-40237e3148a1
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 8927965b-8987-4269-9511-4e355a224486
      responses:
        "202":
          description: The request to delete the specific VM-host affinity policy
            is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete VM Host Affinity Policy
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.GetVmHostAffinityPolicyApiResponse;\n\
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.DeleteVmHostAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"dDF59fa2-7a4C-Af0E-7fbF-BdAC3Ce9aBdd\"\
          ;\n\n        // perform GET call\n        GetVmHostAffinityPolicyApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = vmHostAffinityPoliciesApi.getVmHostAffinityPolicyById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteVmHostAffinityPolicyApiResponse\
          \ deleteVmHostAffinityPolicyApiResponse = vmHostAffinityPoliciesApi.deleteVmHostAffinityPolicyById(extId,\
          \ opts);\n            System.out.println(deleteVmHostAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmHostAffinityPoliciesApi, GetVmHostAffinityPolicyApiResponse\
          \ } from \"@nutanix-api/vmm-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"6cEcB77a-A021-8EDF-fcCF-5EfC9ad3fcAE\"\
          ;\n\n\n    // Perform Get call\n    vmHostAffinityPoliciesApi.getVmHostAffinityPolicyById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        vmHostAffinityPoliciesApi.deleteVmHostAffinityPolicyById(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n           \
          \ console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_host_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"ec8AD6D7-aea2-bCcA-b188-8E0F0a1cbDeC\"\n\n    try:\n\
          \        api_response = vm_host_affinity_policies_api.get_vm_host_affinity_policy_by_id(extId=ext_id)\n\
          \    except ntnx_vmm_py_client.rest.ApiException as e:\n        print(e)\n\
          \    # Extract E-Tag Header\n    etag_value = ntnx_vmm_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = vm_host_affinity_policies_api.delete_vm_host_affinity_policy_by_id(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmHostAffinityPoliciesApiInstance\
          \ *api.VmHostAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"7d9DCc6E-0aCD-6644-cA91-acaDb9fECcdd\"\n\n    getResponse,\
          \ err := VmHostAffinityPoliciesApiInstance.GetVmHostAffinityPolicyById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := VmHostAffinityPoliciesApiInstance.DeleteVmHostAffinityPolicyById(&extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/DEd5Caaf-43Ab-c2d5-4f2a-dAd5DF3cBddd" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/DaaD1FDf-Cf3C-3B37-Ff5c-2DCf9DBB6E3E"
  /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}/$actions/re-enforce:
    post:
      tags:
      - VmHostAffinityPolicies
      summary: Re-enforce the VM-host affinity policy
      description: Re-enforces the VM-host affinity policy on all the VMs associated
        with the policy.
      operationId: reEnforceVmHostAffinityPolicyById
      parameters:
      - name: extId
        in: path
        description: The external ID (UUID) of the VM-host affinity policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3932bf9e-c72c-4d8d-b582-2da24fa4b833
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: fff736ce-56f6-4d07-a4b3-9e79e2284fca
      responses:
        "202":
          description: The request to re-enforce the VM-host affinity policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}/$actions/re-enforce\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}/$actions/re-enforce\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}/$actions/re-enforce\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Reenforce VM Host Affinity Policy
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.ReEnforceVmHostAffinityPolicyApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);\n\
          \n        \n        String extId = \"5B56AFb2-df4E-1325-10a6-465CCef6840D\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            ReEnforceVmHostAffinityPolicyApiResponse\
          \ reEnforceVmHostAffinityPolicyApiResponse = vmHostAffinityPoliciesApi.reEnforceVmHostAffinityPolicyById(extId,\
          \ opts);\n            System.out.println(reEnforceVmHostAffinityPolicyApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmHostAffinityPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"78Cfb4C5-aCdF-6FeD-6ff6-57dFDdbB07Bb\"\
          ;\n\n\n    /*\n    Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n    The value that needs to be sent in the\
          \ If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n    ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    vmHostAffinityPoliciesApi.reEnforceVmHostAffinityPolicyById(extId,\
          \ {\"If-Match\" : etagValue}).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_host_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)\n  \
          \  \n    ext_id = \"FBAafbaa-1247-3aF8-EABA-b3DC7bddbDDF\"\n\n    \"\"\"\
          \n    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etag_value = ApiClient.get_etag(get_api_response)\n    \"\"\"\n\n \
          \   try:\n        api_response = vm_host_affinity_policies_api.re_enforce_vm_host_affinity_policy_by_id(extId=ext_id,\
          \ if_match=etag_value)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmHostAffinityPoliciesApiInstance\
          \ *api.VmHostAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    extId := \"97f4ddE6-BF0d-b13a-DaaC-a2fF7fcDAc0b\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := VmHostAffinityPoliciesApiInstance.ReEnforceVmHostAffinityPolicyById(&extId,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/daCffdfd-bAcd-DAF0-df1d-Faccb280D6EA/$actions/re-enforce" \
               --header 'Accept: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/bDEAe1CA-ABaE-BCFC-84ab-484CcCfC5cCD/$actions/re-enforce"
  /vmm/v4.0/ahv/policies/vm-host-affinity-policies:
    get:
      tags:
      - VmHostAffinityPolicies
      summary: List all the VM-Host Affinity policies
      description: Lists all the VM-Host Affinity policies.
      operationId: listVmHostAffinityPolicies
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - name
          - updateTime
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of all the VM-host affinity policies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicy'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Host Affinity Policy
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.ListVmHostAffinityPoliciesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVmHostAffinityPoliciesApiResponse listVmHostAffinityPoliciesApiResponse\
          \ = vmHostAffinityPoliciesApi.listVmHostAffinityPolicies(page, limit, null,\
          \ null);\n            System.out.println(listVmHostAffinityPoliciesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, VmHostAffinityPoliciesApi } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";




              vmHostAffinityPoliciesApi.listVmHostAffinityPolicies(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_host_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)\n  \
          \  \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = vm_host_affinity_policies_api.list_vm_host_affinity_policies(_page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmHostAffinityPoliciesApiInstance\
          \ *api.VmHostAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VmHostAffinityPoliciesApiInstance.ListVmHostAffinityPolicies(&page_,\
          \ &limit_, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VmHostAffinityPolicy)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0"
    post:
      tags:
      - VmHostAffinityPolicies
      summary: Create a new VM-host affinity policy
      description: Creates a new VM-host affinity policy with the provided configuration.
      operationId: createVmHostAffinityPolicy
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 292ff3ee-9444-4c82-9478-36e16dbe84b9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicy'
        required: true
      responses:
        "202":
          description: The request to create a new VM-host affinity policy is accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create VM Host Affinity Policy
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Prism Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 4
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.vmm.java.client.ApiClient;
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.VmHostAffinityPolicy;
          import com.nutanix.dp1.vmm.vmm.v4.ahv.policies.CreateVmHostAffinityPolicyApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);

                  VmHostAffinityPolicy vmHostAffinityPolicy = new VmHostAffinityPolicy();

                  // VmHostAffinityPolicy object initializations here...

                  try {
                      CreateVmHostAffinityPolicyApiResponse createVmHostAffinityPolicyApiResponse = vmHostAffinityPoliciesApi.createVmHostAffinityPolicy(vmHostAffinityPolicy);
                      System.out.println(createVmHostAffinityPolicyApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, VmHostAffinityPoliciesApi, VmHostAffinityPolicy } from "@nutanix-api/vmm-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);

          function sample() {
              let vmHostAffinityPolicy = new VmHostAffinityPolicy();

              // VmHostAffinityPolicy object initializations here...






              vmHostAffinityPoliciesApi.createVmHostAffinityPolicy(vmHostAffinityPolicy).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_vmm_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_vmm_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_vmm_py_client.ApiClient(configuration=config)
              vm_host_affinity_policies_api = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)
              vmHostAffinityPolicy = ntnx_vmm_py_client.VmHostAffinityPolicy()

              # VmHostAffinityPolicy object initializations here...


              try:
                  api_response = vm_host_affinity_policies_api.create_vm_host_affinity_policy(body=vmHostAffinityPolicy)
                  print(api_response)
              except ntnx_vmm_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies"
              import2 "github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              VmHostAffinityPoliciesApiInstance *api.VmHostAffinityPoliciesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)

              vmHostAffinityPolicy := import1.NewVmHostAffinityPolicy()

              // VmHostAffinityPolicy object initializations here...



              response, error := VmHostAffinityPoliciesApiInstance.CreateVmHostAffinityPolicy(vmHostAffinityPolicy)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestHostAffinitypolicy","description":"Descriptionforyourhostaffinitypolicy.","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"lastUpdatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"vmCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"hostCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numVms":0,"numHosts":0,"numCompliantVms":0,"numNonCompliantVms":0,"$objectType":"vmm.v4.ahv.policies.VmHostAffinityPolicy"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestHostAffinitypolicy","description":"Descriptionforyourhostaffinitypolicy.","createTime":"2015-07-20T15:49:04-07:00","updateTime":"2015-07-20T15:49:04-07:00","createdBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"lastUpdatedBy":{"extId":"string","$objectType":"vmm.v4.ahv.policies.UserReference"},"vmCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"hostCategories":[{"extId":"string","$objectType":"vmm.v4.ahv.policies.CategoryReference"}],"numVms":0,"numHosts":0,"numCompliantVms":0,"numNonCompliantVms":0,"$objectType":"vmm.v4.ahv.policies.VmHostAffinityPolicy"} \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies"
  /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{vmHostAffinityPolicyExtId}/vm-compliance-states:
    get:
      tags:
      - VmHostAffinityPolicies
      summary: List the VM compliance states of the VM-host affinity policy
      description: Lists the compliance state of all the VMs associated with the VM-host
        affinity policy.
      operationId: listVmHostAffinityPolicyVmComplianceStates
      parameters:
      - name: vmHostAffinityPolicyExtId
        in: path
        description: The external ID (UUID) of the VM-host affinity policy.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6a25bd85-48a4-4454-8915-101971d149f2
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      responses:
        "200":
          description: Returns a list of the requested VM compliance states.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicyVmComplianceState'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{vmHostAffinityPolicyExtId}/vm-compliance-states\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{vmHostAffinityPolicyExtId}/vm-compliance-states\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{vmHostAffinityPolicyExtId}/vm-compliance-states\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View VM Host Affinity Policy VM Compliance States
        roleList:
        - Super Admin
        - Virtual Machine Admin
        - Virtual Machine Viewer
        - Prism Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: Small
        count: 2
        timeUnit: seconds
      - type: Large
        count: 3
        timeUnit: seconds
      - type: XLarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.1"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vmm.java.client.ApiClient;\n\
          import com.nutanix.vmm.java.client.api.VmHostAffinityPoliciesApi;\nimport\
          \ com.nutanix.dp1.vmm.vmm.v4.ahv.policies.ListVmHostAffinityPolicyVmComplianceStatesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VmHostAffinityPoliciesApi vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClient);\n\
          \n        \n        String vmHostAffinityPolicyExtId = \"dBEC5bD9-8FB9-fdbB-cA0F-6D2Ef0Fa6aDd\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVmHostAffinityPolicyVmComplianceStatesApiResponse\
          \ listVmHostAffinityPolicyVmComplianceStatesApiResponse = vmHostAffinityPoliciesApi.listVmHostAffinityPolicyVmComplianceStates(vmHostAffinityPolicyExtId,\
          \ page, limit);\n            System.out.println(listVmHostAffinityPolicyVmComplianceStatesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VmHostAffinityPoliciesApi } from \"@nutanix-api/vmm-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vmHostAffinityPoliciesApi = new VmHostAffinityPoliciesApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let vmHostAffinityPolicyExtId = \"E7aCbDFD-F3cd-AAAA-5f5c-abaDdDfbaDfC\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n\n\n\n\n    vmHostAffinityPoliciesApi.listVmHostAffinityPolicyVmComplianceStates(vmHostAffinityPolicyExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_vmm_py_client\n\nif __name__ == \"__main__\":\n   \
          \ # Configure the client\n    config = ntnx_vmm_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_vmm_py_client.ApiClient(configuration=config)\n    vm_host_affinity_policies_api\
          \ = ntnx_vmm_py_client.VmHostAffinityPoliciesApi(api_client=client)\n  \
          \  \n    vm_host_affinity_policy_ext_id = \"EcDae1db-15ED-8fE5-Ea6A-ceddBb6D1Ddc\"\
          \n    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = vm_host_affinity_policies_api.list_vm_host_affinity_policy_vm_compliance_states(vmHostAffinityPolicyExtId=vm_host_affinity_policy_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_vmm_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/vmm-go-client/v4/models/vmm/v4/ahv/policies\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VmHostAffinityPoliciesApiInstance\
          \ *api.VmHostAffinityPoliciesApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VmHostAffinityPoliciesApiInstance = api.NewVmHostAffinityPoliciesApi(ApiClientInstance)\n\
          \n    \n    vmHostAffinityPolicyExtId := \"BdFd62b4-2064-daBD-5b9B-B235A4FbAeAF\"\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VmHostAffinityPoliciesApiInstance.ListVmHostAffinityPolicyVmComplianceStates(&vmHostAffinityPolicyExtId,\
          \ &page_, &limit_)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VmHostAffinityPolicyVmComplianceState)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/2400C73a-F9Bf-e689-FBaE-27A4BEA9CbaF/vm-compliance-states?$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/vmm/v4.0/ahv/policies/vm-host-affinity-policies/47feFCF3-C38A-F71F-D9ff-873BcaDc9ddF/vm-compliance-states?$limit=50&$page=0"
components:
  schemas:
    vmm.v4.0.content.ListImagesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.content.Image'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/content/images
        Get operation
    vmm.v4.0.content.Image:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Virtual disk image.
        required:
        - name
        - type
        type: object
        properties:
          name:
            maxLength: 256
            minLength: 1
            type: string
            description: The user-defined name of an image.
            example: LinuxInstaller.iso
          description:
            maxLength: 1000
            type: string
            description: The user-defined description of an image.
            example: Installer with updated kernel
          type:
            $ref: '#/components/schemas/vmm.v4.0.content.ImageType'
          checksum:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.content.ImageSha1Checksum
            description: The checksum of an image.
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.content.ImageSha1Checksum'
            - $ref: '#/components/schemas/vmm.v4.0.content.ImageSha256Checksum'
          sizeBytes:
            type: integer
            description: The size of an image in bytes.
            format: int64
            readOnly: true
            example: 55
          source:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.content.UrlSource
            description: "The source of an image, which can be a VM disk, a URL, or\
              \ an Objects Lite key."
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.content.UrlSource'
            - $ref: '#/components/schemas/vmm.v4.0.content.VmDiskSource'
            - $ref: '#/components/schemas/vmm.v4.0.content.ObjectsLiteSource'
          categoryExtIds:
            maxItems: 1250
            minItems: 0
            type: array
            description: List of external identifier of the category for an image.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: cb777c15-0adc-4b3b-94e0-0e561469ba7b
          clusterLocationExtIds:
            maxItems: 200
            minItems: 0
            type: array
            description: List of external identifier of the cluster where the image
              is located.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 460270a4-e608-4016-ac85-0e520bce9712
          createTime:
            type: string
            description: Image creation time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          lastUpdateTime:
            type: string
            description: Last updated time of an image.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          ownerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: External identifier of the owner of the image.
            readOnly: true
            example: 97482c6e-281e-4c2b-9892-eeafb3d099de
          placementPolicyStatus:
            maxItems: 100
            minItems: 0
            type: array
            description: Status of an image placement policy.
            readOnly: true
            items:
              $ref: '#/components/schemas/vmm.v4.0.content.ImagePlacementStatus'
        additionalProperties: false
        description: Image that can be attached to a VM.
      x-required-by-operation:
        create:
        - source
    vmm.v4.0.content.CreateImageApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/content/images
        Post operation
    vmm.v4.0.content.ImageType:
      type: string
      description: The type of an image.
      enum:
      - DISK_IMAGE
      - ISO_IMAGE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        DISK_IMAGE: A flat disk image.
        ISO_IMAGE: An image of type ISO that can only be attached as a CDROM.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.content.ImageSha1Checksum:
      required:
      - hexDigest
      type: object
      properties:
        hexDigest:
          pattern: "^([a-fA-F0-9]{40})$"
          type: string
          description: The SHA1 digest of an image file in hexadecimal format.
          example: 0ca725DAbdec3Fa5eDEcCEa2aB98eC5DFD7e29fb
      additionalProperties: false
      description: The SHA1 checksum of an image.
    vmm.v4.0.content.ImageSha256Checksum:
      required:
      - hexDigest
      type: object
      properties:
        hexDigest:
          pattern: "^([a-fA-F0-9]{64})$"
          type: string
          description: The SHA256 digest of an image file in hexadecimal format.
          example: 241eCE73aDcbbAf565f54AeAAaf6fdbb5EccCCc63bcBC90DedceE06Cdd5e0d70
      additionalProperties: false
      description: The SHA256 checksum of an image.
    vmm.v4.0.content.UrlSource:
      required:
      - url
      type: object
      properties:
        url:
          pattern: "^((http[s]?|nfs):\\/)?\\/?([^:\\/\\s]*)((\\/\\w+)*(:[0-9]+)*?\\\
            /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
          type: string
          description: The URL for creating an image.
          example: https://example.com/images/linux_installer.iso
        shouldAllowInsecureUrl:
          type: boolean
          description: Ignore the certificate errors if the value is true. Default
            is false.
          writeOnly: true
          default: false
        basicAuth:
          $ref: '#/components/schemas/vmm.v4.0.content.UrlBasicAuth'
      additionalProperties: false
      description: The source URL details for creating an image.
    vmm.v4.0.content.VmDiskSource:
      required:
      - extId
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of a VM disk.
          example: dce014cb-1130-412e-a862-947012858240
      additionalProperties: false
      description: VM disk to create an image. VM disk external identifier is available
        from the `disks` list in VMs APIs.
    vmm.v4.0.content.ObjectsLiteSource:
      required:
      - key
      type: object
      properties:
        key:
          maxLength: 1024
          minLength: 1
          type: string
          description: "Key that identifies the source object in the bucket. The resource\
            \ implies the bucket, 'vmm-images' for Image and 'vmm-ovas' for OVA."
          example: object_key
      additionalProperties: false
      description: The object details for creating an image or OVA.
    vmm.v4.0.content.ImagePlacementStatus:
      required:
      - complianceStatus
      - enforcementMode
      - placementPolicyExtId
      type: object
      properties:
        placementPolicyExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of image placement policy.
          example: ca4c58ba-28ab-485a-9d9f-1623c425fa2e
        complianceStatus:
          $ref: '#/components/schemas/vmm.v4.0.content.ComplianceStatus'
        enforcementMode:
          $ref: '#/components/schemas/vmm.v4.0.content.EnforcementMode'
        policyClusterExtIds:
          maxItems: 200
          minItems: 0
          type: array
          description: List of cluster external identifiers of the image location
            for the enforced placement policy.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 64317e41-253d-4c3a-9c70-ef4956072107
        enforcedClusterExtIds:
          maxItems: 200
          minItems: 0
          type: array
          description: List of cluster external identifiers for the enforced placement
            policy.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 8d124f05-21ce-4d52-bbc5-8f2c7ec0d495
        conflictingPolicyExtIds:
          maxItems: 100
          minItems: 0
          type: array
          description: List of image placement policy external identifiers that conflict
            with the current one.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: e91e00bb-0b5c-47bf-9d13-2c7c437d3ac7
      additionalProperties: false
      description: Status of an image placement policy.
    vmm.v4.0.content.UrlBasicAuth:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 1000
          minLength: 1
          type: string
          description: Username for basic authentication.
          example: test_user
        password:
          type: string
          description: Password for basic authentication.
          example: test_password
      additionalProperties: false
      description: Basic authentication credentials for image source HTTP/S URL.
    vmm.v4.0.content.ComplianceStatus:
      type: string
      description: Compliance status for a placement policy.
      enum:
      - COMPLIANT
      - NON_COMPLIANT
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        COMPLIANT: "The image placement policy is compliant, and there are no conflicting\
          \ policies."
        NON_COMPLIANT: "The image placement policy is not compliant, and there might\
          \ be some conflicting policies."
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.content.EnforcementMode:
      type: string
      description: Indicates whether the placement policy enforcement is ongoing or
        has failed.
      enum:
      - ENFORCING
      - ENFORCEMENT_FAILED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ENFORCEMENT_FAILED: The image placement policy enforcement by the backend
          service has failed.
        ENFORCING: The image placement policy is being enforced by the backend service.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.content.GetImageApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.content.Image
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.content.Image'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
        \ Get operation"
    vmm.v4.0.content.UpdateImageApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
        \ Put operation"
    vmm.v4.0.content.DeleteImageApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/images/{extId}\
        \ Delete operation"
    vmm.v4.0.content.ImageImportConfig:
      required:
      - clusterExtId
      - imagesExtIds
      type: object
      properties:
        clusterExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Cluster external identifier.
          example: 1766714b-4712-4241-8cc6-278b969f0867
        imagesExtIds:
          maxItems: 100
          minItems: 0
          type: array
          description: List of external identifiers for images that need to be imported.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 19bbe1cd-b5ae-451d-9102-5b7b3535b70f
      additionalProperties: false
      description: The references to Prism Element cluster and respective retained
        images.
    vmm.v4.0.content.ImportImageApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/content/images/$actions/import
        Post operation
    vmm.v4.0.content.GetImageFileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: string
            format: binary
            example: QmFzZTY0RW5jb2RlZA==
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/images/{imageExtId}/file\
        \ Get operation"
    vmm.v4.0.content.ListTemplatesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.content.Template'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/content/templates
        Get operation
    vmm.v4.0.content.Template:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: The template model.
        type: object
        properties:
          templateName:
            maxLength: 256
            minLength: 1
            type: string
            description: The user-defined name of a template.
            example: LinuxServer_VM_Template
          templateDescription:
            maxLength: 1000
            type: string
            description: The user-defined description of a template.
            example: Template for deploying Linux Server virtual machines.
          templateVersionSpec:
            $ref: '#/components/schemas/vmm.v4.0.content.TemplateVersionSpec'
          guestUpdateStatus:
            $ref: '#/components/schemas/vmm.v4.0.content.GuestUpdateStatus'
          createTime:
            type: string
            description: Time when the template was created.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          updateTime:
            type: string
            description: Time when the template was last updated.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdBy:
            $ref: '#/components/schemas/vmm.v4.0.content.TemplateUser'
          updatedBy:
            $ref: '#/components/schemas/vmm.v4.0.content.TemplateUser'
        additionalProperties: false
        description: The template model.
      x-required-by-operation:
        create:
        - templateName
        - templateVersionSpec
    vmm.v4.0.content.CreateTemplateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/content/templates
        Post operation
    vmm.v4.0.content.TemplateVersionSpec:
      description: The template version model.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Version of a template.
        required:
        - versionSource
        type: object
        properties:
          versionName:
            maxLength: 256
            type: string
            description: The user-defined name of a template version.
            example: v2.1
          versionDescription:
            maxLength: 1000
            minLength: 1
            type: string
            description: The user-defined description of a template version.
            example: Updated version with 8GB memory.
          vmSpec:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
          createTime:
            type: string
            description: Time when the template was created.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdBy:
            $ref: '#/components/schemas/vmm.v4.0.content.TemplateUser'
          versionSource:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.content.TemplateVmReference
            description: |
              Source of the template version created. When creating a new template, the source must be a VM.
              When creating a new version, the source can be either a VM or an existing version within the template.
            writeOnly: true
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.content.TemplateVmReference'
            - $ref: '#/components/schemas/vmm.v4.0.content.TemplateVersionReference'
          versionSourceDiscriminator:
            type: string
            description: |
              Source type of the template version created. It can be either a VM or a template version.
            writeOnly: true
            example: vmm.v4.content.TemplateVersionReference
          isActiveVersion:
            type: boolean
            description: |
              Specify whether to mark the template version as active or not.
              The newly created version during template creation, update, or guest OS update is set to active by default unless specified otherwise.
            default: true
          isGcOverrideEnabled:
            type: boolean
            description: Allow or disallow overriding guest customization during template
              deployment.
            example: false
        additionalProperties: false
      x-required-by-operation:
        update:
        - versionName
        - versionDescription
    vmm.v4.0.content.GuestUpdateStatus:
      type: object
      properties:
        deployedVmReference:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The identifier of the temporary VM created when the guest OS
            update was initiated.
          example: c8614563-393e-419d-ac42-b697ffdd359d
      additionalProperties: false
      description: Status of a guest update.
    vmm.v4.0.content.TemplateUser:
      description: Details for the user who created or modified the template.
      allOf:
      - $ref: '#/components/schemas/iam.v4.0.authn.User'
    vmm.v4.0.content.TemplateVmReference:
      required:
      - extId
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The identifier of a VM.
          example: f8b75410-b1f5-4f70-bdea-c1d51d627bfa
        guestCustomization:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestCustomizationParams'
      additionalProperties: false
      description: The template VM reference model.
    vmm.v4.0.content.TemplateVersionReference:
      required:
      - overrideVmConfig
      - versionId
      type: object
      properties:
        versionId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The identifier of a version.
          example: f3baf1e8-c403-408e-83de-257ab58ea23a
        overrideVmConfig:
          $ref: '#/components/schemas/vmm.v4.0.content.VmConfigOverride'
      additionalProperties: false
      description: Template version reference model.
    vmm.v4.0.content.VmConfigOverride:
      type: object
      properties:
        name:
          maxLength: 80
          minLength: 1
          type: string
          description: VM name.
          example: LinuxServer_VM
        numSockets:
          minimum: 1
          type: integer
          description: Number of vCPU sockets.
          format: int32
          example: 62
        numCoresPerSocket:
          minimum: 1
          type: integer
          description: Number of cores per socket.
          format: int32
          example: 65
        numThreadsPerCore:
          minimum: 1
          type: integer
          description: Number of threads per core.
          format: int32
          example: 8
        memorySizeBytes:
          minimum: 1
          type: integer
          description: Memory size in bytes.
          format: int64
          example: 8
        nics:
          maxItems: 2147483647
          minItems: 0
          type: array
          description: NICs attached to the VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
        guestCustomization:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestCustomizationParams'
      additionalProperties: false
      description: Overrides specification for VM creation from a template.
    vmm.v4.0.content.GetTemplateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.content.Template
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.content.Template'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
        \ Get operation"
    vmm.v4.0.content.UpdateTemplateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
        \ Put operation"
    vmm.v4.0.content.DeleteTemplateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}\
        \ Delete operation"
    vmm.v4.0.content.TemplateDeployment:
      required:
      - clusterReference
      - numberOfVms
      type: object
      properties:
        versionId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The identifier of a version.
          example: 39c81fe8-5425-418b-8a6e-83a27f4d4864
        numberOfVms:
          maximum: 250
          minimum: 1
          type: integer
          description: Number of VMs to be deployed.
          format: int32
          default: 1
        overrideVmConfigMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/vmm.v4.0.content.VmConfigOverride'
          description: |
            The map specifies the VM configuration overrides for each of the specified VM(s) to be created.
            The overrides can include the created VM Name, configuration and guest customization.
            For each VM to be created, the map has the index of the VM as the key and the corresponding VM override configurations as the value.
        clusterReference:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            The identifier of the cluster where the VM(s) will be created using a template.
          example: 86067a02-67ae-497a-ab47-d32b79090b65
      additionalProperties: false
      description: The template deployment model.
    vmm.v4.0.content.DeployTemplateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/deploy\
        \ Post operation"
    vmm.v4.0.content.ListTemplateVersionsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.content.TemplateVersionSpec'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions\
        \ Get operation"
    vmm.v4.0.content.GetTemplateVersionApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.content.TemplateVersionSpec
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.content.TemplateVersionSpec'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
        \ Get operation"
    vmm.v4.0.content.DeleteTemplateVersionApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{templateExtId}/versions/{extId}\
        \ Delete operation"
    vmm.v4.0.content.InitiateGuestUpdateSpec:
      type: object
      properties:
        versionId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The identifier of a version.
          example: 05bb9bcc-b0ea-4bb1-9d7a-b83df3165f5b
      additionalProperties: false
      description: Input to template guest OS update.
    vmm.v4.0.content.InitiateGuestUpdateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/initiate-guest-update\
        \ Post operation"
    vmm.v4.0.content.CompleteGuestUpdateSpec:
      required:
      - versionDescription
      - versionName
      type: object
      properties:
        versionName:
          maxLength: 256
          type: string
          description: The user-defined name of a template version.
          example: v2.1
        versionDescription:
          maxLength: 1000
          type: string
          description: The user-defined description of a template version.
          example: Updated version with 8GB memory.
        isActiveVersion:
          type: boolean
          description: |
            Specify whether to mark the template version as active or not.
            The newly created version during template creation, update, or guest OS update is set to active by default unless specified otherwise.
          default: true
      additionalProperties: false
      description: Input to template complete guest OS update.
    vmm.v4.0.content.CompleteGuestUpdateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/complete-guest-update\
        \ Post operation"
    vmm.v4.0.content.CancelGuestUpdateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/cancel-guest-update\
        \ Post operation"
    vmm.v4.0.content.TemplatePublishSpec:
      required:
      - versionId
      type: object
      properties:
        versionId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            The active version of a template.
            The active version is the default version for creating VMs from the template or during guest OS updates.
          example: 181412fe-9b35-4209-83bd-cd2f299525ef
      additionalProperties: false
    vmm.v4.0.content.PublishTemplateApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/content/templates/{extId}/$actions/publish\
        \ Post operation"
    vmm.v4.0.images.config.ListPlacementPoliciesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
        Get operation
    vmm.v4.0.images.config.PlacementPolicy:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Image placement policy.
        required:
        - clusterEntityFilter
        - imageEntityFilter
        - name
        - placementType
        type: object
        properties:
          name:
            maxLength: 256
            minLength: 1
            type: string
            description: Name of the image placement policy.
            example: Linux images placement policy
          description:
            maxLength: 1000
            type: string
            description: Description of the image placement policy.
            example: Distribute linux images to data centers
          placementType:
            $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementType'
          imageEntityFilter:
            $ref: '#/components/schemas/vmm.v4.0.images.config.Filter'
          clusterEntityFilter:
            $ref: '#/components/schemas/vmm.v4.0.images.config.Filter'
          enforcementState:
            $ref: '#/components/schemas/vmm.v4.0.images.config.EnforcementState'
          createTime:
            type: string
            description: Image placement policy creation time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          lastUpdateTime:
            type: string
            description: Last updated time of an image placement policy.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          ownerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: External identifier of the owner of the image placement policy.
            readOnly: true
            example: 9618801c-c44e-4051-9863-1e9781e38371
        additionalProperties: false
        description: Image placement policy model.
    vmm.v4.0.images.config.CreatePlacementPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies
        Post operation
    vmm.v4.0.images.config.PlacementType:
      type: string
      description: Type of the image placement policy.
      enum:
      - SOFT
      - HARD
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HARD: |
          Hard placement policy.
          Images can only be placed on clusters enforced by the image placement policy.
        SOFT: |
          Soft placement policy.
          Images can be placed on clusters apart from those enforced by the image placement policy.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.images.config.Filter:
      title: Category-based entity filter.
      required:
      - categoryExtIds
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/vmm.v4.0.images.config.FilterMatchType'
        categoryExtIds:
          maxItems: 100
          minItems: 1
          type: array
          description: Filter matches entities that have these categories attached.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: b5f44983-aabb-48f2-8d2f-f83f1ca5aa1c
      additionalProperties: false
      description: Category-based entity filter.
    vmm.v4.0.images.config.EnforcementState:
      type: string
      description: Enforcement status of the image placement policy.
      enum:
      - ACTIVE
      - SUSPENDED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ACTIVE: The image placement policy is being actively enforced.
        SUSPENDED: The policy enforcement for image placement is suspended.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.images.config.FilterMatchType:
      type: string
      description: Filter matching type.
      enum:
      - CATEGORIES_MATCH_ALL
      - CATEGORIES_MATCH_ANY
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CATEGORIES_MATCH_ALL: Image policy only applies to the entities that are matched
          to all the corresponding entity categories attached to the image policy.
        CATEGORIES_MATCH_ANY: Image policy applies to the entities that match any
          subset of the entity categories attached to the image policy.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.images.config.GetPlacementPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.images.config.PlacementPolicy
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.images.config.PlacementPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
        \ Get operation"
    vmm.v4.0.images.config.UpdatePlacementPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
        \ Put operation"
    vmm.v4.0.images.config.DeletePlacementPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}\
        \ Delete operation"
    vmm.v4.0.images.config.SuspendPlacementPolicyConfig:
      type: object
      properties:
        shouldCancelRunningTasks:
          type: boolean
          description: Boolean to indicate whether tasks running to enforce the image
            placement policy should be suspended.
          default: false
      additionalProperties: false
      description: |
        Indicates whether the tasks running to enforce policy should be cancelled.
        These would be tasks to transfer and/or remove images to/from the cluster(s).
    vmm.v4.0.images.config.SuspendPlacementPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/suspend\
        \ Post operation"
    vmm.v4.0.images.config.ResumePlacementPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/placement-policies/{extId}/$actions/resume\
        \ Post operation"
    vmm.v4.0.images.config.ListRateLimitPoliciesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.images.config.RateLimitPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
        Get operation
    vmm.v4.0.images.config.RateLimitPolicy:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Image rate limit policy specification.
        required:
        - clusterEntityFilter
        - name
        - rateLimitKbps
        type: object
        properties:
          name:
            maxLength: 256
            minLength: 1
            type: string
            description: Name of the image rate limit policy.
            example: Data center rate limit policy
          description:
            maxLength: 1000
            type: string
            description: Image rate limit policy specification.
            example: Bandwidth throttling for image operations
          rateLimitKbps:
            maximum: 4294967296
            minimum: 1
            type: integer
            description: Network bandwidth in KBps that the rate limited image operation
              can utilize.
            format: int64
            example: 47
          clusterEntityFilter:
            $ref: '#/components/schemas/vmm.v4.0.images.config.Filter'
          createTime:
            type: string
            description: Image rate limit policy creation time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          lastUpdateTime:
            type: string
            description: Last updated time of an image rate limit policy.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          ownerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: External identifier of the owner of the rate limit policy.
            readOnly: true
            example: 6caf669a-4cc7-4681-bba7-949dbf34efb4
          matchingClusterExtIds:
            maxItems: 200
            minItems: 0
            type: array
            description: External identifier of the Prism Elements where a rate limit
              is the effective rate limit policy.
            readOnly: true
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 38d50900-6351-41a4-a777-2a0fc638dd8a
        additionalProperties: false
        description: Image rate limit policy specification.
    vmm.v4.0.images.config.CreateRateLimitPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies
        Post operation
    vmm.v4.0.images.config.GetRateLimitPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.images.config.RateLimitPolicy
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.images.config.RateLimitPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
        \ Get operation"
    vmm.v4.0.images.config.UpdateRateLimitPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
        \ Put operation"
    vmm.v4.0.images.config.DeleteRateLimitPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/images/config/rate-limit-policies/{extId}\
        \ Delete operation"
    vmm.v4.0.images.config.ListEffectiveRateLimitPoliciesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.images.config.EffectiveRateLimitPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/images/config/effective-rate-limit-policies
        Get operation
    vmm.v4.0.images.config.EffectiveRateLimitPolicy:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Effective rate limit for a cluster.
        required:
        - clusterExtId
        - rateLimitExtId
        type: object
        properties:
          clusterExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Cluster external identifier.
            example: b72f474c-2be0-48ad-aaa8-aef4b08a8d5e
          rateLimitExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of image rate limit policy.
            example: f21d6925-db6b-469e-8c9e-200353739fe6
        additionalProperties: false
        description: The enforced rate limit on the cluster when multiple image rate
          limit policies apply.
    common.v1.0.response.ExternalizableAbstractModel:
      description: |
        A model that represents an object instance that is accessible through an API endpoint.  Instances of this type get an extId field that contains the globally unique identifier for that instance.  Externally accessible instances are always tenant aware and, therefore, extend the TenantAwareModel
      allOf:
      - $ref: '#/components/schemas/common.v1.0.config.TenantAwareModel'
      - type: object
        properties:
          extId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: |
              A globally unique identifier of an instance that is suitable for external consumption.
            nullable: true
            readOnly: true
            example: 6c335c2e-8b41-4973-b7d4-08fefbe88680
          links:
            maxItems: 20
            minItems: 0
            type: array
            description: |
              A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.response.ApiLink'
        additionalProperties: false
    common.v1.0.config.TenantAwareModel:
      type: object
      properties:
        tenantId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
          readOnly: true
          example: 58c42276-2fd7-49bc-9bf7-67d18ba54f14
      additionalProperties: false
      description: |
        A model base class whose instances are bound to a specific tenant.  This model adds a tenantId to the base model class that it extends and is automatically set by the server.
    common.v1.0.response.ApiLink:
      type: object
      properties:
        href:
          type: string
          description: |
            The URL at which the entity described by the link can be accessed.
        rel:
          type: string
          description: |
            A name that identifies the relationship of the link to the object that is returned by the URL.  The unique value of "self" identifies the URL for the object.
      additionalProperties: false
      description: |
        A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
    vmm.v4.0.ahv.config.Nic:
      description: Virtual Machine NIC.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          backingInfo:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.EmulatedNic'
          networkInfo:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.NicNetworkInfo'
        additionalProperties: false
    vmm.v4.0.ahv.config.GuestCustomizationParams:
      type: object
      properties:
        config:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Sysprep
          description: The Nutanix Guest Tools customization settings.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Sysprep'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.CloudInit'
      additionalProperties: false
      description: Stage a Sysprep or cloud-init configuration file to be used by
        the guest for the next boot. Note that the Sysprep command must be used to
        generalize the Windows VMs before triggering this API call.
    common.v1.0.config.IPv4Address:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
          description: |
            The IPv4 address of the host.
          example: 248.218.207.162
        prefixLength:
          maximum: 32
          minimum: 0
          type: integer
          description: |
            The prefix length of the network to which this host IPv4 address belongs.
          format: int32
          default: 32
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv4 format.
    vmm.v4.0.ahv.config.EmulatedNic:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.EmulatedNicModel'
        macAddress:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
          description: MAC address of the emulated NIC.
          example: df:8d:df:d8:39:c6
        isConnected:
          type: boolean
          description: Indicates whether the NIC is connected or not. Default is True.
          default: true
        numQueues:
          minimum: 1
          type: integer
          description: The number of Tx/Rx queue pairs for this NIC.
          default: 1
      additionalProperties: false
      description: Defines a NIC emulated by the hypervisor
    vmm.v4.0.ahv.config.NicNetworkInfo:
      type: object
      properties:
        nicType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.NicType'
        networkFunctionChain:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.NetworkFunctionChainReference'
        networkFunctionNicType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.NetworkFunctionNicType'
        subnet:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.SubnetReference'
        vlanMode:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VlanMode'
        trunkedVlans:
          maxItems: 4095
          minItems: 0
          uniqueItems: true
          type: array
          description: "List of networks to trunk if VLAN mode is marked as TRUNKED.\
            \ If empty and VLAN mode is set to TRUNKED, all the VLANs are trunked."
          items:
            minimum: 0
            type: integer
            example: 28
        shouldAllowUnknownMacs:
          type: boolean
          description: Indicates whether an unknown unicast traffic is forwarded to
            this NIC or not. This is applicable only for the NICs on the overlay subnets.
          example: false
        ipv4Config:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.Ipv4Config'
        ipv4Info:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.Ipv4Info'
      additionalProperties: false
      description: Network information for a NIC.
    vmm.v4.0.ahv.config.EmulatedNicModel:
      type: string
      description: Options for the NIC emulation.
      enum:
      - VIRTIO
      - E1000
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VIRTIO: The NIC adapter type is Virtio.
        E1000: The NIC adapter type is E1000.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.NicType:
      type: string
      description: NIC type. Defaults to NORMAL_NIC.
      enum:
      - NORMAL_NIC
      - DIRECT_NIC
      - NETWORK_FUNCTION_NIC
      - SPAN_DESTINATION_NIC
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        SPAN_DESTINATION_NIC: The type of NIC is Span-Destination.
        NORMAL_NIC: The type of NIC is Normal.
        DIRECT_NIC: The type of NIC is Direct.
        NETWORK_FUNCTION_NIC: The type of NIC is Network-Function.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.NetworkFunctionChainReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of a network function chain.
            It should be of type UUID.
          example: 493f7732-39dc-411d-8798-864fe3cb44d2
      additionalProperties: false
      description: The network function chain associates with the NIC. Only valid
        if nic_type is NORMAL_NIC.
    vmm.v4.0.ahv.config.NetworkFunctionNicType:
      type: string
      description: The type of this Network function NIC. Defaults to INGRESS.
      enum:
      - INGRESS
      - EGRESS
      - TAP
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        TAP: The type of Network-Function NIC is Tap.
        EGRESS: The type of Network-Function NIC is Egress.
        INGRESS: The type of Network-Function NIC is Ingress.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.SubnetReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of a subnet of type UUID.
          example: 28a0f367-14d6-4b0d-a567-ff48b590b156
      additionalProperties: false
      description: Network identifier for this adapter. Only valid if nic_type is
        NORMAL_NIC or DIRECT_NIC.
    vmm.v4.0.ahv.config.VlanMode:
      type: string
      description: "By default, all the virtual NICs are created in ACCESS mode, which\
        \ permits only one VLAN per virtual network. TRUNKED mode allows multiple\
        \ VLANs on a single VM NIC for network-aware user VMs."
      enum:
      - ACCESS
      - TRUNK
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        TRUNK: The virtual NIC is created in TRUNKED mode.
        $UNKNOWN: |
          Unknown value.
        ACCESS: The virtual NIC is created in ACCESS mode.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.Ipv4Config:
      type: object
      properties:
        shouldAssignIp:
          type: boolean
          description: "If set to true (default value), an IP address must be assigned\
            \ to the VM NIC - either the one explicitly specified by the user or allocated\
            \ automatically by the IPAM service by not specifying the IP address.\
            \ If false, then no IP assignment is required for this VM NIC."
          example: false
        ipAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
        secondaryIpAddressList:
          maxItems: 100
          minItems: 0
          type: array
          description: Secondary IP addresses for the NIC.
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
      additionalProperties: false
      description: The IP address configurations.
    vmm.v4.0.ahv.config.Ipv4Info:
      type: object
      properties:
        learnedIpAddresses:
          maxItems: 256
          minItems: 0
          uniqueItems: true
          type: array
          description: The IP addresses as found on the guest VM for the NIC.
          readOnly: true
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
      additionalProperties: false
      description: The runtime IP address information of the NIC.
    vmm.v4.0.ahv.config.Sysprep:
      type: object
      properties:
        installType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.InstallType'
        sysprepScript:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Unattendxml
          description: The Sysprep script for guest customisation of VM.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Unattendxml'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.CustomKeyValues'
      additionalProperties: false
      description: "If this field is set, the guest will be customized using Sysprep.\
        \ Either unattend_xml or custom_key_values should be provided. If custom_key_values\
        \ are provided then the unattended answer file will be generated using these\
        \ key-value pairs."
    vmm.v4.0.ahv.config.CloudInit:
      type: object
      properties:
        datasourceType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.CloudInitDataSourceType'
        metadata:
          maxLength: 32000
          type: string
          description: The contents of the meta_data configuration for cloud-init.
            This can be formatted as YAML or JSON. The value must be base64 encoded.
        cloudInitScript:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Userdata
          description: The script to use for cloud-init.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Userdata'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.CustomKeyValues'
      additionalProperties: false
      description: "If this field is set, the guest will be customized using cloud-init.\
        \ Either user_data or custom_key_values should be provided. If custom_key_ves\
        \ are provided then the user data will be generated using these key-value\
        \ pairs."
    vmm.v4.0.ahv.config.InstallType:
      type: string
      description: "Indicates whether the guest will be freshly installed using this\
        \ unattend configuration, or this unattend configuration will be applied to\
        \ a pre-prepared image. Default is 'PREPARED'."
      enum:
      - FRESH
      - PREPARED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PREPARED: This unattended configuration will be applied to a pre-prepared
          image.
        $UNKNOWN: |
          Unknown value.
        FRESH: The guest OS will be freshly installed using this unattended configuration.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.Unattendxml:
      type: object
      properties:
        value:
          maxLength: 32000
          type: string
          description: Value of Sysprep unattend xml definition. The value must be
            base64 encoded.
      additionalProperties: false
      description: "This field contains a Sysprep unattend xml definition, as a string.\
        \ The value must be base64 encoded."
    vmm.v4.0.ahv.config.CustomKeyValues:
      type: object
      properties:
        keyValuePairs:
          maxItems: 32
          minItems: 0
          type: array
          description: The list of the individual KeyValuePair elements.
          items:
            $ref: '#/components/schemas/common.v1.0.config.KVPair'
      additionalProperties: false
      description: A collection of key/value pairs.
    common.v1.0.config.KVPair:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            The key of the key-value pair.
        value:
          description: The value associated with the key for this key-value pair
          oneOf:
          - type: string
            description: |
              A string value in a key-value pair.
          - type: integer
            description: |
              An integer value in a key-value pair.
            example: 31
          - type: boolean
            description: |
              An boolean value in a key-value pair.
            example: false
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of strings.
            items:
              type: string
          - type: object
            additionalProperties:
              type: string
            description: |
              A value in a key-value pair that represents a map of string keys and values.
          - maxItems: 20
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents an array of maps of string keys and values.
            items:
              $ref: '#/components/schemas/common.v1.0.config.MapOfStringWrapper'
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of integers.
            items:
              type: integer
              example: 99
      additionalProperties: false
      description: |
        A map describing a set of keys and their corresponding values.
    common.v1.0.config.MapOfStringWrapper:
      type: object
      properties:
        map:
          type: object
          additionalProperties:
            type: string
          description: |
            A map with string keys and values.
      additionalProperties: false
      description: |
        A wrapper schema containing a map with string keys and values.
    vmm.v4.0.ahv.config.CloudInitDataSourceType:
      type: string
      description: "Type of datasource. Default: CONFIG_DRIVE_V2"
      enum:
      - CONFIG_DRIVE_V2
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CONFIG_DRIVE_V2: The type of datasource for cloud-init is Config Drive V2.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.Userdata:
      type: object
      properties:
        value:
          maxLength: 128000
          type: string
          description: The value for the cloud-init user_data.
      additionalProperties: false
      description: "The contents of the user_data configuration for cloud-init. This\
        \ can be formatted as YAML, JSON, or could be a shell script. The value must\
        \ be base64 encoded."
    vmm.v4.0.ahv.config.Vm:
      description: VM configuration.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 80
            type: string
            description: VM name.
            example: Test VM
          description:
            type: string
            description: VM description.
            example: Description for your VM
          createTime:
            type: string
            description: VM creation time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          updateTime:
            type: string
            description: VM last updated time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          source:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmSourceReference'
          numSockets:
            minimum: 1
            type: integer
            description: Number of vCPU sockets.
            format: int32
            example: 24
          numCoresPerSocket:
            minimum: 1
            type: integer
            description: Number of cores per socket.
            format: int32
            example: 40
          numThreadsPerCore:
            minimum: 1
            type: integer
            description: Number of threads per core.
            format: int32
            example: 37
          numNumaNodes:
            type: integer
            description: Number of NUMA nodes. 0 means NUMA is disabled.
            format: int32
            example: 16
          memorySizeBytes:
            minimum: 1
            type: integer
            description: Memory size in bytes.
            format: int64
            example: 79
          isVcpuHardPinningEnabled:
            type: boolean
            description: Indicates whether the vCPUs should be hard pinned to specific
              pCPUs or not.
            example: false
          isCpuPassthroughEnabled:
            type: boolean
            description: Indicates whether to passthrough the host CPU features to
              the guest or not. Enabling this will make VM incapable of live migration.
            example: true
          enabledCpuFeatures:
            maxItems: 256
            minItems: 0
            uniqueItems: true
            type: array
            description: "The list of additional CPU features to be enabled. HardwareVirtualization:\
              \ Indicates whether hardware assisted virtualization should be enabled\
              \ for the Guest OS or not. Once enabled, the Guest OS can deploy a nested\
              \ hypervisor."
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CpuFeature'
          isMemoryOvercommitEnabled:
            type: boolean
            description: "Indicates whether the memory overcommit feature should be\
              \ enabled for the VM or not. If enabled, parts of the VM memory may\
              \ reside outside of the hypervisor physical memory. Once enabled, it\
              \ should be expected that the VM may suffer performance degradation."
            example: true
          isGpuConsoleEnabled:
            type: boolean
            description: Indicates whether the vGPU console is enabled or not.
            example: true
          isCpuHotplugEnabled:
            type: boolean
            description: Indicates whether the VM CPU hotplug is enabled.
            example: false
          isScsiControllerEnabled:
            type: boolean
            description: Indicates whether the VM SCSI controller is enabled.
            example: false
          generationUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Generation UUID of the VM of type UUID.
            example: 574829a1-5b23-4ccc-a6f5-1b573c152d22
          biosUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: BIOS UUID of the VM of type UUID.
            example: c95aa0dd-c47b-413f-a63c-ed82beee6f1c
          categories:
            maxItems: 256
            minItems: 0
            type: array
            description: Categories for the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CategoryReference'
          ownershipInfo:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.OwnershipInfo'
          host:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.HostReference'
          cluster:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.ClusterReference'
          availabilityZone:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.AvailabilityZoneReference'
          guestCustomization:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestCustomizationParams'
          guestTools:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestTools'
          hardwareClockTimezone:
            maxLength: 64
            type: string
            description: VM hardware clock timezone in IANA TZDB format (America/Los_Angeles).
            default: UTC
          isBrandingEnabled:
            type: boolean
            description: Indicates whether to remove AHV branding from VM firmware
              tables or not.
            example: false
          bootConfig:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.ahv.config.LegacyBoot
            description: Indicates the order of device types in which the VM should
              try to boot from. If the boot device order is not provided the system
              will decide an appropriate boot device order.
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.ahv.config.LegacyBoot'
            - $ref: '#/components/schemas/vmm.v4.0.ahv.config.UefiBoot'
          isVgaConsoleEnabled:
            type: boolean
            description: Indicates whether the VGA console should be disabled or not.
            example: true
          machineType:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.MachineType'
          powerState:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.PowerState'
          vtpmConfig:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.VtpmConfig'
          isAgentVm:
            type: boolean
            description: "Indicates whether the VM is an agent VM or not. When their\
              \ host enters maintenance mode, once the normal VMs are evacuated, the\
              \ agent VMs are powered off. When the host is restored, agent VMs are\
              \ powered on before the normal VMs are restored. In other words, agent\
              \ VMs cannot be HA-protected or live migrated."
            example: false
          apcConfig:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.ApcConfig'
          isLiveMigrateCapable:
            type: boolean
            description: "Indicates whether the VM is capable of live migrating to\
              \ another host or not, based on its configuration."
            readOnly: true
            example: true
          isCrossClusterMigrationInProgress:
            type: boolean
            description: Indicates whether the VM is currently undergoing cross cluster
              migration.
            readOnly: true
            example: false
          storageConfig:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.ADSFVmStorageConfig'
          disks:
            maxItems: 1024
            minItems: 0
            type: array
            description: Disks attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
          cdRoms:
            maxItems: 10
            minItems: 0
            type: array
            description: CD-ROMs attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRom'
          nics:
            maxItems: 64
            minItems: 0
            type: array
            description: NICs attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
          gpus:
            maxItems: 16
            minItems: 0
            type: array
            description: GPUs attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Gpu'
          serialPorts:
            maxItems: 4
            minItems: 0
            type: array
            description: Serial ports configured on the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
          protectionType:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.ProtectionType'
          protectionPolicyState:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.ProtectionPolicyState'
          pcieDevices:
            maxItems: 64
            minItems: 0
            type: array
            description: PCIe devices attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDevice'
        additionalProperties: false
    iam.v4.0.authn.User:
      required:
      - userType
      - username
      description: Information of the user.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          username:
            maxLength: 255
            minLength: 1
            pattern: "^[^<>;'()&+%\\/\\\\\"`]*$"
            type: string
            description: Identifier of the user.
          userType:
            $ref: '#/components/schemas/iam.v4.0.authn.UserType'
          idpId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Identifier of the IDP for the user.
            example: 081c52d9-f8de-417d-ab35-428b8259aad0
          displayName:
            maxLength: 255
            minLength: 1
            pattern: "^[^<>;'()&+%\\/\\\\\"`]*$"
            type: string
            description: "Display name of the user. For LDAP and SAML users, this\
              \ is set from AD config."
          firstName:
            maxLength: 255
            minLength: 1
            pattern: "^[^<>;'()&+%\\/\\\\\"`]*$"
            type: string
            description: First name of the user.
          middleInitial:
            maxLength: 255
            minLength: 1
            pattern: "^[^<>;'()&+%\\/\\\\\"`]*$"
            type: string
            description: Middle name of the user.
          lastName:
            maxLength: 255
            minLength: 1
            pattern: "^[^<>;'()&+%\\/\\\\\"`]*$"
            type: string
            description: Last name of the user.
          emailId:
            maxLength: 255
            pattern: "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
            type: string
            description: Email ID of the user.
            example: john.doe@example.com
          locale:
            type: string
            description: Default locale of the user.
          region:
            type: string
            description: Default region of the user.
          password:
            type: string
            description: Password of the user.
            writeOnly: true
          isForceResetPasswordEnabled:
            type: boolean
            description: Flag to force the user to reset password.
            example: true
          additionalAttributes:
            maxItems: 10
            minItems: 0
            type: array
            description: Indicates additional attributes of the user.
            items:
              $ref: '#/components/schemas/common.v1.0.config.KVPair'
          status:
            $ref: '#/components/schemas/iam.v4.0.authn.UserStatusType'
          bucketsAccessKeys:
            maxItems: 5
            minItems: 0
            type: array
            description: Bucket access keys for the user.
            readOnly: true
            items:
              $ref: '#/components/schemas/iam.v4.0.authn.BucketsAccessKey'
          lastLoginTime:
            type: string
            description: The last successful login time for the user.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdTime:
            type: string
            description: Creation time of the user.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          lastUpdatedTime:
            type: string
            description: The last updated time for the user.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdBy:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: User or Service who created the user.
            readOnly: true
            example: f23c5177-b7b9-44bc-ac47-0e22ba75fbd4
          lastUpdatedBy:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Last updated by this user ID.
            readOnly: true
            example: 67c6e438-fa8b-43ac-89a5-a6f04227c288
          description:
            type: string
            description: Description of the user.
            readOnly: false
          creationType:
            $ref: '#/components/schemas/iam.v4.0.authn.CreationType'
        additionalProperties: false
    vmm.v4.0.ahv.config.VmSourceReference:
      type: object
      properties:
        entityType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmSourceReferenceEntityType'
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM of type UUID.
          readOnly: true
          example: f7f35e1a-f88d-405c-8afc-c31f2483161c
      additionalProperties: false
      description: Reference to an entity from which the VM should be cloned or created.
    vmm.v4.0.ahv.config.CpuFeature:
      type: string
      description: "The list of additional CPU features to be enabled. HardwareVirtualization:\
        \ Indicates whether hardware assisted virtualization should be enabled for\
        \ the Guest OS or not. Once enabled, the Guest OS can deploy a nested hypervisor."
      enum:
      - HARDWARE_VIRTUALIZATION
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        $UNKNOWN: |
          Unknown value.
        HARDWARE_VIRTUALIZATION: "Indicates whether hardware assisted virtualization\
          \ should be enabled for the Guest OS. Once enabled, the Guest OS has the\
          \ ability to deploy a nested hypervisor."
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.CategoryReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM category of type UUID.
          example: faa7854f-fc24-444b-a40d-ea56b144c068
      additionalProperties: false
      description: Reference to a category.
    vmm.v4.0.ahv.config.OwnershipInfo:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.OwnerReference'
      additionalProperties: false
      description: Ownership information for the VM.
    vmm.v4.0.ahv.config.HostReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of a host type UUID.
          example: c85c4c2f-c08a-406f-b934-e462ab3f1344
      additionalProperties: false
      description: "Reference to the host, the VM is running on."
    vmm.v4.0.ahv.config.ClusterReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of a cluster type UUID.
          example: e0bad15c-f9d1-4347-b251-d76d386e82d4
      additionalProperties: false
      description: Reference to a cluster.
    vmm.v4.0.ahv.config.AvailabilityZoneReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of an availability zone type
            UUID.
          example: 4b0240b7-984e-449a-a5e1-b148bdee5264
      additionalProperties: false
      description: Reference to an availability zone.
    vmm.v4.0.ahv.config.GuestTools:
      type: object
      properties:
        version:
          type: string
          description: Version of Nutanix Guest Tools installed on the VM.
          readOnly: true
        isInstalled:
          type: boolean
          description: Indicates whether Nutanix Guest Tools is installed on the VM
            or not.
          readOnly: true
          example: true
        isEnabled:
          type: boolean
          description: Indicates whether Nutanix Guest Tools is enabled or not.
          example: true
        isIsoInserted:
          type: boolean
          description: Indicates whether Nutanix Guest Tools ISO is inserted or not.
          readOnly: true
          example: true
        capabilities:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          description: The list of the application names that are enabled on the guest
            VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.NgtCapability'
        availableVersion:
          type: string
          description: Version of Nutanix Guest Tools available on the cluster.
          readOnly: true
        guestOsVersion:
          type: string
          description: Version of the operating system on the VM.
          readOnly: true
        isReachable:
          type: boolean
          description: Indicates whether the communication from VM to CVM is active
            or not.
          readOnly: true
          example: false
        isVssSnapshotCapable:
          type: boolean
          description: Indicates whether the VM is configured to take VSS snapshots
            through NGT or not.
          readOnly: true
          example: true
        isVmMobilityDriversInstalled:
          type: boolean
          description: Indicates whether the VM mobility drivers are installed on
            the VM or not.
          readOnly: true
          example: false
      additionalProperties: false
      description: The details about Nutanix Guest Tools for a VM.
    vmm.v4.0.ahv.config.LegacyBoot:
      type: object
      properties:
        bootDevice:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.BootDeviceDisk
          description: The boot device used for legacy boot of the VM.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.BootDeviceDisk'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.BootDeviceNic'
        bootOrder:
          maxItems: 3
          minItems: 0
          uniqueItems: true
          type: array
          description: Indicates the order of device types in which the VM should
            try to boot from. If the boot device order is not provided the system
            will decide an appropriate boot device order.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.BootDeviceType'
      additionalProperties: false
      description: Legacy boot mode and its associated configuration.
    vmm.v4.0.ahv.config.UefiBoot:
      type: object
      properties:
        isSecureBootEnabled:
          type: boolean
          description: Indicate whether to enable secure boot or not.
          example: false
        nvramDevice:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.NvramDevice'
        bootDevice:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.BootDeviceDisk
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.BootDeviceDisk'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.BootDeviceNic'
        bootOrder:
          maxItems: 3
          minItems: 0
          uniqueItems: true
          type: array
          description: Indicates the order of device types in which the VM should
            try to boot from. If the boot device order is not provided the system
            will decide an appropriate boot device order.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.BootDeviceType'
      additionalProperties: false
      description: UEFI boot mode and its associated configuration.
    vmm.v4.0.ahv.config.MachineType:
      type: string
      description: Machine type for the VM. Machine type Q35 is required for secure
        boot and does not support IDE disks.
      enum:
      - PC
      - PSERIES
      - Q35
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PSERIES: The machine type for the VM is PSERIES.
        Q35: The machine type for the VM is Q35.
        PC: The machine type for the VM is PC.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.PowerState:
      type: string
      description: The current power state of the VM.
      enum:
      - "ON"
      - "OFF"
      - PAUSED
      - UNDETERMINED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PAUSED: The VM is paused.
        UNDETERMINED: The VM power state is currently unknown.
        $UNKNOWN: |
          Unknown value.
        "OFF": The VM is powered-off.
        $REDACTED: |
          Redacted value.
        "ON": The VM is powered-on.
    vmm.v4.0.ahv.config.VtpmConfig:
      type: object
      properties:
        isVtpmEnabled:
          type: boolean
          description: Indicates whether the virtual trusted platform module is enabled
            for the Guest OS or not.
          example: true
        version:
          type: string
          description: Virtual trusted platform module version.
          readOnly: true
      additionalProperties: false
      description: Indicates how the vTPM for the VM should be configured.
    vmm.v4.0.ahv.config.ApcConfig:
      type: object
      properties:
        isApcEnabled:
          type: boolean
          description: "If enabled, the selected CPU model will be retained across\
            \ live and cold migrations of the VM."
          example: true
        cpuModel:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.CpuModelReference'
      additionalProperties: false
      description: Advanced Processor Compatibility configuration for the VM. Enabling
        this retains the CPU model for the VM across power cycles and migrations.
    vmm.v4.0.ahv.config.ADSFVmStorageConfig:
      type: object
      properties:
        isFlashModeEnabled:
          type: boolean
          description: Indicates whether the virtual disk is pinned to the hot tier
            or not.
          example: true
        qosConfig:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.QosConfig'
      additionalProperties: false
      description: Storage configuration for VM.
    vmm.v4.0.ahv.config.Disk:
      description: Virtual Machine disk (VM disk).
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          diskAddress:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.DiskAddress'
          backingInfo:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.ahv.config.VmDisk
            description: Supporting storage to create virtual disk on.
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDisk'
            - $ref: '#/components/schemas/vmm.v4.0.ahv.config.ADSFVolumeGroupReference'
        additionalProperties: false
    vmm.v4.0.ahv.config.CdRom:
      description: Virtual Machine CD-ROM.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          diskAddress:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRomAddress'
          backingInfo:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDisk'
          isoType:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.IsoType'
        additionalProperties: false
    vmm.v4.0.ahv.config.Gpu:
      description: Graphics resource information for the virtual machine.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          mode:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.GpuMode'
          deviceId:
            type: integer
            description: The device Id of the GPU.
            format: int32
            example: 52
          vendor:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.GpuVendor'
          pciAddress:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.SBDF'
          guestDriverVersion:
            maxLength: 128
            type: string
            description: Last determined guest driver version.
            readOnly: true
          name:
            maxLength: 128
            type: string
            description: Name of the GPU resource.
            readOnly: true
          frameBufferSizeBytes:
            type: integer
            description: GPU frame buffer size in bytes.
            format: int64
            readOnly: true
            example: 67
          numVirtualDisplayHeads:
            type: integer
            description: Number of supported virtual display heads.
            format: int32
            readOnly: true
            example: 67
          fraction:
            type: integer
            description: Fraction of the physical GPU assigned.
            format: int32
            readOnly: true
            example: 84
        additionalProperties: false
    vmm.v4.0.ahv.config.SerialPort:
      description: Indicates the configuration of serial ports of the VM.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          isConnected:
            type: boolean
            description: Indicates whether the serial port is connected or not.
            example: false
          index:
            maximum: 3
            minimum: 0
            type: integer
            description: Index of the serial port. Index 1 is reserved for internal
              usage.
            example: 3
        additionalProperties: false
    vmm.v4.0.ahv.config.ProtectionType:
      type: string
      description: The type of protection applied on a VM. PD_PROTECTED indicates
        a VM is protected using the Prism Element. RULE_PROTECTED indicates a VM protection
        using the Prism Central.
      enum:
      - UNPROTECTED
      - PD_PROTECTED
      - RULE_PROTECTED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PD_PROTECTED: The VM is protected with a protection domain on Prism Element.
        UNPROTECTED: The VM is not protected.
        RULE_PROTECTED: The VM is protected with a protection policy on Prism Central.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.ProtectionPolicyState:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.PolicyReference'
      additionalProperties: false
      description: Status of protection policy applied to this VM.
    vmm.v4.0.ahv.config.PcieDevice:
      description: Indicates the information about the PCIe device.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          assignedDeviceInfo:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDeviceInfo'
          backingInfo:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.ahv.config.PcieDeviceReference
            description: Indicates the way a PCIe device is associated to the VM.
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDeviceReference'
        additionalProperties: false
    vmm.v4.0.ahv.config.VmSourceReferenceEntityType:
      type: string
      description: Reference to an entity from which the VM should be cloned or created.
      enum:
      - VM
      - VM_RECOVERY_POINT
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VM_RECOVERY_POINT: Reference to the recovery point entity from which the VM
          should be cloned or created.
        VM: Reference to an entity from which the VM should be cloned or created.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.OwnerReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM owner type UUID.
          example: 820349bc-c59a-46a3-9533-5a29864cec61
      additionalProperties: false
      description: Owner reference.
    vmm.v4.0.ahv.config.NgtCapability:
      type: string
      description: The capabilities of the Nutanix Guest Tools in the VM.
      enum:
      - SELF_SERVICE_RESTORE
      - VSS_SNAPSHOT
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VSS_SNAPSHOT: Enablement status of the Volume Snapshot Service application.
        $UNKNOWN: |
          Unknown value.
        SELF_SERVICE_RESTORE: Enablement status of the Self Service Restore application.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.BootDeviceDisk:
      type: object
      properties:
        diskAddress:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.DiskAddress'
      additionalProperties: false
      description: The disk that will be used to boot the VM.
    vmm.v4.0.ahv.config.BootDeviceNic:
      type: object
      properties:
        macAddress:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
          description: Mac address of the NIC that will be used to boot the VM.
          example: b6:ec:9e:aa:f1:62
      additionalProperties: false
      description: The NIC that will be used to boot the VM.
    vmm.v4.0.ahv.config.BootDeviceType:
      type: string
      description: "The type of boot device. Valid values are CDROM, NIC, and DISK."
      enum:
      - CDROM
      - DISK
      - NETWORK
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NETWORK: The type of boot device is NIC.
        $UNKNOWN: |
          Unknown value.
        DISK: The type of boot device is DISK.
        $REDACTED: |
          Redacted value.
        CDROM: The type of boot device is CD-ROM.
    vmm.v4.0.ahv.config.DiskAddress:
      type: object
      properties:
        busType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.DiskBusType'
        index:
          minimum: 0
          type: integer
          description: Device index on the bus. This field is ignored unless the bus
            details are specified.
          format: int32
          example: 3
      additionalProperties: false
      description: Disk address.
    vmm.v4.0.ahv.config.DiskBusType:
      type: string
      description: "Bus type for the device. The acceptable values are: SCSI, IDE,\
        \ PCI, SATA, SPAPR (only PPC)."
      enum:
      - SCSI
      - IDE
      - PCI
      - SATA
      - SPAPR
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        SCSI: The type of disk bus is SCSI.
        SPAPR: The type of disk bus is SPAPR.
        PCI: The type of disk bus is PCI.
        IDE: The type of disk bus is IDE.
        $UNKNOWN: |
          Unknown value.
        SATA: The type of disk bus is SATA.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.NvramDevice:
      type: object
      properties:
        backingStorageInfo:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDisk'
      additionalProperties: false
      description: Configuration for NVRAM to be presented to the VM.
    vmm.v4.0.ahv.config.VmDisk:
      type: object
      properties:
        diskExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM disk of type UUID.
          readOnly: true
          example: 8fced97a-8296-49f2-913a-6490ab612e49
        diskSizeBytes:
          minimum: 1
          type: integer
          description: Size of the disk in bytes.
          format: int64
          example: 46
        storageContainer:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDiskContainerReference'
        storageConfig:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDiskStorageConfig'
        dataSource:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.DataSource'
        isMigrationInProgress:
          type: boolean
          description: Indicates if the disk is undergoing migration to another container.
          readOnly: true
          example: false
      additionalProperties: false
      description: Storage provided by Nutanix ADSF.
    vmm.v4.0.ahv.config.VmDiskContainerReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM disk container. It should
            be of type UUID.
          example: c1a39b16-fd62-41d3-b83e-ff006c19cf6e
      additionalProperties: false
      description: This reference is for disk level storage container preference.
        This preference specifies the storage container to which this disk belongs.
    vmm.v4.0.ahv.config.VmDiskStorageConfig:
      type: object
      properties:
        isFlashModeEnabled:
          type: boolean
          description: Indicates whether the virtual disk is pinned to the hot tier
            or not.
          example: true
      additionalProperties: false
      description: Storage configuration for VM disks.
    vmm.v4.0.ahv.config.DataSource:
      type: object
      properties:
        reference:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.ImageReference
          description: A reference to a disk or image that contains the contents of
            a disk.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.ImageReference'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDiskReference'
      additionalProperties: false
      description: A reference to a disk or image that contains the contents of a
        disk.
    vmm.v4.0.ahv.config.ImageReference:
      type: object
      properties:
        imageExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of an image of type UUID.
          example: 2bdbcec9-4333-46c5-a7d1-0b93c9233744
      additionalProperties: false
      description: Clone a disk from an image.
    vmm.v4.0.ahv.config.VmDiskReference:
      type: object
      properties:
        diskExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM disk of type UUID.
          example: 52f8951a-012a-4fd7-95cc-243b295a2546
        diskAddress:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.DiskAddress'
        vmReference:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmReference'
      additionalProperties: false
      description: Reference to an existing VM disk.
    vmm.v4.0.ahv.config.VmReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM of type UUID.
          example: 3916ccd2-31e5-4cfc-9ee3-a3abb8d5d1be
      additionalProperties: false
      description: This is a reference to a VM.
    vmm.v4.0.ahv.config.CpuModelReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of the CPU model associated
            with the VM.
          example: d2bfd9de-700b-4ddf-8c8e-83f63c3565bc
        name:
          maxLength: 64
          type: string
          description: Name of the CPU model associated with the VM.
          example: Haswell
      additionalProperties: false
      description: "CPU model associated with the VM if Advanced Processor Compatibility(APC)\
        \ is enabled. If APC is enabled and no CPU model is explicitly set, a default\
        \ baseline CPU model is picked by the system. See the APC documentation for\
        \ more information"
    vmm.v4.0.ahv.config.QosConfig:
      type: object
      properties:
        throttledIops:
          type: integer
          description: Throttled IOPS for the governed entities. The block size for
            the I/O is 32 kB.
          example: 75
      additionalProperties: false
      description: QoS parameters to be enforced.
    vmm.v4.0.ahv.config.ADSFVolumeGroupReference:
      type: object
      properties:
        volumeGroupExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of an ADSF volume group. It
            should be of type UUID.
          example: f2fa96a8-0261-4552-9113-ee2ecda90599
      additionalProperties: false
      description: Reference to an ADSF Volume Group.
    vmm.v4.0.ahv.config.CdRomAddress:
      type: object
      properties:
        busType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRomBusType'
        index:
          type: integer
          description: Device index on the bus. This field is ignored unless the bus
            details are specified.
          example: 94
      additionalProperties: false
      description: Virtual Machine disk (VM disk).
    vmm.v4.0.ahv.config.IsoType:
      type: string
      description: Type of ISO image inserted in CD-ROM
      enum:
      - OTHER
      - GUEST_TOOLS
      - GUEST_CUSTOMIZATION
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        OTHER: The type of ISO is Other.
        GUEST_TOOLS: The type of ISO is Nutanix Guest Tools.
        GUEST_CUSTOMIZATION: The type of ISO is Guest Customization.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.CdRomBusType:
      type: string
      description: "Bus type for the device. The acceptable values are: IDE or SATA."
      enum:
      - IDE
      - SATA
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        IDE: The type of CD-ROM bus is IDE.
        $UNKNOWN: |
          Unknown value.
        SATA: The type of CD-ROM bus is SATA.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.GpuMode:
      type: string
      description: The mode of this GPU.
      enum:
      - PASSTHROUGH_GRAPHICS
      - PASSTHROUGH_COMPUTE
      - VIRTUAL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PASSTHROUGH_GRAPHICS: The mode of the GPU is Passthrough Graphics.
        PASSTHROUGH_COMPUTE: The mode of the GPU is Passthrough Compute.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        VIRTUAL: The mode of the GPU is Virtual.
    vmm.v4.0.ahv.config.GpuVendor:
      type: string
      description: The vendor of the GPU.
      enum:
      - NVIDIA
      - INTEL
      - AMD
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NVIDIA: The vendor of the GPU is NVIDIA.
        AMD: The vendor of the GPU is AMD.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        INTEL: The vendor of the GPU is Intel.
    vmm.v4.0.ahv.config.SBDF:
      type: object
      properties:
        segment:
          type: integer
          description: PCI Segment.
          readOnly: true
          example: 90
        bus:
          type: integer
          description: "PCI Bus number in hexadecimal, often padded using a leading\
            \ zeros to two or four digits."
          readOnly: true
          example: 78
        device:
          type: integer
          description: "PCI Device number in hexadecimal, often padded using a leading\
            \ zero to two digits . Sometimes this is also referred to as the slot\
            \ number."
          readOnly: true
          example: 79
        func:
          type: integer
          description: PCI Function number in hexadecimal.
          readOnly: true
          example: 4
      additionalProperties: false
      description: The (S)egment:(B)us:(D)evice.(F)unction hardware address. See https://wiki.xen.org/wiki/Bus:Device.Function_(BDF)_Notation
        for more details.
    vmm.v4.0.ahv.config.PolicyReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of an instance of type UUID.
          example: de17741c-3dc8-449a-9b31-0038687c07d6
      additionalProperties: false
      description: Reference to the policy object in use.
    vmm.v4.0.ahv.config.PcieDeviceInfo:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDeviceReference'
      additionalProperties: false
      description: Information about the attached PCIe device to the VM.
    vmm.v4.0.ahv.config.PcieDeviceReference:
      type: object
      properties:
        deviceExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Globally unique identifier denoting PCIe device label. It should
            be of type UUID.
          example: 57ea3a89-e6c7-4dd1-b132-9aabc00d13e7
      additionalProperties: false
      description: Reference to the PCIe device.
    iam.v4.0.authn.UserType:
      type: string
      description: "User type like SAML user or local user, and so on."
      enum:
      - LOCAL
      - SAML
      - LDAP
      - EXTERNAL
      - SERVICE_ACCOUNT
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        SERVICE_ACCOUNT: "User stored locally in IAM and is used by customer applications,\
          \ scripts and internal services."
        LDAP: User belonging to a directory service (OpenLDAP/AD).
        EXTERNAL: User not stored locally nor belonging to any IDP or directory service.
        LOCAL: User stored locally in IAM.
        SAML: User belonging to a SAML IDP.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    iam.v4.0.authn.UserStatusType:
      type: string
      description: Status of the user.
      enum:
      - ACTIVE
      - INACTIVE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ACTIVE: Denotes that the local user is active.
        INACTIVE: Denotes that the local user is inactive and needs to be reactivated.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    iam.v4.0.authn.BucketsAccessKey:
      description: Information of bucket access key.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - required:
        - accessKeyName
        type: object
        properties:
          accessKeyName:
            maxLength: 255
            minLength: 1
            pattern: "^[^<>;'()&+%\\/\\\\\"`]*$"
            type: string
            description: Name of the bucket access key.
          secretAccessKey:
            type: string
            description: "This represents secret access key, which will be returned\
              \ only during access key creation."
            readOnly: true
          userId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: User identifier who owns the bucket access key.
            readOnly: true
            example: 3aaf3a8b-7ca8-40af-b9b8-fdc9f45bad8b
          createdTime:
            type: string
            description: Creation time for the bucket access key.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          lastUpdatedBy:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Entity that updated the buckets access key.
            readOnly: true
            example: 7fb24fa9-9139-4ef5-9d73-3f4b65f7d05e
          assignedTo:
            maxLength: 255
            minLength: 3
            type: string
            description: External client to whom this key is allocated.
          creationType:
            $ref: '#/components/schemas/iam.v4.0.authn.CreationType'
          expiryTime:
            type: string
            description: The expiry time of the buckets access Key.
            format: date-time
            example: 2009-09-23T14:30:00-07:00
          status:
            $ref: '#/components/schemas/iam.v4.0.authn.BucketsAccessKeyStatusType'
          createdBy:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Service account user who created the buckets access key.
            readOnly: true
            example: 7d1abb61-d3a2-40c7-8abb-1d79731020ba
          lastUpdatedTime:
            type: string
            description: Creation time for the bucket access key.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
        additionalProperties: false
    iam.v4.0.authn.CreationType:
      type: string
      description: The creation mechanism of this entity.
      enum:
      - PREDEFINED
      - USERDEFINED
      - SERVICEDEFINED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PREDEFINED: Predefined creator workflow type is for entity created by the
          system.
        SERVICEDEFINED: Servicedefined creator workflow type is for entity created
          by the service.
        USERDEFINED: Userdefined creator workflow type is for entity created by the
          users.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    iam.v4.0.authn.BucketsAccessKeyStatusType:
      type: string
      description: "The status of the buckets access key, that is, valid, expired\
        \ or revoked."
      enum:
      - VALID
      - REVOKED
      - EXPIRED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        REVOKED: Buckets access key is revoked.
        VALID: Buckets access key is valid.
        EXPIRED: Buckets access key is expired.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.error.ErrorResponse:
      type: object
      properties:
        error:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.error.AppMessage'
          - $ref: '#/components/schemas/vmm.v4.0.error.SchemaValidationError'
      additionalProperties: false
      description: An error response indicates that the operation has failed either
        due to a client error(4XX) or server error(5XX). Please look at the HTTP status
        code and namespace specific error code and error message for further details.
      x-platform-generated: true
    vmm.v4.0.error.AppMessage:
      type: object
      properties:
        message:
          type: string
          description: The message string.
        severity:
          $ref: '#/components/schemas/common.v1.0.config.MessageSeverity'
        code:
          type: string
          description: "The code associated with this message.This string is typically\
            \ prefixed by the namespace the endpoint belongs to. For example: VMM-40000"
        locale:
          type: string
          description: Locale for this message. The default locale would be 'en-US'.
          default: en_US
        errorGroup:
          type: string
          description: The error group associated with this message of severity ERROR.
        argumentsMap:
          type: object
          additionalProperties:
            type: string
          description: The map of argument name to value.
      additionalProperties: false
      description: Message with associated severity describing status of the current
        operation.
      x-platform-generated: true
    vmm.v4.0.error.MessageSeverity:
      type: string
      description: Enum schema MessageSeverity
      enum:
      - INFO
      - WARNING
      - ERROR
      - $UNKNOWN
      - $REDACTED
      x-platform-generated: true
      x-codegen-hint:
        $any:
        - type: entity-identifier
          properties:
            identifiers:
            - value: $UNKNOWN
              index: 201
            - value: $REDACTED
              index: 202
            - value: INFO
              index: 203
            - value: WARNING
              index: 204
            - value: ERROR
              index: 205
    vmm.v4.0.error.SchemaValidationError:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the response.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        statusCode:
          type: integer
          description: The HTTP status code of the response.
          example: 24
        error:
          type: string
          description: The generic error message for the response.
        path:
          type: string
          description: API path on which the request was made.
        validationErrorMessages:
          type: array
          description: List of validation error messages
          items:
            $ref: '#/components/schemas/vmm.v4.0.error.SchemaValidationErrorMessage'
      additionalProperties: false
      description: This schema is generated from SchemaValidationError.java
      x-platform-generated: true
    vmm.v4.0.error.SchemaValidationErrorMessage:
      type: object
      properties:
        location:
          type: string
          description: "The part of the request that failed validation. Validation\
            \ can fail for path, query parameters, and request body."
        message:
          type: string
          description: The detailed message for the validation error.
        attributePath:
          type: string
          description: The path of the attribute that failed validation in the schema.
      additionalProperties: false
      description: This schema is generated from SchemaValidationErrorMessage.java
      x-platform-generated: true
    common.v1.0.response.ApiResponseMetadata:
      type: object
      properties:
        flags:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of flags that may indicate the status of the response. For example, a flag with the name 'isPaginated' and value 'false', indicates that the response is not paginated.
          items:
            $ref: '#/components/schemas/common.v1.0.config.Flag'
        links:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of HATEOAS style links for the response that may also include pagination links for list operations.
          items:
            $ref: '#/components/schemas/common.v1.0.response.ApiLink'
        totalAvailableResults:
          type: integer
          description: |
            The total number of entities that are available on the server for this type.
          format: int32
          example: 25
        messages:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            Information, Warning or Error messages that might provide additional contextual information related to the operation.
          items:
            $ref: '#/components/schemas/common.v1.0.config.Message'
        extraInfo:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of entity-specific metadata
          items:
            $ref: '#/components/schemas/common.v1.0.config.KVPair'
      additionalProperties: false
      description: |
        The metadata associated with an API response. This value is always present and minimally contains the self-link for the API request that produced this response. It also contains pagination data for the paginated requests.
    prism.v4.0.config.TaskReference:
      type: object
      properties:
        extId:
          pattern: "^[a-zA-Z0-9/+]*={0,2}:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          description: A globally unique identifier of a task.
          example: QmFzZTY0RW5jb2RlZA==:37269b59-c649-45fd-956e-19134b3208a3
      additionalProperties: false
      description: A reference to a task tracking an asynchronous operation. The status
        of the task can be queried by making a GET request to the task URI provided
        in the metadata section of the API response.
    common.v1.0.config.Flag:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            Name of the flag.
        value:
          type: boolean
          description: |
            Value of the flag.
          default: false
      additionalProperties: false
      description: |
        Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of object must have an attribute called x-bounded-map-keys that tells which flags are actually present for that entity.
    common.v1.0.config.Message:
      type: object
      properties:
        code:
          type: string
          description: |
            A code that uniquely identifies a message.
        message:
          type: string
          description: |
            The description of the message.
        locale:
          type: string
          description: |
            The locale for the message description.
          default: en_US
        severity:
          $ref: '#/components/schemas/common.v1.0.config.MessageSeverity'
      additionalProperties: false
    common.v1.0.config.MessageSeverity:
      type: string
      description: |
        The message severity.
      enum:
      - INFO
      - WARNING
      - ERROR
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ERROR: |
          Error indicating failed completion.
        INFO: |
          Information about successful completion.
        $UNKNOWN: |
          Unknown value.
        WARNING: |
          Warning indicating future error.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.AssociateVmCategoriesParams:
      type: object
      properties:
        categories:
          maxItems: 256
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.CategoryReference'
      additionalProperties: false
      description: List of categories to be associated to the VM.
    vmm.v4.0.ahv.config.AssociateCategoriesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/associate-categories\
        \ Post operation"
    vmm.v4.0.ahv.config.DisassociateVmCategoriesParams:
      type: object
      properties:
        categories:
          maxItems: 256
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.CategoryReference'
      additionalProperties: false
      description: List of categories to be disassociated from the VM.
    vmm.v4.0.ahv.config.DisassociateCategoriesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/disassociate-categories\
        \ Post operation"
    vmm.v4.0.ahv.config.GetCdRomApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.CdRom
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRom'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.DeleteCdRomApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.CdRomInsertParams:
      type: object
      properties:
        backingInfo:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDisk'
      additionalProperties: false
      description: Virtual Machine CD-ROM.
    vmm.v4.0.ahv.config.InsertCdRomApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/insert\
        \ Post operation"
    vmm.v4.0.ahv.config.EjectCdRomApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms/{extId}/$actions/eject\
        \ Post operation"
    vmm.v4.0.ahv.config.ListCdRomsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.CdRom'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
        \ Get operation"
    vmm.v4.0.ahv.config.CreateCdRomApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/cd-roms\
        \ Post operation"
    vmm.v4.0.ahv.config.CloneOverrideParams:
      type: object
      properties:
        name:
          maxLength: 80
          type: string
          description: VM name.
          example: Test VM
        numSockets:
          minimum: 1
          type: integer
          description: Number of vCPU sockets.
          format: int32
          example: 41
        numCoresPerSocket:
          minimum: 1
          type: integer
          description: Number of cores per socket.
          format: int32
          example: 76
        numThreadsPerCore:
          minimum: 1
          type: integer
          description: Number of cores per socket.
          format: int32
          example: 7
        memorySizeBytes:
          minimum: 1
          type: integer
          description: Memory size in bytes.
          format: int64
          example: 7
        nics:
          maxItems: 64
          minItems: 0
          type: array
          description: NICs attached to the VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
        bootConfig:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.LegacyBoot
          description: Indicates the order of device types in which the VM should
            try to boot from. If the boot device order is not provided the system
            will decide an appropriate boot device order.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.LegacyBoot'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.UefiBoot'
        guestCustomization:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestCustomizationParams'
      additionalProperties: false
      description: VM clone override specification.
    vmm.v4.0.ahv.config.CloneVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/clone\
        \ Post operation"
    vmm.v4.0.ahv.config.GetDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Disk
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.UpdateDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
        \ Put operation"
    vmm.v4.0.ahv.config.DeleteDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.ListDisksApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Disk'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
        \ Get operation"
    vmm.v4.0.ahv.config.CreateDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/disks\
        \ Post operation"
    vmm.v4.0.ahv.config.GetVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Vm
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.UpdateVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
        \ Put operation"
    vmm.v4.0.ahv.config.DeleteVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.ListVmsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
        Get operation
    vmm.v4.0.ahv.config.CreateVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/config/vms
        Post operation
    vmm.v4.0.ahv.config.CustomizeGuestVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/customize-guest\
        \ Post operation"
    vmm.v4.0.ahv.config.DiskMigrationParams:
      type: object
      properties:
        migrateDisks:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.MigrationPlans
          description: "Specifies the VmDisks of a VM for migration and the migration\
            \ plan for them. If all the disks of a VM need to be migrated to the same\
            \ storage container, only a single migration plan with only the external\
            \ ID of the destination storage container is needed.  If the disks are\
            \ being migrated to different containers, one plan per disk needs to be\
            \ specified."
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.MigrationPlans'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.AllDisksMigrationPlan'
      additionalProperties: false
      description: "Specifies the VmDisks of a VM for migration and the migration\
        \ plan for them. If all the disks of a VM need to be migrated to the same\
        \ storage container, only a single migration plan with only the external ID\
        \ of the destination storage container is needed.  If the disks are being\
        \ migrated to different containers, one plan per disk needs to be specified."
    vmm.v4.0.ahv.config.MigrateVmDisksApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-vm-disks\
        \ Post operation"
    vmm.v4.0.ahv.config.MigrationPlans:
      type: object
      properties:
        plans:
          maxItems: 1034
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.ADSFDiskMigrationPlan'
      additionalProperties: false
      description: List of migration plans for VM disks.
    vmm.v4.0.ahv.config.AllDisksMigrationPlan:
      type: object
      properties:
        storageContainer:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDiskContainerReference'
      additionalProperties: false
      description: Defines how all the disks of a VM are migrated to the same target
        storage container.
    vmm.v4.0.ahv.config.ADSFDiskMigrationPlan:
      type: object
      properties:
        storageContainer:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmDiskContainerReference'
        vmDisks:
          maxItems: 1034
          minItems: 0
          type: array
          description: The disks included in the migration plan.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.MigrateDiskReference'
      additionalProperties: false
      description: The disk migration plan defines how disks are migrated.
    vmm.v4.0.ahv.config.MigrateDiskReference:
      type: object
      properties:
        diskExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM disk of type UUID.
          example: 14bbaa65-fde7-4652-b4d1-7c523a13299f
      additionalProperties: false
      description: Reference to an existing VM disk that needs to be migrated.
    vmm.v4.0.ahv.config.RevertParams:
      title: VM revert specification.
      required:
      - vmRecoveryPointExtId
      type: object
      properties:
        vmRecoveryPointExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of the VM Recovery Point.
          example: df867128-8407-4f37-8ede-483a8f929a0c
      additionalProperties: false
      description: Input for the VM revert operation. Specify the VM Recovery Point
        ID to which the VM would be reverted.
    vmm.v4.0.ahv.config.RevertVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/revert\
        \ Post operation"
    vmm.v4.0.ahv.config.VmCrossClusterMigrateParams:
      required:
      - isLiveMigration
      - targetAvailabilityZone
      type: object
      properties:
        targetAvailabilityZone:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.AvailabilityZoneReference'
        targetCluster:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.ClusterReference'
        isLiveMigration:
          type: boolean
          description: Indicates if the migration is performed with a running VM.
          example: false
        overrides:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.VmCrossClusterMigrateOverrides'
      additionalProperties: false
      description: Input on how to migrate a VM across clusters.
    vmm.v4.0.ahv.config.CrossClusterMigrateVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate\
        \ Post operation"
    vmm.v4.0.ahv.config.VmCrossClusterMigrateOverrides:
      type: object
      properties:
        overrideNicList:
          maxItems: 64
          minItems: 0
          type: array
          description: The NIC configuration to apply on the target cluster when migrating
            a VM from the source cluster to the target cluster.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
      additionalProperties: false
      description: Cross cluster migration overrides the VM configuration.
    vmm.v4.0.ahv.config.VmMigrateToHostParams:
      required:
      - host
      type: object
      properties:
        host:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.HostReference'
      additionalProperties: false
      description: The destination host to which the VM is migrated.
    vmm.v4.0.ahv.config.MigrateVmToHostApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/migrate-to-host\
        \ Post operation"
    vmm.v4.0.ahv.config.GetGpuApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Gpu
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Gpu'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.DeleteGpuApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.ListGpusApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Gpu'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
        \ Get operation"
    vmm.v4.0.ahv.config.CreateGpuApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/gpus\
        \ Post operation"
    vmm.v4.0.ahv.config.GetGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.GuestTools
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestTools'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
        \ Get operation"
    vmm.v4.0.ahv.config.UpdateGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools\
        \ Put operation"
    vmm.v4.0.ahv.config.GuestToolsInstallConfig:
      type: object
      properties:
        capabilities:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          description: The list of the application names that are enabled on the guest
            VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.NgtCapability'
        credential:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.Credential'
        rebootPreference:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.RebootPreference'
      additionalProperties: false
      description: Arguments for installing Nutanix Guest Tools.
    vmm.v4.0.ahv.config.InstallVmGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/install\
        \ Post operation"
    vmm.v4.0.ahv.config.Credential:
      type: object
      properties:
        username:
          maxLength: 256
          type: string
          description: Username for the server.
          example: test_user
        password:
          type: string
          description: Password for the server.
          writeOnly: true
          example: test_password
      additionalProperties: false
      description: Sign in credentials for the server.
    vmm.v4.0.ahv.config.RebootPreference:
      type: object
      properties:
        scheduleType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.ScheduleType'
        schedule:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.RebootPreferenceSchedule'
      additionalProperties: false
      description: The restart schedule after installing or upgrading Nutanix Guest
        Tools.
    vmm.v4.0.ahv.config.ScheduleType:
      type: string
      description: Schedule type for restart.
      enum:
      - SKIP
      - IMMEDIATE
      - LATER
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        LATER: Schedule a restart for a specific time.
        SKIP: Do not schedule a restart.
        $UNKNOWN: |
          Unknown value.
        IMMEDIATE: Schedule an immediate restart.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.RebootPreferenceSchedule:
      type: object
      properties:
        startTime:
          type: string
          description: The start time for a scheduled restart.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      additionalProperties: false
      description: Restart schedule.
    vmm.v4.0.ahv.config.GuestToolsUpgradeConfig:
      type: object
      properties:
        rebootPreference:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.RebootPreference'
      additionalProperties: false
      description: Arguments for upgrading Nutanix Guest Tools.
    vmm.v4.0.ahv.config.UpgradeVmGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/upgrade\
        \ Post operation"
    vmm.v4.0.ahv.config.GuestToolsInsertConfig:
      type: object
      properties:
        capabilities:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          description: The list of the application names that are enabled on the guest
            VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.NgtCapability'
        isConfigOnly:
          type: boolean
          description: "Indicates that the Nutanix Guest Tools are already installed\
            \ on the guest VM, and the ISO is being inserted to update the configuration\
            \ of these tools."
          example: true
      additionalProperties: false
      description: Argument for inserting a Nutanix Guest Tools ISO into an available
        slot.
    vmm.v4.0.ahv.config.InsertVmGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/insert-iso\
        \ Post operation"
    vmm.v4.0.ahv.config.UninstallVmGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/guest-tools/$actions/uninstall\
        \ Post operation"
    vmm.v4.0.ahv.config.GetNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.Nic
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.UpdateNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
        \ Put operation"
    vmm.v4.0.ahv.config.DeleteNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.ListNicsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.Nic'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
        \ Get operation"
    vmm.v4.0.ahv.config.CreateNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics\
        \ Post operation"
    vmm.v4.0.ahv.config.AssignIpParams:
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
      additionalProperties: false
      description: Assigns a specific IP address to a network device attached to a
        managed network.
    vmm.v4.0.ahv.config.AssignIpApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/assign-ip\
        \ Post operation"
    vmm.v4.0.ahv.config.ReleaseIpApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/release-ip\
        \ Post operation"
    vmm.v4.0.ahv.config.MigrateNicConfig:
      required:
      - migrateType
      - subnet
      type: object
      properties:
        subnet:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.SubnetReference'
        migrateType:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.MigrateNicType'
        ipAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
      additionalProperties: false
      description: Configurations for migrating a VM NIC.
    vmm.v4.0.ahv.config.MigrateNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/nics/{extId}/$actions/migrate\
        \ Post operation"
    vmm.v4.0.ahv.config.MigrateNicType:
      type: string
      description: The type of IP address management for NIC migration.
      enum:
      - ASSIGN_IP
      - RELEASE_IP
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ASSIGN_IP: The type of IP address management for NIC migration is Assign IP.
        RELEASE_IP: Release IP is the type of IP address management for NIC migration.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.config.AssignVmOwnerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/assign-owner\
        \ Post operation"
    vmm.v4.0.ahv.config.GetPcieDeviceApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.PcieDevice
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDevice'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.DeletePcieDeviceApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.ListPcieDevicesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.PcieDevice'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
        \ Get operation"
    vmm.v4.0.ahv.config.CreatePcieDeviceApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/pcie-devices\
        \ Post operation"
    vmm.v4.0.ahv.config.PowerOnVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-on\
        \ Post operation"
    vmm.v4.0.ahv.config.PowerCycleVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-cycle\
        \ Post operation"
    vmm.v4.0.ahv.config.PowerOffVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/power-off\
        \ Post operation"
    vmm.v4.0.ahv.config.ResetVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/reset\
        \ Post operation"
    vmm.v4.0.ahv.config.ShutdownVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-shutdown\
        \ Post operation"
    vmm.v4.0.ahv.config.GuestPowerOptions:
      type: object
      properties:
        guestPowerStateTransitionConfig:
          $ref: '#/components/schemas/vmm.v4.0.ahv.config.GuestPowerStateTransitionConfig'
      additionalProperties: false
      description: Nutanix Guest Tools shutdown mode options.
    vmm.v4.0.ahv.config.GuestPowerStateTransitionConfig:
      type: object
      properties:
        shouldEnableScriptExec:
          type: boolean
          description: Indicates whether to run the set script before the VM shutdowns/restarts.
          example: false
        shouldFailOnScriptFailure:
          type: boolean
          description: Indicates whether to abort VM shutdown/restart if the script
            fails.
          example: false
      additionalProperties: false
      description: Additional configuration for Nutanix Gust Tools power state transition.
    vmm.v4.0.ahv.config.RebootVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{extId}/$actions/guest-reboot\
        \ Post operation"
    vmm.v4.0.ahv.config.GetSerialPortApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.config.SerialPort
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.config.UpdateSerialPortApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
        \ Put operation"
    vmm.v4.0.ahv.config.DeleteSerialPortApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.config.ListSerialPortsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.config.SerialPort'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
        \ Get operation"
    vmm.v4.0.ahv.config.CreateSerialPortApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/config/vms/{vmExtId}/serial-ports\
        \ Post operation"
    vmm.v4.0.ahv.policies.GetVmAntiAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.policies.VmAntiAffinityPolicy
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.policies.VmAntiAffinityPolicy:
      description: VM-VM anti-affinity policy configuration.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 80
            minLength: 1
            type: string
            description: VM-VM anti-affinity policy name.
            example: Test Anti Affinity policy
          description:
            type: string
            description: VM-VM anti-affinity policy description.
            example: Description for your anti affinity policy
          createTime:
            type: string
            description: VM-VM anti-affinity policy creation time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          updateTime:
            type: string
            description: VM-VM anti-affinity policy last updated time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdBy:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.UserReference'
          updatedBy:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.UserReference'
          categories:
            maxItems: 20
            minItems: 1
            uniqueItems: true
            type: array
            description: Categories configured for the VM-VM anti-affinity policy.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CategoryReference'
          numCompliantVms:
            type: integer
            description: Number of compliant VMs which are part of the VM-VM anti-affinity
              policy.
            format: int64
            readOnly: true
            example: 52
          numNonCompliantVms:
            type: integer
            description: Number of non-compliant VMs which are part of the VM-VM anti-affinity
              policy.
            format: int64
            readOnly: true
            example: 64
          numPendingVms:
            type: integer
            description: "Number of VMs with compliance state as pending, which are\
              \ part of the VM-VM anti-affinity policy."
            format: int64
            readOnly: true
            example: 80
        additionalProperties: false
    vmm.v4.0.ahv.policies.UpdateVmAntiAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
        \ Put operation"
    vmm.v4.0.ahv.policies.DeleteVmAntiAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.policies.UserReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID (UUID) of the user.
          example: f114f652-a5e4-4c02-9ab0-7ce6ab5f0d62
      additionalProperties: false
      description: Reference to a user.
    vmm.v4.0.ahv.policies.CategoryReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID (UUID) of the category.
          example: b09dbf82-681a-403b-8e36-805087b515e5
      additionalProperties: false
      description: Reference to a category.
    vmm.v4.0.ahv.policies.ListVmAntiAffinityPoliciesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
        Get operation
    vmm.v4.0.ahv.policies.CreateVmAntiAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies
        Post operation
    vmm.v4.0.ahv.policies.ListVmAntiAffinityPolicyVmComplianceStatesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmAntiAffinityPolicyVmComplianceState'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-anti-affinity-policies/{vmAntiAffinityPolicyExtId}/vm-compliance-states\
        \ Get operation"
    vmm.v4.0.ahv.policies.VmAntiAffinityPolicyVmComplianceState:
      description: Compliance information of a VM which is part of the VM-VM anti-affinity
        policy.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          cluster:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ClusterReference'
          host:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.HostReference'
          associatedCategories:
            maxItems: 20
            minItems: 1
            type: array
            description: List of categories through which the VM is associated to
              the VM-VM anti-affinity policy.
            readOnly: true
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CategoryReference'
          complianceStatus:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.ahv.policies.CompliantVmAntiAffinityPolicy
            description: The compliance status of the VM.
            readOnly: true
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CompliantVmAntiAffinityPolicy'
            - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.NonCompliantVmAntiAffinityPolicy'
            - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.PendingVmAntiAffinityPolicy'
        additionalProperties: false
    vmm.v4.0.ahv.policies.ClusterReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID (UUID) of the cluster.
          example: 59bd7e0f-99e9-432f-a0a1-6be6e2973581
      additionalProperties: false
      description: Reference to a cluster.
    vmm.v4.0.ahv.policies.HostReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID (UUID) of the host.
          example: ca0e7341-49ab-4cff-ba15-cfe3a9ece01a
      additionalProperties: false
      description: Reference to a host.
    vmm.v4.0.ahv.policies.CompliantVmAntiAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: The compliance status of the VM is compliant.
    vmm.v4.0.ahv.policies.NonCompliantVmAntiAffinityPolicy:
      type: object
      properties:
        nonComplianceReason:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.policies.ClusterNotSupportedForVmAntiAffinity
          description: The reason for non-compliance of the VM-VM anti-affinity policy
            for the VM.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ClusterNotSupportedForVmAntiAffinity'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ConflictingVmAntiAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ConflictingLegacyVmAntiAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.NotEnoughHostsForVmAntiAffinity'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.NotEnoughResourcesForVmAntiAffinity'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.OtherVmAntiAffinityPolicyNonComplianceReason'
      additionalProperties: false
      description: The compliance status of the VM is non-compliant.
    vmm.v4.0.ahv.policies.PendingVmAntiAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: The compliance status of the VM is PendingVmAntiAffinityPolicy.
        Policy enforcement is still in progress.
    vmm.v4.0.ahv.policies.ClusterNotSupportedForVmAntiAffinity:
      type: object
      properties: {}
      additionalProperties: false
      description: The VM-VM anti-affinity policy is not compliant for the VM as the
        cluster hosting the VM is not running on a supported AOS version.
    vmm.v4.0.ahv.policies.ConflictingVmAntiAffinityPolicy:
      type: object
      properties:
        conflictingVmAntiAffinityPolicyExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID of the conflicting VM-VM anti-affinity policy
            which is applied on the VM.
          example: 9d5b9093-be87-43e9-8a30-3d9e8e47b436
      additionalProperties: false
      description: The current VM-VM anti-affinity policy is not applied on the VM
        as another conflicting policy has already been applied to the VM.
    vmm.v4.0.ahv.policies.ConflictingLegacyVmAntiAffinityPolicy:
      type: object
      properties:
        legacyVmAntiAffinityPolicyExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID of the legacy VM Group which the VM is the
            part of.
          example: 51ae0353-7d78-4338-adf5-db8ec63787d1
      additionalProperties: false
      description: The current VM-VM anti-affinity policy is not applied on the VM
        as the VM is already part of a legacy VM Group.
    vmm.v4.0.ahv.policies.NotEnoughHostsForVmAntiAffinity:
      type: object
      properties: {}
      additionalProperties: false
      description: The VM-VM anti-affinity policy cannot be made compliant for the
        VM as the number of VMs in the policy are more than the number of hosts on
        the cluster which is hosting the current VM.
    vmm.v4.0.ahv.policies.NotEnoughResourcesForVmAntiAffinity:
      type: object
      properties: {}
      additionalProperties: false
      description: "The VM-VM anti-affinity policy cannot be made compliant for the\
        \ VM as there are not enough resources on the cluster to enforce the policy.\
        \ This may be related to pinned VMs, VM-Host affinity policies, etc."
    vmm.v4.0.ahv.policies.OtherVmAntiAffinityPolicyNonComplianceReason:
      type: object
      properties: {}
      additionalProperties: false
      description: The VM-VM anti-affinity policy cannot be made compliant for the
        VM due to some other issue.
    vmm.v4.0.ahv.policies.ListLegacyVmAntiAffinityPoliciesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.LegacyVmAntiAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies
        Get operation
    vmm.v4.0.ahv.policies.LegacyVmAntiAffinityPolicy:
      description: Legacy VM-VM Anti-Affinity policy configuration.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 512
            minLength: 0
            type: string
            description: VM Anti-Affinity policy name corresponding to a legacy VM-VM
              Anti-Affinity policy.
            readOnly: true
            example: Legacy VM anti affinity policy
          cluster:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ClusterReference'
          vms:
            maxItems: 4096
            minItems: 0
            type: array
            description: VMs that are part of the legacy VM-VM Anti-Affinity policy.
            readOnly: true
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmReference'
        additionalProperties: false
    vmm.v4.0.ahv.policies.VmReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID (UUID) of the VM.
          example: 2e94bf37-1188-4851-8cd3-f8a2656023b8
      additionalProperties: false
      description: Reference to a VM.
    vmm.v4.0.ahv.policies.DeleteLegacyVmAntiAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/legacy-vm-anti-affinity-policies/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.policies.GetVmHostAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.policies.VmHostAffinityPolicy
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.policies.VmHostAffinityPolicy:
      description: VM-Host Affinity policy configuration.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 80
            type: string
            description: VM-Host Affinity policy name.
            example: Test Host Affinity policy
          description:
            type: string
            description: VM-Host Affinity policy description.
            example: Description for your host affinity policy.
          createTime:
            type: string
            description: VM-Host Affinity policy creation time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          updateTime:
            type: string
            description: VM-Host Affinity policy last updated time.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdBy:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.UserReference'
          lastUpdatedBy:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.UserReference'
          vmCategories:
            maxItems: 50
            minItems: 1
            type: array
            description: Categories through which VM is associated with the VM-host
              affinity policy.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CategoryReference'
          hostCategories:
            maxItems: 50
            minItems: 1
            type: array
            description: Categories through which host is associated with the VM-host
              affinity policy.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CategoryReference'
          numVms:
            type: integer
            description: Number of VMs associated with the VM-host affinity policy.
            format: int64
            readOnly: true
            example: 45
          numHosts:
            type: integer
            description: Number of hosts associated with the VM-host affinity policy.
            format: int64
            readOnly: true
            example: 45
          numCompliantVms:
            type: integer
            description: Number of VMs which are compliant with the VM-host affinity
              policy.
            format: int64
            readOnly: true
            example: 49
          numNonCompliantVms:
            type: integer
            description: Number of VMs which are not compliant with the VM-host affinity
              policy.
            format: int64
            readOnly: true
            example: 83
        additionalProperties: false
    vmm.v4.0.ahv.policies.UpdateVmHostAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
        \ Put operation"
    vmm.v4.0.ahv.policies.DeleteVmHostAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}\
        \ Delete operation"
    vmm.v4.0.ahv.policies.ReEnforceVmHostAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{extId}/$actions/re-enforce\
        \ Post operation"
    vmm.v4.0.ahv.policies.ListVmHostAffinityPoliciesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
        Get operation
    vmm.v4.0.ahv.policies.CreateVmHostAffinityPolicyApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies
        Post operation
    vmm.v4.0.ahv.policies.ListVmHostAffinityPolicyVmComplianceStatesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.VmHostAffinityPolicyVmComplianceState'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/policies/vm-host-affinity-policies/{vmHostAffinityPolicyExtId}/vm-compliance-states\
        \ Get operation"
    vmm.v4.0.ahv.policies.VmHostAffinityPolicyVmComplianceState:
      description: Compliance information of the VM associated with the VM-host affinity
        policy.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          cluster:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ClusterReference'
          host:
            $ref: '#/components/schemas/vmm.v4.0.ahv.policies.HostReference'
          associatedCategories:
            maxItems: 50
            minItems: 1
            type: array
            description: List of categories by which VM is associated to the VM-host
              affinity policy.
            readOnly: true
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CategoryReference'
          complianceStatus:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: vmm.v4.ahv.policies.CompliantVmHostAffinityPolicy
            description: The compliance status of the VM.
            readOnly: true
            oneOf:
            - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.CompliantVmHostAffinityPolicy'
            - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.NonCompliantVmHostAffinityPolicy'
            - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.PendingVmHostAffinityPolicy'
        additionalProperties: false
    vmm.v4.0.ahv.policies.CompliantVmHostAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: VM is compliant with the VM-host affinity policy.
    vmm.v4.0.ahv.policies.NonCompliantVmHostAffinityPolicy:
      type: object
      properties:
        nonComplianceReason:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.policies.ConflictingVmHostAffinityPolicy
          description: The reason why the VM does not comply with the VM host affinity
            policy.
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ConflictingVmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.ConflictingLegacyVmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.NoHostsForVmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.NotEnoughResourcesForVmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.PeNotCapableForVmHostAffinityPolicy'
          - $ref: '#/components/schemas/vmm.v4.0.ahv.policies.OtherVmHostAffinityPolicyVmNonComplianceReason'
      additionalProperties: false
      description: VM is non-compliant with the VM-host affinity policy.
    vmm.v4.0.ahv.policies.PendingVmHostAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: The compliance status of VM is pending. The policy enforcement
        is still in-progress.
    vmm.v4.0.ahv.policies.ConflictingVmHostAffinityPolicy:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external ID (UUID) of the conflicting VM-host affinity
            policy which is applied on the VM.
          example: 528aa558-7552-4e64-8522-06552a688235
      additionalProperties: false
      description: The current VM-host affinity policy is not applied to the VM because
        another policy with an earlier creation time is applied to the VM.
    vmm.v4.0.ahv.policies.ConflictingLegacyVmHostAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: The current VM-host affinity policy is not applied to the VM because
        the VM is already part of a legacy VM-host affinity policy.
    vmm.v4.0.ahv.policies.NoHostsForVmHostAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: There are no hosts linked with the VM-host affinity policy.
    vmm.v4.0.ahv.policies.NotEnoughResourcesForVmHostAffinityPolicy:
      type: object
      properties: {}
      additionalProperties: false
      description: The VM-host affinity policy cannot be applied on the VM as there
        are not enough resources on the hosts in the cluster associated with the policy.
    vmm.v4.0.ahv.policies.PeNotCapableForVmHostAffinityPolicy:
      type: object
      properties:
        minimumAosVersionRequired:
          type: string
          description: Minimum AOS version which supports category based VM-Host Affinity
            policies.
          example: "6.1"
      additionalProperties: false
      description: PE is of an older version which doesn't support category based
        VM-Host Affinity policies. Re-enforce Host Affinity policy after upgrading
        PE to supported version.
    vmm.v4.0.ahv.policies.OtherVmHostAffinityPolicyVmNonComplianceReason:
      type: object
      properties: {}
      additionalProperties: false
      description: VM is non-compliant with the VM-host affinity policy due to an
        internal error.
    vmm.v4.0.ahv.stats.ListVmStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms
        Get operation
    vmm.v4.0.ahv.stats.VmStats:
      description: A collection of VM stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          stats:
            type: array
            description: The timestamp of a specific VM stats response data point.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmStatsTuple'
        additionalProperties: false
    vmm.v4.0.ahv.stats.VmStatsTuple:
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp of a specific VM stats response data point.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        controllerAvgIoLatencyMicros:
          type: integer
          description: The VM controller average I/O latency in microseconds.
          format: int64
          example: 22
        controllerAvgReadIoLatencyMicros:
          type: integer
          description: The VM controller average read I/O latency in microseconds.
          format: int64
          example: 97
        controllerAvgReadIoSizeKb:
          type: integer
          description: The VM controller average read I/O size in kilobytes.
          format: int64
          example: 34
        controllerAvgWriteIoLatencyMicros:
          type: integer
          description: The VM controller average write I/O latency in microseconds.
          format: int64
          example: 34
        controllerAvgWriteIoSizeKb:
          type: integer
          description: The VM controller average write I/O size in kilobytes.
          format: int64
          example: 95
        controllerIoBandwidthKbps:
          type: integer
          description: The VM controller I/O bandwidth in kilobytes per second.
          format: int64
          example: 1
        controllerNumIo:
          type: integer
          description: The VM controller number of I/O requests.
          format: int64
          example: 61
        controllerNumIops:
          type: integer
          description: The VM controller number of I/O operations per second.
          format: int64
          example: 20
        controllerNumRandomIo:
          type: integer
          description: The VM controller number of random I/O.
          format: int64
          example: 85
        controllerNumReadIo:
          type: integer
          description: The VM controller number of read I/O.
          format: int64
          example: 13
        controllerNumReadIops:
          type: integer
          description: The VM controller number of read I/O operations per second.
          format: int64
          example: 79
        controllerNumSeqIo:
          type: integer
          description: The VM controller number of sequential I/Os.
          format: int64
          example: 60
        controllerNumWriteIo:
          type: integer
          description: The VM controller number of write I/O.
          format: int64
          example: 8
        controllerNumWriteIops:
          type: integer
          description: The VM controller number of write I/O operations per second.
          format: int64
          example: 89
        controllerOplogDrainDestHddBytes:
          type: integer
          description: Amount of data in bytes drained to HDD tier of extent store
            by the VM controller.
          format: int64
          example: 91
        controllerOplogDrainDestSsdBytes:
          type: integer
          description: Amount of data in bytes drained to SSD tier of extent store
            by the VM controller.
          format: int64
          example: 15
        controllerRandomIoPpm:
          type: integer
          description: The VM controller number of random I/O PPM.
          format: int64
          example: 60
        controllerReadIoBandwidthKbps:
          type: integer
          description: The VM controller number of read I/O bandwidth in kilobytes
            per second.
          format: int64
          example: 6
        controllerReadIoPpm:
          type: integer
          description: The VM controller number of read I/O PPM.
          format: int64
          example: 51
        controllerReadSourceEstoreHddLocalBytes:
          type: integer
          description: "The VM disk controller number of bytes for local read source:\
            \ HDD estore."
          format: int64
          example: 1
        controllerReadSourceEstoreSsdLocalBytes:
          type: integer
          description: "The VM disk controller number of bytes for local read source:\
            \ SSD estore."
          format: int64
          example: 82
        controllerReadSourceEstoreHddRemoteBytes:
          type: integer
          description: "The VM disk controller number of bytes for remote read source:\
            \ HDD estore."
          format: int64
          example: 93
        controllerReadSourceEstoreSsdRemoteBytes:
          type: integer
          description: "The VM disk controller number of bytes for remote read source:\
            \ SSD estore."
          format: int64
          example: 80
        controllerReadSourceOplogBytes:
          type: integer
          description: The VM controller read source oplog in bytes.
          format: int64
          example: 79
        controllerSeqIoPpm:
          type: integer
          description: The VM controller number of sequential I/O PPM.
          format: int64
          example: 80
        controllerSharedUsageBytes:
          type: integer
          description: The VM controller shared usage in bytes.
          format: int64
          example: 43
        controllerSnapshotUsageBytes:
          type: integer
          description: The VM controller snapshot usage in bytes.
          format: int64
          example: 45
        controllerStorageTierSsdUsageBytes:
          type: integer
          description: The VM controller total usage on SSD tier for the VM.
          format: int64
          example: 44
        controllerTimespanMicros:
          type: integer
          description: The VM controller timespan in microseconds.
          format: int64
          example: 66
        controllerTotalIoSizeKb:
          type: integer
          description: The VM controller number of total I/O size in kilobytes.
          format: int64
          example: 48
        controllerTotalIoTimeMicros:
          type: integer
          description: The VM controller number of total I/O time in microseconds.
          format: int64
          example: 3
        controllerTotalReadIoSizeKb:
          type: integer
          description: The VM controller number of total read I/O size in kilobytes.
          format: int64
          example: 52
        controllerTotalReadIoTimeMicros:
          type: integer
          description: The VM controller number of total read I/O time in microseconds.
          format: int64
          example: 93
        controllerTotalTransformedUsageBytes:
          type: integer
          description: The VM controller number of total transformed usage in bytes.
          format: int64
          example: 68
        controllerUserBytes:
          type: integer
          description: The VM controller user bytes.
          format: int64
          example: 38
        controllerWriteDestEstoreSsdBytes:
          type: integer
          description: The VM controller write destination SSD estore in bytes.
          format: int64
          example: 71
        controllerWriteDestEstoreHddBytes:
          type: integer
          description: The VM controller write destination HDD estore in bytes.
          format: int64
          example: 96
        controllerWriteIoBandwidthKbps:
          type: integer
          description: The VM controller write I/O bandwidth in kilobytes per second.
          format: int64
          example: 25
        controllerWriteIoPpm:
          type: integer
          description: The VM controller percentage of write I/O in parts per million.
          format: int64
          example: 55
        controllerWss120SecondUnionMb:
          type: integer
          description: "The combined working set size of the VM disk controller in\
            \ megabytes, 2 minute measurement interval."
          format: int64
          example: 71
        controllerWss120SecondReadMb:
          type: integer
          description: "The read working set size of the VM disk controller in megabytes,\
            \ 2 minute measurement interval."
          format: int64
          example: 97
        controllerWss120SecondWriteMb:
          type: integer
          description: "The write working set size of the VM disk controller in megabytes,\
            \ 2 minute measurement interval."
          format: int64
          example: 71
        controllerWss3600SecondUnionMb:
          type: integer
          description: "The combined working set size of the VM disk controller in\
            \ megabytes, 1-hour measurement interval."
          format: int64
          example: 62
        controllerWss3600SecondReadMb:
          type: integer
          description: "The read working set size of the VM disk controller in megabytes,\
            \ 1 hour measurement interval."
          format: int64
          example: 3
        controllerWss3600SecondWriteMb:
          type: integer
          description: "The write working set size of the VM disk controller in megabytes,\
            \ 1-hour measurement interval."
          format: int64
          example: 75
        frameBufferUsagePpm:
          type: integer
          description: The VM frame buffer usage in PPM.
          format: int64
          example: 92
        gpuUsagePpm:
          type: integer
          description: The VM GPU usage in PPM.
          format: int64
          example: 67
        guestMemoryUsagePpm:
          type: integer
          description: The VM memory usage in percentage reported by a guest.
          format: int64
          example: 75
        hypervisorAvgIoLatencyMicros:
          type: integer
          description: The average I/O latency of the VM in microseconds
          format: int64
          example: 54
        hypervisorCpuReadyTimePpm:
          type: integer
          description: "Percentage of time that the VM was ready, but could not get\
            \ scheduled to run."
          format: int64
          example: 29
        hypervisorCpuUsagePpm:
          type: integer
          description: The CPU usage of the VM in parts per million.
          format: int64
          example: 36
        hypervisorIoBandwidthKbps:
          type: integer
          description: The I/O bandwidth of the VM in kilobytes per second.
          format: int64
          example: 61
        hypervisorMemoryBalloonReclaimedBytes:
          type: integer
          description: The memory balloon reclaimed by the VM in bytes.
          format: int64
          example: 82
        hypervisorMemoryBalloonReclaimTargetBytes:
          type: integer
          description: The target memory balloon of the VM to be reclaimed in bytes.
          format: int64
          example: 80
        hypervisorMemoryUsagePpm:
          type: integer
          description: Consolidated guest memory usage in percentage.
          format: int64
          example: 22
        hypervisorNumIo:
          type: integer
          description: The number of I/O by the VM.
          format: int64
          example: 50
        hypervisorNumIops:
          type: integer
          description: The number of I/O operations by the VM per second.
          format: int64
          example: 98
        hypervisorNumReadIops:
          type: integer
          description: The number of read I/O operations by the VM per second.
          format: int64
          example: 22
        hypervisorNumReadIo:
          type: integer
          description: The number of read I/O operations by the VM.
          format: int64
          example: 35
        hypervisorNumReceivedBytes:
          type: integer
          description: The number of bytes received by the VM.
          format: int64
          example: 64
        hypervisorNumReceivePacketsDropped:
          type: integer
          description: The number of packets dropped by the VM during reception.
          format: int64
          example: 29
        hypervisorNumTransmittedBytes:
          type: integer
          description: The number of bytes transmitted by the VM.
          format: int64
          example: 80
        hypervisorNumTransmitPacketsDropped:
          type: integer
          description: The number of packets dropped by the VM during transmission.
          format: int64
          example: 50
        hypervisorNumWriteIo:
          type: integer
          description: The number of write I/O by the VM.
          format: int64
          example: 70
        hypervisorNumWriteIops:
          type: integer
          description: The number of write I/O operations by the VM per second.
          format: int64
          example: 60
        hypervisorReadIoBandwidthKbps:
          type: integer
          description: The number of read I/O bandwidth of the VM in kilobytes per
            second.
          format: int64
          example: 1
        hypervisorTimespanMicros:
          type: integer
          description: The timespan of the VM in microseconds.
          format: int64
          example: 81
        hypervisorTotalIoSizeKb:
          type: integer
          description: The total I/O size of the VM in kilobytes.
          format: int64
          example: 24
        hypervisorTotalIoTimeMicros:
          type: integer
          description: The total I/O time of the VM in microseconds.
          format: int64
          example: 22
        hypervisorTotalReadIoSizeKb:
          type: integer
          description: The total read I/O size of the VM in kilobytes.
          format: int64
          example: 30
        hypervisorVmRunningTimeUsecs:
          type: integer
          description: The running time of the VM in microseconds.
          format: int64
          example: 97
        hypervisorWriteIoBandwidthKbps:
          type: integer
          description: The write I/O bandwidth of the VM in kilobytes per second.
          format: int64
          example: 95
        memoryUsageBytes:
          type: integer
          description: The VM memory usage bytes.
          format: int64
          example: 82
        memoryUsagePpm:
          type: integer
          description: The VM memory usage in PPM.
          format: int64
          example: 54
        numVcpusUsedPpm:
          type: integer
          description: The VM number of vCPUs used in PPM.
          format: int64
          example: 78
        checkScore:
          type: integer
          description: The VM NCC health check score.
          format: int64
          example: 27
        cluster:
          type: string
          description: The UUID of the cluster on which the VM resides.
        hypervisorType:
          type: string
          description: Hypervisor type of the VM.
        diskUsagePpm:
          type: integer
          description: The VM disk usage in PPM.
          format: int64
          example: 97
        diskCapacityBytes:
          type: integer
          description: The VM disk capacity in bytes.
          format: int64
          example: 1
        hypervisorSwapInRateKbps:
          type: integer
          description: The swap in rate of the VM in kilobytes per second.
          format: int64
          example: 1
        hypervisorSwapOutRateKbps:
          type: integer
          description: The swap out rate of the VM in kilobytes per second.
          format: int64
          example: 29
        memoryReservedBytes:
          type: integer
          description: The reserved memory of the VM in bytes.
          format: int64
          example: 92
      additionalProperties: false
      description: A collection of VM stats.
    common.v1.0.stats.DownSamplingOperator:
      type: string
      description: |
        The operator to use while performing down-sampling on stats data. Allowed values are SUM, MIN, MAX, AVG, COUNT and LAST.
      enum:
      - SUM
      - MIN
      - MAX
      - AVG
      - COUNT
      - LAST
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        AVG: |
          Aggregation indicating mean or average of all values.
        MIN: |
          Aggregation containing lowest of all values.
        MAX: |
          Aggregation containing highest of all values.
        LAST: |
          Aggregation containing only the last recorded value.
        SUM: |
          Aggregation with sum of all values.
        COUNT: |
          Aggregation containing total count of values.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.ahv.stats.GetVmStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.stats.VmStats
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.stats.GetDiskStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.stats.VmDiskStats
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmDiskStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/disks/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.stats.VmDiskStats:
      description: A collection of VM disk stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          vmExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The VM external ID associated with the VM Disk stats.
            example: 80806332-f4f2-4c0d-ad63-de8dd54cefb4
          stats:
            type: array
            description: The timestamp of a specific VM stats response data point.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmDiskStatsTuple'
        additionalProperties: false
    vmm.v4.0.ahv.stats.VmDiskStatsTuple:
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp of a specific VM stats response data point.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        controllerAvgIoLatencyMicros:
          type: integer
          description: The VM disk controller average I/O latency in microseconds.
          format: int64
          example: 97
        controllerAvgReadIoLatencyMicros:
          type: integer
          description: The VM disk controller average read I/O latency in microseconds.
          format: int64
          example: 16
        controllerAvgReadIoSizeKb:
          type: integer
          description: The VM disk controller average read I/O size in kilobytes.
          format: int64
          example: 90
        controllerNumReadIops:
          type: integer
          description: The VM disk controller number of read I/O operations per second.
          format: int64
          example: 20
        controllerReadIoPpm:
          type: integer
          description: The VM disk controller percentage of read I/O in parts per
            million.
          format: int64
          example: 66
        controllerNumWriteIo:
          type: integer
          description: The VM disk controller number of write I/O.
          format: int64
          example: 30
        controllerAvgWriteIoLatencyMicros:
          type: integer
          description: The VM disk controller average write I/O latency in microseconds.
          format: int64
          example: 44
        controllerAvgWriteIoSizeKb:
          type: integer
          description: The VM disk controller average write I/O size in kilobytes.
          format: int64
          example: 67
        controllerIoBandwidthKbps:
          type: integer
          description: The VM disk controller number of I/O bandwidth in kilobytes
            per second.
          format: int64
          example: 98
        controllerFrontendReadOps:
          type: integer
          description: The VM disk controller number of frontend read operations.
          format: int64
          example: 38
        controllerFrontendWriteOps:
          type: integer
          description: The VM disk controller number of frontend write operations.
          format: int64
          example: 44
        controllerNumIo:
          type: integer
          description: The VM disk controller number of I/O.
          format: int64
          example: 85
        controllerNumIops:
          type: integer
          description: The VM disk controller number of I/O operations per second.
          format: int64
          example: 17
        controllerNumReadIo:
          type: integer
          description: The VM disk controller number of read I/O.
          format: int64
          example: 62
        controllerRandomReadOps:
          type: integer
          description: The VM disk controller number of random read operations.
          format: int64
          example: 27
        controllerRandomWriteOps:
          type: integer
          description: The VM disk controller number of random write operations.
          format: int64
          example: 1
        controllerReadIoBandwidthKbps:
          type: integer
          description: The VM disk controller number of read I/O bandwidth in kilobytes
            per second.
          format: int64
          example: 90
        controllerSeqIoPpm:
          type: integer
          description: The VM disk controller percentage of sequential I/O in parts
            per million.
          format: int64
          example: 30
        controllerTimespanMicros:
          type: integer
          description: The VM disk controller timespan in microseconds.
          format: int64
          example: 86
        controllerTotalIoSizeKb:
          type: integer
          description: The VM disk controller total I/O size in kilobytes.
          format: int64
          example: 45
        controllerTotalIoTimeMicros:
          type: integer
          description: The VM disk controller total I/O time in microseconds.
          format: int64
          example: 70
        controllerTotalReadIoSizeKb:
          type: integer
          description: The VM disk controller total read I/O size in kilobytes.
          format: int64
          example: 0
        controllerTotalReadIoTimeMicros:
          type: integer
          description: The VM disk controller total read I/O time in microseconds.
          format: int64
          example: 12
        controllerUserBytes:
          type: integer
          description: The VM disk controller user bytes.
          format: int64
          example: 43
        controllerVdiskCpuTimeMicros:
          type: integer
          description: The VM disk controller vDisk CPU time in microseconds.
          format: int64
          example: 49
        controllerWriteIoBandwidthKbps:
          type: integer
          description: The VM disk controller write I/O bandwidth in kilobytes per
            second.
          format: int64
          example: 74
        controllerWriteIoPpm:
          type: integer
          description: The VM disk controller percentage of write I/O in parts per
            million.
          format: int64
          example: 91
      additionalProperties: false
      description: A collection of VM disk stats.
    vmm.v4.0.ahv.stats.GetNicStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.ahv.stats.VmNicStats
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmNicStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/ahv/stats/vms/{vmExtId}/nics/{extId}\
        \ Get operation"
    vmm.v4.0.ahv.stats.VmNicStats:
      description: A collection of VM NIC stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          vmExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The VM external ID associated with the VM NIC stats.
            example: 5ea2cff8-3a18-452b-9f5c-b6e6bf4710cc
          stats:
            type: array
            description: The timestamp of a specific VM stats response data point.
            items:
              $ref: '#/components/schemas/vmm.v4.0.ahv.stats.VmNicStatsTuple'
        additionalProperties: false
    vmm.v4.0.ahv.stats.VmNicStatsTuple:
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp of a specific VM stats response data point.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        networkDroppedReceivedPackets:
          type: integer
          description: The VM NIC number of dropped received packets.
          format: int64
          example: 63
        networkDroppedTransmittedPackets:
          type: integer
          description: The VM NIC number of dropped transmitted packets.
          format: int64
          example: 68
      additionalProperties: false
      description: A collection of VM NIC stats.
    vmm.v4.0.esxi.config.AssociateVmCategoriesParams:
      required:
      - categories
      type: object
      properties:
        categories:
          maxItems: 256
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.CategoryReference'
      additionalProperties: false
      description: List of categories to be associated to the VM.
    vmm.v4.0.esxi.config.AssociateCategoriesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/associate-categories\
        \ Post operation"
    vmm.v4.0.esxi.config.CategoryReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of an instance of type UUID.
          example: 8308d90d-846e-4d03-8ecc-db0222db2887
      additionalProperties: false
      description: Reference to a category.
    vmm.v4.0.esxi.config.DisassociateVmCategoriesParams:
      required:
      - categories
      type: object
      properties:
        categories:
          maxItems: 256
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.CategoryReference'
      additionalProperties: false
      description: List of categories to be disassociated from the VM.
    vmm.v4.0.esxi.config.DisassociateCategoriesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/disassociate-categories\
        \ Post operation"
    vmm.v4.0.esxi.config.GetVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.esxi.config.Vm
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.esxi.config.Vm'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}\
        \ Get operation"
    vmm.v4.0.esxi.config.Vm:
      description: VM configuration.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 80
            type: string
            description: VM name.
            example: Test VM
          cluster:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.ClusterReference'
          host:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.HostReference'
          description:
            type: string
            description: VM description.
            example: Description for your VM
          categories:
            maxItems: 256
            minItems: 0
            type: array
            description: Categories for the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.CategoryReference'
          ownershipInfo:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.OwnershipInfo'
          nutanixGuestTools:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestTools'
          powerState:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.PowerState'
          memorySizeBytes:
            minimum: 1
            type: integer
            description: Memory size in bytes.
            format: int64
            readOnly: true
            example: 67
          numCoresPerSocket:
            minimum: 1
            type: integer
            description: Number of cores per socket.
            format: int64
            readOnly: true
            example: 98
          numCpus:
            minimum: 1
            type: integer
            description: Number of vCPUs.
            format: int64
            readOnly: true
            example: 3
          guestOsName:
            maxLength: 256
            type: string
            description: Name of the guest OS.
            readOnly: true
            example: CentOS 7 (64-bit)
          virtualHardwareVersion:
            minimum: 1
            type: integer
            description: Virtual hardware version of the VM.
            format: int64
            readOnly: true
            example: 38
          disks:
            maxItems: 256
            minItems: 0
            type: array
            description: Disks attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.Disk'
          cdRoms:
            maxItems: 256
            minItems: 0
            type: array
            description: CD-ROMs attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.CdRom'
          nics:
            maxItems: 32
            minItems: 0
            type: array
            description: NICs attached to the VM.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.Nic'
        additionalProperties: false
    vmm.v4.0.esxi.config.HostReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of a host type UUID.
          example: 3bd4ab0c-56f5-49ef-abb7-d574fe4278b8
      additionalProperties: false
      description: "Reference to the host, the VM is running on."
    vmm.v4.0.esxi.config.OwnershipInfo:
      required:
      - owner
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.OwnerReference'
      additionalProperties: false
      description: Ownership information for the VM.
    vmm.v4.0.esxi.config.NutanixGuestTools:
      type: object
      properties:
        version:
          type: string
          description: Version of Nutanix Guest Tools installed on the VM.
          readOnly: true
        isInstalled:
          type: boolean
          description: Indicates whether Nutanix Guest Tools is installed on the VM
            or not.
          readOnly: true
          example: false
        isEnabled:
          type: boolean
          description: Indicates whether Nutanix Guest Tools is enabled or not.
          example: false
        isIsoInserted:
          type: boolean
          description: Indicates whether Nutanix Guest Tools ISO is inserted or not.
          readOnly: true
          example: false
        capabilities:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          description: The list of the application names that are enabled on the guest
            VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestToolsCapability'
        availableVersion:
          type: string
          description: Version of Nutanix Guest Tools available on the cluster.
          readOnly: true
        guestOsVersion:
          type: string
          description: Version of the operating system on the VM.
          readOnly: true
        isReachable:
          type: boolean
          description: Indicates whether the communication from VM to CVM is active
            or not.
          readOnly: true
          example: true
        isVssSnapshotCapable:
          type: boolean
          description: Indicates whether the VM is configured to take VSS snapshots
            through NGT or not.
          readOnly: true
          example: true
        isVmMobilityDriversInstalled:
          type: boolean
          description: Indicates whether the VM mobility drivers are installed on
            the VM or not.
          readOnly: true
          example: false
      additionalProperties: false
      description: The details about Nutanix Guest Tools for a VM.
    vmm.v4.0.esxi.config.PowerState:
      type: string
      description: The current power state of the VM.
      enum:
      - "ON"
      - "OFF"
      - SUSPENDED
      - UNDETERMINED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        UNDETERMINED: The VM power state is currently unknown.
        SUSPENDED: The VM power state is currently suspended.
        $UNKNOWN: |
          Unknown value.
        "OFF": The VM is powered-off.
        $REDACTED: |
          Redacted value.
        "ON": The VM is powered-on.
    vmm.v4.0.esxi.config.Disk:
      description: Virtual Machine disk (VM disk).
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          diskAddress:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.DiskAddress'
          backingInfo:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.VmDisk'
        additionalProperties: false
    vmm.v4.0.esxi.config.CdRom:
      description: Virtual Machine CD-ROM.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          diskAddress:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.CdRomAddress'
          backingInfo:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.CdRomBackingInfo'
        additionalProperties: false
    vmm.v4.0.esxi.config.Nic:
      description: Virtual Machine NIC.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          backingInfo:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.NicBackingInfo'
          networkInfo:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.NicNetworkInfo'
        additionalProperties: false
    vmm.v4.0.esxi.config.ClusterReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of an instance of type UUID.
          example: a40705ba-6c50-43c4-991c-452cbec6df24
      additionalProperties: false
      description: Reference to a cluster.
    vmm.v4.0.esxi.config.OwnerReference:
      type: object
      properties:
        entityType:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.OwnerReferenceEntityType'
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The globally unique identifier of an instance of type UUID.
          example: 5b54f51c-bffa-4d2e-9fc9-e6f4eee27d5f
      additionalProperties: false
      description: Owner reference.
    vmm.v4.0.esxi.config.OwnerReferenceEntityType:
      type: string
      description: Type of the entity that the owner reference is pointing to.
      enum:
      - USER
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        USER: Entity type that the owner reference is pointing to is User.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.esxi.config.NutanixGuestToolsCapability:
      type: string
      description: The capabilities of the Nutanix Guest Tools in the VM.
      enum:
      - SELF_SERVICE_RESTORE
      - VSS_SNAPSHOT
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VSS_SNAPSHOT: Enablement status of the Volume Snapshot Service application.
        $UNKNOWN: |
          Unknown value.
        SELF_SERVICE_RESTORE: Enablement status of the Self Service Restore application.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.esxi.config.DiskAddress:
      type: object
      properties:
        busType:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.DiskBusType'
        index:
          minimum: 0
          type: integer
          description: Device index on the bus. This field is ignored unless the bus
            details are specified.
          format: int32
          readOnly: true
          example: 54
      additionalProperties: false
      description: Disk address.
    vmm.v4.0.esxi.config.VmDisk:
      type: object
      properties:
        diskSizeBytes:
          minimum: 1
          type: integer
          description: Size of the disk in bytes.
          format: int64
          readOnly: true
          example: 98
        storageContainer:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.VmDiskContainerReference'
        storageConfig:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.VmDiskStorageConfig'
      additionalProperties: false
      description: Storage provided by Nutanix ADSF.
    vmm.v4.0.esxi.config.DiskBusType:
      type: string
      description: "Bus type for the device. The acceptable values are: SCSI, IDE,\
        \ PCI, SATA, SPAPR (only PPC)."
      enum:
      - SCSI
      - IDE
      - SATA
      - NVME
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        SCSI: The type of disk bus is SCSI.
        NVME: The type of disk bus is NVME.
        IDE: The type of disk bus is IDE.
        $UNKNOWN: |
          Unknown value.
        SATA: The type of disk bus is SATA.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.esxi.config.VmDiskContainerReference:
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM disk container. It should
            be of type UUID.
          readOnly: true
          example: a07a4e30-c19a-44a2-b2cb-b97ce4f82370
      additionalProperties: false
      description: This reference is for disk level storage container preference.
        This preference specifies the storage container to which this disk belongs.
    vmm.v4.0.esxi.config.VmDiskStorageConfig:
      type: object
      properties:
        isFlashModeEnabled:
          type: boolean
          description: Indicates whether the virtual disk is pinned to the hot tier
            or not.
          readOnly: true
          example: true
      additionalProperties: false
      description: Storage configuration for VM disks.
    vmm.v4.0.esxi.config.CdRomAddress:
      type: object
      properties:
        busType:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.CdRomBusType'
        index:
          minimum: 0
          type: integer
          description: Device index on the bus. This field is ignored unless the bus
            details are specified.
          format: int32
          readOnly: true
          example: 74
      additionalProperties: false
      description: CD-ROM address.
    vmm.v4.0.esxi.config.CdRomBackingInfo:
      type: object
      properties:
        diskExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: A globally unique identifier of a VM disk of type UUID.
          readOnly: true
          example: c15a8938-f93a-4ed8-bf9a-aeb2634afa01
        storageContainer:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.VmDiskContainerReference'
      additionalProperties: false
      description: Storage provided by Nutanix ADSF.
    vmm.v4.0.esxi.config.CdRomBusType:
      type: string
      description: "Bus type for the device. The acceptable values are: IDE or SATA."
      enum:
      - IDE
      - SATA
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        IDE: The type of CD-ROM bus is IDE.
        $UNKNOWN: |
          Unknown value.
        SATA: The type of CD-ROM bus is SATA.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.esxi.config.NicBackingInfo:
      type: object
      properties:
        macAddress:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
          description: MAC address of the NIC.
          readOnly: true
          example: 9f:bb:2f:97:1e:62
        isConnected:
          type: boolean
          description: Indicates whether the NIC is connected or not. Default is True.
          readOnly: true
          default: true
        adapterType:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.AdapterType'
      additionalProperties: false
      description: Information about how NIC is emulated.
    vmm.v4.0.esxi.config.NicNetworkInfo:
      type: object
      properties:
        portGroupInfo:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.PortGroupInfo'
        ipAddressInfo:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.IpAddressInfo'
      additionalProperties: false
      description: Network information for a NIC.
    vmm.v4.0.esxi.config.AdapterType:
      type: string
      description: Adapter type for VM NIC.
      enum:
      - E1000
      - PCNET32
      - VMXNET
      - VMXNET2
      - VMXNET3
      - E1000E
      - SRIOV
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        E1000E: The NIC adapter type is E1000e.
        E1000: The NIC adapter type is E1000.
        SRIOV: The NIC adapter type is Sriov.
        PCNET32: The NIC adapter type is PCNet32.
        VMXNET: The NIC adapter type is Vmxnet.
        $UNKNOWN: |
          Unknown value.
        VMXNET3: The NIC adapter type is Vmxnet3.
        $REDACTED: |
          Redacted value.
        VMXNET2: The NIC adapter type is Vmxnet2.
    vmm.v4.0.esxi.config.PortGroupInfo:
      type: object
      properties:
        name:
          maxLength: 128
          type: string
          description: Name of the Port Group.
          readOnly: true
      additionalProperties: false
      description: Information about the virtual network in the datacenter.
    vmm.v4.0.esxi.config.IpAddressInfo:
      type: object
      properties:
        ipv4Addresses:
          maxItems: 128
          minItems: 0
          type: array
          description: IP addresses for the NIC.
          readOnly: true
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
        ipv6Addresses:
          maxItems: 128
          minItems: 0
          type: array
          description: IPV6 addresses for the NIC.
          readOnly: true
          items:
            type: string
      additionalProperties: false
      description: The IP address information of NIC.
    vmm.v4.0.esxi.config.ListVmsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.config.Vm'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/esxi/config/vms
        Get operation
    vmm.v4.0.esxi.config.RevertParams:
      title: VM revert specification.
      required:
      - vmRecoveryPointExtId
      type: object
      properties:
        vmRecoveryPointExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: The external identifier of the VM Recovery Point.
          example: d1fe71c9-dee5-4989-9c1c-c0e4d5635a5c
      additionalProperties: false
      description: Input for the VM revert operation. Specify the VM Recovery Point
        ID to which the VM would be reverted.
    vmm.v4.0.esxi.config.RevertVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/revert\
        \ Post operation"
    vmm.v4.0.esxi.config.GetNutanixGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.esxi.config.NutanixGuestTools
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestTools'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
        \ Get operation"
    vmm.v4.0.esxi.config.UpdateNutanixGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools\
        \ Put operation"
    vmm.v4.0.esxi.config.NutanixGuestToolsInstallConfig:
      required:
      - credential
      type: object
      properties:
        capabilities:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          description: The list of the application names that are enabled on the guest
            VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestToolsCapability'
        credential:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixCredential'
        rebootPreference:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixRebootPreference'
      additionalProperties: false
      description: Arguments for installing Nutanix Guest Tools.
    vmm.v4.0.esxi.config.InstallNutanixGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/install\
        \ Post operation"
    vmm.v4.0.esxi.config.NutanixCredential:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 256
          type: string
          description: Username for the server.
          example: test_user
        password:
          type: string
          description: Password for the server.
          writeOnly: true
          example: test_password
      additionalProperties: false
      description: Sign in credentials for the server.
    vmm.v4.0.esxi.config.NutanixRebootPreference:
      type: object
      properties:
        scheduleType:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixScheduleType'
        schedule:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixRebootPreferenceSchedule'
      additionalProperties: false
      description: The restart schedule after installing or upgrading Nutanix Guest
        Tools.
    vmm.v4.0.esxi.config.NutanixScheduleType:
      type: string
      description: Schedule type for restart.
      enum:
      - SKIP
      - IMMEDIATE
      - LATER
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        LATER: Schedule a restart for a specific time.
        SKIP: Do not schedule a restart.
        $UNKNOWN: |
          Unknown value.
        IMMEDIATE: Schedule an immediate restart.
        $REDACTED: |
          Redacted value.
    vmm.v4.0.esxi.config.NutanixRebootPreferenceSchedule:
      type: object
      properties:
        startTime:
          type: string
          description: The start time for a scheduled restart.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      additionalProperties: false
      description: Restart schedule.
    vmm.v4.0.esxi.config.NutanixGuestToolsUpgradeConfig:
      type: object
      properties:
        rebootPreference:
          $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixRebootPreference'
      additionalProperties: false
      description: Arguments for upgrading Nutanix Guest Tools.
    vmm.v4.0.esxi.config.UpgradeNutanixGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/upgrade\
        \ Post operation"
    vmm.v4.0.esxi.config.NutanixGuestToolsInsertConfig:
      type: object
      properties:
        capabilities:
          maxItems: 2
          minItems: 0
          uniqueItems: true
          type: array
          description: The list of the application names that are enabled on the guest
            VM.
          items:
            $ref: '#/components/schemas/vmm.v4.0.esxi.config.NutanixGuestToolsCapability'
      additionalProperties: false
      description: Argument for inserting a Nutanix Guest Tools ISO into an available
        slot.
    vmm.v4.0.esxi.config.InsertNutanixGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/insert-iso\
        \ Post operation"
    vmm.v4.0.esxi.config.UninstallNutanixGuestToolsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/nutanix-guest-tools/$actions/uninstall\
        \ Post operation"
    vmm.v4.0.esxi.config.AssignVmOwnerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/assign-owner\
        \ Post operation"
    vmm.v4.0.esxi.config.PowerOnVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-on\
        \ Post operation"
    vmm.v4.0.esxi.config.PowerOffVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/power-off\
        \ Post operation"
    vmm.v4.0.esxi.config.ResetVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/reset\
        \ Post operation"
    vmm.v4.0.esxi.config.SuspendVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/suspend\
        \ Post operation"
    vmm.v4.0.esxi.config.ShutdownVmApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-shutdown\
        \ Post operation"
    vmm.v4.0.esxi.config.RebootGuestOSApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/config/vms/{extId}/$actions/guest-reboot\
        \ Post operation"
    vmm.v4.0.esxi.stats.ListVmStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms
        Get operation
    vmm.v4.0.esxi.stats.VmStats:
      description: A collection of VM stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          stats:
            type: array
            description: The timestamp of a specific VM stats response data point.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmStatsTuple'
        additionalProperties: false
    vmm.v4.0.esxi.stats.VmStatsTuple:
      type: object
      properties:
        checkScore:
          type: integer
          description: The VM NCC health check score.
          format: int64
          example: 53
        cluster:
          type: string
          description: The UUID of the cluster on which the VM resides.
        controllerAvgIoLatencyMicros:
          type: integer
          description: The VM controller average I/O latency in microseconds.
          format: int64
          example: 0
        controllerAvgReadIoLatencyMicros:
          type: integer
          description: The VM controller average read I/O latency in microseconds.
          format: int64
          example: 11
        controllerAvgReadIoSizeKb:
          type: integer
          description: The VM controller average read I/O size in kilobytes.
          format: int64
          example: 89
        controllerAvgWriteIoLatencyMicros:
          type: integer
          description: The VM controller average write I/O latency in microseconds.
          format: int64
          example: 56
        controllerAvgWriteIoSizeKb:
          type: integer
          description: The VM controller average write I/O size in kilobytes.
          format: int64
          example: 95
        controllerIoBandwidthKbps:
          type: integer
          description: The VM controller I/O bandwidth in kilobytes per second.
          format: int64
          example: 95
        controllerNumIo:
          type: integer
          description: The VM controller number of I/O requests.
          format: int64
          example: 36
        controllerNumIops:
          type: integer
          description: The VM controller number of I/O operations per second.
          format: int64
          example: 26
        controllerNumRandomIo:
          type: integer
          description: The VM controller number of random I/O.
          format: int64
          example: 18
        controllerNumReadIo:
          type: integer
          description: The VM controller number of read I/O.
          format: int64
          example: 98
        controllerNumReadIops:
          type: integer
          description: The VM controller number of read I/O operations per second.
          format: int64
          example: 26
        controllerNumSeqIo:
          type: integer
          description: The VM controller number of sequential I/Os.
          format: int64
          example: 69
        controllerNumWriteIo:
          type: integer
          description: The VM controller number of write I/O.
          format: int64
          example: 27
        controllerNumWriteIops:
          type: integer
          description: The VM controller number of write I/O operations per second.
          format: int64
          example: 99
        controllerRandomIoPpm:
          type: integer
          description: The VM controller number of random I/O PPM.
          format: int64
          example: 85
        controllerReadIoBandwidthKbps:
          type: integer
          description: The VM controller number of read I/O bandwidth in kilobytes
            per second.
          format: int64
          example: 8
        controllerReadIoPpm:
          type: integer
          description: The VM controller number of read I/O PPM.
          format: int64
          example: 93
        controllerSeqIoPpm:
          type: integer
          description: The VM controller number of sequential I/O PPM.
          format: int64
          example: 37
        controllerStorageTierSsdUsageBytes:
          type: integer
          description: The VM controller total usage on SSD tier for the VM.
          format: int64
          example: 87
        controllerTimespanMicros:
          type: integer
          description: The VM controller timespan in microseconds.
          format: int64
          example: 75
        controllerTotalIoSizeKb:
          type: integer
          description: The VM controller number of total I/O size in kilobytes.
          format: int64
          example: 52
        controllerTotalIoTimeMicros:
          type: integer
          description: The VM controller number of total I/O time in microseconds.
          format: int64
          example: 67
        controllerTotalReadIoSizeKb:
          type: integer
          description: The VM controller number of total read I/O size in kilobytes.
          format: int64
          example: 41
        controllerTotalReadIoTimeMicros:
          type: integer
          description: The VM controller number of total read I/O time in microseconds.
          format: int64
          example: 59
        controllerTotalTransformedUsageBytes:
          type: integer
          description: The VM controller number of total transformed usage in bytes.
          format: int64
          example: 56
        controllerUserBytes:
          type: integer
          description: The VM controller user bytes.
          format: int64
          example: 31
        controllerWriteIoBandwidthKbps:
          type: integer
          description: The VM controller write I/O bandwidth in kilobytes per second.
          format: int64
          example: 9
        controllerWriteIoPpm:
          type: integer
          description: The VM controller percentage of write I/O in parts per million.
          format: int64
          example: 79
        hypervisorAvgIoLatencyMicros:
          type: integer
          description: The average I/O latency of the VM in microseconds
          format: int64
          example: 62
        hypervisorCpuReadyTimePpm:
          type: integer
          description: "Percentage of time that the VM was ready, but could not get\
            \ scheduled to run."
          format: int64
          example: 70
        hypervisorCpuUsagePpm:
          type: integer
          description: The CPU usage of the VM in parts per million.
          format: int64
          example: 94
        hypervisorIoBandwidthKbps:
          type: integer
          description: The I/O bandwidth of the VM in kilobytes per second.
          format: int64
          example: 8
        hypervisorMemoryUsagePpm:
          type: integer
          description: Consolidated guest memory usage in percentage.
          format: int64
          example: 70
        hypervisorNumIo:
          type: integer
          description: The number of I/O by the VM.
          format: int64
          example: 11
        hypervisorNumIops:
          type: integer
          description: The number of I/O operations by the VM per second.
          format: int64
          example: 22
        hypervisorNumReadIo:
          type: integer
          description: The number of read I/O operations by the VM.
          format: int64
          example: 87
        hypervisorNumReadIops:
          type: integer
          description: The number of read I/O operations by the VM per second.
          format: int64
          example: 19
        hypervisorNumReceivedBytes:
          type: integer
          description: The number of bytes received by the VM.
          format: int64
          example: 30
        hypervisorNumTransmittedBytes:
          type: integer
          description: The number of bytes transmitted by the VM.
          format: int64
          example: 14
        hypervisorNumWriteIo:
          type: integer
          description: The number of write I/O by the VM.
          format: int64
          example: 28
        hypervisorNumWriteIops:
          type: integer
          description: The number of write I/O operations by the VM per second.
          format: int64
          example: 18
        hypervisorReadIoBandwidthKbps:
          type: integer
          description: The number of read I/O bandwidth of the VM in kilobytes per
            second.
          format: int64
          example: 83
        hypervisorSwapInRateKbps:
          type: integer
          description: The swap in rate of the VM in kilobytes per second.
          format: int64
          example: 7
        hypervisorSwapOutRateKbps:
          type: integer
          description: The swap out rate of the VM in kilobytes per second.
          format: int64
          example: 97
        hypervisorTimespanMicros:
          type: integer
          description: The timespan of the VM in microseconds.
          format: int64
          example: 74
        hypervisorTotalIoSizeKb:
          type: integer
          description: The total I/O size of the VM in kilobytes.
          format: int64
          example: 94
        hypervisorTotalIoTimeMicros:
          type: integer
          description: The total I/O time of the VM in microseconds.
          format: int64
          example: 57
        hypervisorTotalReadIoSizeKb:
          type: integer
          description: The total read I/O size of the VM in kilobytes.
          format: int64
          example: 94
        hypervisorWriteIoBandwidthKbps:
          type: integer
          description: The write I/O bandwidth of the VM in kilobytes per second.
          format: int64
          example: 99
        hypervisorType:
          type: string
          description: Hypervisor type of the VM.
        memoryUsagePpm:
          type: integer
          description: The VM memory usage in PPM.
          format: int64
          example: 70
        timestamp:
          type: string
          description: The timestamp of a specific VM stats response data point.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      additionalProperties: false
      description: A collection of VM stats.
    vmm.v4.0.esxi.stats.GetVmStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.esxi.stats.VmStats
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{extId}\
        \ Get operation"
    vmm.v4.0.esxi.stats.GetNicStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.esxi.stats.VmNicStats
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmNicStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/nics/{extId}\
        \ Get operation"
    vmm.v4.0.esxi.stats.VmNicStats:
      description: A collection of VM NIC stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          vmExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The VM external ID associated with the VM NIC stats.
            example: 8eaa0ae4-80f4-45e0-b3b7-f7f3c32a84ac
          stats:
            type: array
            description: The timestamp of a specific VM stats response data point.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmNicStatsTuple'
        additionalProperties: false
    vmm.v4.0.esxi.stats.VmNicStatsTuple:
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp of a specific VM stats response data point.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        networkDroppedReceivedPackets:
          type: integer
          description: The VM NIC number of dropped received packets.
          format: int64
          example: 55
        networkDroppedTransmittedPackets:
          type: integer
          description: The VM NIC number of dropped transmitted packets.
          format: int64
          example: 76
      additionalProperties: false
      description: A collection of VM NIC stats.
    vmm.v4.0.esxi.stats.GetDiskStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: vmm.v4.esxi.stats.VmDiskStats
          oneOf:
          - $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmDiskStats'
          - $ref: '#/components/schemas/vmm.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /vmm/v4.0/esxi/stats/vms/{vmExtId}/disks/{extId}\
        \ Get operation"
    vmm.v4.0.esxi.stats.VmDiskStats:
      description: A collection of VM disk stats.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          vmExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The VM external ID associated with the VM Disk stats.
            example: 1e930536-727f-4933-870b-7cf1e8c767a4
          stats:
            type: array
            description: The timestamp of a specific VM stats response data point.
            items:
              $ref: '#/components/schemas/vmm.v4.0.esxi.stats.VmDiskStatsTuple'
        additionalProperties: false
    vmm.v4.0.esxi.stats.VmDiskStatsTuple:
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp of a specific VM stats response data point.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        controllerNumIops:
          type: integer
          description: The VM disk controller number of I/O operations per second.
          format: int64
          example: 15
        controllerTotalReadIoTimeMicros:
          type: integer
          description: The VM disk controller total read I/O time in microseconds.
          format: int64
          example: 38
        controllerNumWriteIo:
          type: integer
          description: The VM disk controller number of write I/O.
          format: int64
          example: 41
        controllerTotalIoTimeMicros:
          type: integer
          description: The VM disk controller total I/O time in microseconds.
          format: int64
          example: 58
        controllerNumSeqIo:
          type: integer
          description: The VM disk controller number of sequential I/O.
          format: int64
          example: 41
        controllerTotalIoSizeKb:
          type: integer
          description: The VM disk controller total I/O size in kilobytes.
          format: int64
          example: 40
        controllerNumIo:
          type: integer
          description: The VM disk controller number of I/O.
          format: int64
          example: 17
        controllerWriteIoPpm:
          type: integer
          description: The VM disk controller percentage of write I/O in parts per
            million.
          format: int64
          example: 9
        controllerNumWriteIops:
          type: integer
          description: The VM disk controller number of write I/O operations per second.
          format: int64
          example: 76
        controllerAvgWriteIoLatencyMicros:
          type: integer
          description: The VM disk controller average write I/O latency in microseconds.
          format: int64
          example: 25
        controllerNumReadIops:
          type: integer
          description: The VM disk controller number of read I/O operations per second.
          format: int64
          example: 14
        controllerTotalReadIoSizeKb:
          type: integer
          description: The VM disk controller total read I/O size in kilobytes.
          format: int64
          example: 23
        controllerReadIoPpm:
          type: integer
          description: The VM disk controller percentage of read I/O in parts per
            million.
          format: int64
          example: 59
        controllerAvgIoLatencyMicros:
          type: integer
          description: The VM disk controller average I/O latency in microseconds.
          format: int64
          example: 42
        controllerNumReadIo:
          type: integer
          description: The VM disk controller number of read I/O.
          format: int64
          example: 2
        controllerSeqIoPpm:
          type: integer
          description: The VM disk controller percentage of sequential I/O in parts
            per million.
          format: int64
          example: 60
        controllerReadIoBandwidthKbps:
          type: integer
          description: The VM disk controller number of read I/O bandwidth in kilobytes
            per second.
          format: int64
          example: 37
        controllerIoBandwidthKbps:
          type: integer
          description: The VM disk controller number of I/O bandwidth in kilobytes
            per second.
          format: int64
          example: 33
        controllerWriteIoBandwidthKbps:
          type: integer
          description: The VM disk controller write I/O bandwidth in kilobytes per
            second.
          format: int64
          example: 70
        controllerUserBytes:
          type: integer
          description: The VM disk controller user bytes.
          format: int64
          example: 84
        controllerRandomIoPpm:
          type: integer
          description: The VM disk controller percentage of random I/O in parts per
            million.
          format: int64
          example: 21
        controllerAvgReadIoSizeKb:
          type: integer
          description: The VM disk controller average read I/O size in kilobytes.
          format: int64
          example: 1
        controllerAvgWriteIoSizeKb:
          type: integer
          description: The VM disk controller average write I/O size in kilobytes.
          format: int64
          example: 75
        controllerAvgReadIoLatencyMicros:
          type: integer
          description: The VM disk controller average read I/O latency in microseconds.
          format: int64
          example: 84
        controllerTimespanMicros:
          type: integer
          description: The VM disk controller timespan in microseconds.
          format: int64
          example: 97
      additionalProperties: false
      description: A collection of VM disk stats.
    vmm.v4.0.ahv.config.VmRecoveryPoint:
      title: VM Recovery Point
      description: A model that represents VM Recovery Point properties
      allOf:
      - $ref: '#/components/schemas/dataprotection.v4.0.common.BaseRecoveryPoint'
      - type: object
        properties:
          vm:
            $ref: '#/components/schemas/vmm.v4.0.ahv.config.Vm'
        additionalProperties: false
    dataprotection.v4.0.common.BaseRecoveryPoint:
      title: Recovery point properties
      description: A model that represents common properties of a Recovery point resources
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          locationAgnosticId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Location agnostic identifier of the Recovery point.
            readOnly: true
            example: e37185c9-f96b-4784-9050-9d6ca2b84b0a
          name:
            maxLength: 256
            type: string
            description: The name of the Recovery point.
            example: RecoveryPoint_1
          creationTime:
            type: string
            description: The UTC date and time in ISO-8601 format when the Recovery
              point is created.
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          expirationTime:
            type: string
            description: The UTC date and time in ISO-8601 format when the current
              Recovery point expires and will be garbage collected.
            format: date-time
            example: 2009-09-23T14:30:00-07:00
          status:
            $ref: '#/components/schemas/dataprotection.v4.0.common.RecoveryPointStatus'
          recoveryPointType:
            $ref: '#/components/schemas/dataprotection.v4.0.common.RecoveryPointType'
        additionalProperties: false
    dataprotection.v4.0.common.RecoveryPointStatus:
      type: string
      description: "The status of the Recovery point, which indicates whether this\
        \ Recovery point is fit to be consumed."
      enum:
      - COMPLETE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        COMPLETE: The Recovery point is in a complete state and ready to be consumed.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    dataprotection.v4.0.common.RecoveryPointType:
      type: string
      description: Type of the Recovery point.
      enum:
      - CRASH_CONSISTENT
      - APPLICATION_CONSISTENT
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        $UNKNOWN: |
          Unknown value.
        CRASH_CONSISTENT: Crash-consistent Recovery points capture all the VM and
          application level details.
        $REDACTED: |
          Redacted value.
        APPLICATION_CONSISTENT: Application-consistent Recovery points can capture
          all the data stored in the memory and also the in-progress transaction details.
  securitySchemes:
    basicAuthScheme:
      type: http
      scheme: basic
    apiKeyAuthScheme:
      type: apiKey
      name: X-ntnx-api-key
      in: header
